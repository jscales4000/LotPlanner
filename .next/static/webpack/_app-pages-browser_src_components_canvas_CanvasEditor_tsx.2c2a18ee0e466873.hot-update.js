"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_components_canvas_CanvasEditor_tsx",{

/***/ "(app-pages-browser)/./src/components/canvas/CanvasEditor.tsx":
/*!************************************************!*\
  !*** ./src/components/canvas/CanvasEditor.tsx ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_konva__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-konva */ \"(app-pages-browser)/./node_modules/react-konva/es/ReactKonva.js\");\n/* harmony import */ var _GridLayer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GridLayer */ \"(app-pages-browser)/./src/components/canvas/GridLayer.tsx\");\n/* harmony import */ var _EquipmentLayer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EquipmentLayer */ \"(app-pages-browser)/./src/components/canvas/EquipmentLayer.tsx\");\n/* harmony import */ var _BackgroundLayer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BackgroundLayer */ \"(app-pages-browser)/./src/components/canvas/BackgroundLayer.tsx\");\n/* harmony import */ var _BackgroundImageManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./BackgroundImageManager */ \"(app-pages-browser)/./src/components/canvas/BackgroundImageManager.tsx\");\n/* harmony import */ var _ScaleBar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ScaleBar */ \"(app-pages-browser)/./src/components/canvas/ScaleBar.tsx\");\n/* harmony import */ var _MeasurementTool__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./MeasurementTool */ \"(app-pages-browser)/./src/components/canvas/MeasurementTool.tsx\");\n/* harmony import */ var _DistanceInputModal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./DistanceInputModal */ \"(app-pages-browser)/./src/components/canvas/DistanceInputModal.tsx\");\n/* harmony import */ var _SimpleMeasurementTool__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./SimpleMeasurementTool */ \"(app-pages-browser)/./src/components/canvas/SimpleMeasurementTool.tsx\");\n/* harmony import */ var _EnhancedMeasurementTool__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./EnhancedMeasurementTool */ \"(app-pages-browser)/./src/components/canvas/EnhancedMeasurementTool.tsx\");\n/* harmony import */ var _EnhancedCalibrateDialog__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./EnhancedCalibrateDialog */ \"(app-pages-browser)/./src/components/canvas/EnhancedCalibrateDialog.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\nconst CanvasEditor = (param)=>{\n    let { width = 1200, height = 800, className = '', onEquipmentAdd, placedEquipment = [], equipmentDefinitions, onEquipmentSelect, onEquipmentMove, onEquipmentRotate, onEquipmentDelete, selectedEquipmentId, backgroundImages = [], onBackgroundImageAdd, onBackgroundImageUpdate, onBackgroundImageDelete, onCanvasReady } = param;\n    _s();\n    const stageRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isClient, setIsClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Canvas configuration for 1,000,000 sq ft (1000ft x 1000ft)\n    const CANVAS_AREA_SQ_FT = 1000000;\n    const CANVAS_SIDE_FT = Math.sqrt(CANVAS_AREA_SQ_FT) // 1000 feet\n    ;\n    const PIXELS_PER_FOOT = 10 // Optimized for performance with ultra-large areas\n    ;\n    const CANVAS_SIZE_PIXELS = CANVAS_SIDE_FT * PIXELS_PER_FOOT // 10000 pixels\n    ;\n    const [canvasState, setCanvasState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        scale: 0.2,\n        x: 0,\n        y: 0\n    });\n    const [stageSize, setStageSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width,\n        height\n    });\n    const [gridVisible, setGridVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [backgroundManagerOpen, setBackgroundManagerOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [selectedBackgroundImageId, setSelectedBackgroundImageId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [scaleBarVisible, setScaleBarVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [measurementToolActive, setMeasurementToolActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [measurements, setMeasurements] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [activeMeasurementTool, setActiveMeasurementTool] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [simpleMeasurements, setSimpleMeasurements] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [showDistanceInput, setShowDistanceInput] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [distanceInputData, setDistanceInputData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Enhanced measurement workflow states\n    const [measurementEditMode, setMeasurementEditMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [currentMeasurement, setCurrentMeasurement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [showCalibrateDialog, setShowCalibrateDialog] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Handle canvas ready callback\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CanvasEditor.useEffect\": ()=>{\n            if (isClient && onCanvasReady) {\n                // Use a timeout to ensure the stage is fully mounted\n                const timeout = setTimeout({\n                    \"CanvasEditor.useEffect.timeout\": ()=>{\n                        if (stageRef.current) {\n                            const container = stageRef.current.container();\n                            if (container) {\n                                console.log('Canvas ready, calling onCanvasReady with container:', container);\n                                onCanvasReady(container);\n                            }\n                        }\n                    }\n                }[\"CanvasEditor.useEffect.timeout\"], 100) // Small delay to ensure stage is mounted\n                ;\n                return ({\n                    \"CanvasEditor.useEffect\": ()=>clearTimeout(timeout)\n                })[\"CanvasEditor.useEffect\"];\n            }\n        }\n    }[\"CanvasEditor.useEffect\"], [\n        onCanvasReady,\n        isClient\n    ]);\n    // Handle window resize to make canvas responsive\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CanvasEditor.useEffect\": ()=>{\n            const handleResize = {\n                \"CanvasEditor.useEffect.handleResize\": ()=>{\n                    if (stageRef.current) {\n                        const container = stageRef.current.container();\n                        const containerWidth = container.offsetWidth;\n                        const containerHeight = container.offsetHeight;\n                        setStageSize({\n                            width: containerWidth,\n                            height: containerHeight\n                        });\n                    }\n                }\n            }[\"CanvasEditor.useEffect.handleResize\"];\n            window.addEventListener('resize', handleResize);\n            handleResize(); // Initial call\n            return ({\n                \"CanvasEditor.useEffect\": ()=>window.removeEventListener('resize', handleResize)\n            })[\"CanvasEditor.useEffect\"];\n        }\n    }[\"CanvasEditor.useEffect\"], []);\n    // Handle zoom with mouse wheel\n    const handleWheel = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleWheel]\": (e)=>{\n            e.evt.preventDefault();\n            const stage = e.target.getStage();\n            if (!stage) return;\n            const oldScale = stage.scaleX();\n            const pointer = stage.getPointerPosition();\n            if (!pointer) return;\n            // Zoom sensitivity\n            const scaleBy = 1.1;\n            const newScale = e.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy;\n            // Limit zoom range - allow zooming out to 4% to match Max Out button\n            const minScale = 0.04 // 4% minimum zoom\n            ;\n            const maxScale = 5;\n            const clampedScale = Math.max(minScale, Math.min(maxScale, newScale));\n            // Calculate new position to zoom towards mouse pointer\n            const mousePointTo = {\n                x: (pointer.x - stage.x()) / oldScale,\n                y: (pointer.y - stage.y()) / oldScale\n            };\n            const newPos = {\n                x: pointer.x - mousePointTo.x * clampedScale,\n                y: pointer.y - mousePointTo.y * clampedScale\n            };\n            stage.scale({\n                x: clampedScale,\n                y: clampedScale\n            });\n            stage.position(newPos);\n            stage.batchDraw();\n            setCanvasState({\n                scale: clampedScale,\n                x: newPos.x,\n                y: newPos.y\n            });\n        }\n    }[\"CanvasEditor.useCallback[handleWheel]\"], []);\n    // Handle panning with mouse drag\n    const handleDragEnd = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleDragEnd]\": (e)=>{\n            const stage = e.target;\n            setCanvasState({\n                \"CanvasEditor.useCallback[handleDragEnd]\": (prev)=>({\n                        ...prev,\n                        x: stage.x(),\n                        y: stage.y()\n                    })\n            }[\"CanvasEditor.useCallback[handleDragEnd]\"]);\n        }\n    }[\"CanvasEditor.useCallback[handleDragEnd]\"], []);\n    // Reset canvas to center and default zoom for 250k sq ft canvas\n    const resetCanvas = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[resetCanvas]\": ()=>{\n            const defaultScale = 0.2 // 20% zoom for large canvas overview\n            ;\n            const centerX = stageSize.width / 2 - CANVAS_SIZE_PIXELS / 2 * defaultScale;\n            const centerY = stageSize.height / 2 - CANVAS_SIZE_PIXELS / 2 * defaultScale;\n            if (stageRef.current) {\n                stageRef.current.scale({\n                    x: defaultScale,\n                    y: defaultScale\n                });\n                stageRef.current.position({\n                    x: centerX,\n                    y: centerY\n                });\n                stageRef.current.batchDraw();\n            }\n            setCanvasState({\n                scale: defaultScale,\n                x: centerX,\n                y: centerY\n            });\n        }\n    }[\"CanvasEditor.useCallback[resetCanvas]\"], [\n        stageSize,\n        CANVAS_SIZE_PIXELS\n    ]);\n    // Fit canvas to show all equipment with proper centering and zoom\n    const fitToContent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[fitToContent]\": ()=>{\n            console.log('=== FIT TO CONTENT CALLED ===');\n            console.log('placedEquipment:', placedEquipment);\n            if (!placedEquipment || placedEquipment.length === 0) {\n                console.log('No equipment to fit to, resetting canvas');\n                resetCanvas();\n                return;\n            }\n            // Calculate bounding box of all equipment including their clearance zones\n            let minX = Infinity, maxX = -Infinity;\n            let minY = Infinity, maxY = -Infinity;\n            placedEquipment.forEach({\n                \"CanvasEditor.useCallback[fitToContent]\": (equipment)=>{\n                    const equipmentDef = equipmentDefinitions === null || equipmentDefinitions === void 0 ? void 0 : equipmentDefinitions.find({\n                        \"CanvasEditor.useCallback[fitToContent]\": (def)=>def.id === equipment.equipmentId\n                    }[\"CanvasEditor.useCallback[fitToContent]\"]);\n                    if (!equipmentDef) return;\n                    const dimensions = equipment.dimensions;\n                    const isCircular = dimensions.shape === 'circle';\n                    // Calculate equipment bounds including clearance\n                    const clearance = equipmentDef.rideClearing || 0;\n                    const clearancePixels = clearance * PIXELS_PER_FOOT;\n                    let equipmentMinX, equipmentMaxX, equipmentMinY, equipmentMaxY;\n                    if (isCircular) {\n                        const radius = dimensions.radius * PIXELS_PER_FOOT;\n                        equipmentMinX = equipment.x - radius - clearancePixels;\n                        equipmentMaxX = equipment.x + radius + clearancePixels;\n                        equipmentMinY = equipment.y - radius - clearancePixels;\n                        equipmentMaxY = equipment.y + radius + clearancePixels;\n                    } else {\n                        const width = dimensions.width * PIXELS_PER_FOOT;\n                        const height = dimensions.height * PIXELS_PER_FOOT;\n                        equipmentMinX = equipment.x - width / 2 - clearancePixels;\n                        equipmentMaxX = equipment.x + width / 2 + clearancePixels;\n                        equipmentMinY = equipment.y - height / 2 - clearancePixels;\n                        equipmentMaxY = equipment.y + height / 2 + clearancePixels;\n                    }\n                    minX = Math.min(minX, equipmentMinX);\n                    maxX = Math.max(maxX, equipmentMaxX);\n                    minY = Math.min(minY, equipmentMinY);\n                    maxY = Math.max(maxY, equipmentMaxY);\n                }\n            }[\"CanvasEditor.useCallback[fitToContent]\"]);\n            // Add padding around the bounding box\n            const padding = 100 // 100 pixels padding\n            ;\n            minX -= padding;\n            maxX += padding;\n            minY -= padding;\n            maxY += padding;\n            // Calculate the center of all equipment\n            const centerX = (minX + maxX) / 2;\n            const centerY = (minY + maxY) / 2;\n            // Calculate required scale to fit all equipment in viewport\n            const contentWidth = maxX - minX;\n            const contentHeight = maxY - minY;\n            const scaleX = stageSize.width / contentWidth;\n            const scaleY = stageSize.height / contentHeight;\n            const optimalScale = Math.min(scaleX, scaleY, 2) // Cap at 2x zoom\n            ;\n            // Calculate the position to center the content\n            const newX = stageSize.width / 2 - centerX * optimalScale;\n            const newY = stageSize.height / 2 - centerY * optimalScale;\n            // Apply the new view settings to both stage and state\n            console.log('Applying new canvas state:', {\n                scale: optimalScale,\n                x: newX,\n                y: newY,\n                contentBounds: {\n                    minX,\n                    maxX,\n                    minY,\n                    maxY\n                },\n                center: {\n                    centerX,\n                    centerY\n                }\n            });\n            if (stageRef.current) {\n                stageRef.current.scale({\n                    x: optimalScale,\n                    y: optimalScale\n                });\n                stageRef.current.position({\n                    x: newX,\n                    y: newY\n                });\n                stageRef.current.batchDraw();\n            }\n            setCanvasState({\n                scale: optimalScale,\n                x: newX,\n                y: newY\n            });\n        }\n    }[\"CanvasEditor.useCallback[fitToContent]\"], [\n        placedEquipment,\n        equipmentDefinitions,\n        stageSize,\n        resetCanvas\n    ]);\n    // Zoom in function\n    const zoomIn = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[zoomIn]\": ()=>{\n            if (!stageRef.current) return;\n            const stage = stageRef.current;\n            const oldScale = stage.scaleX();\n            const scaleBy = 1.1;\n            const newScale = Math.min(5, oldScale * scaleBy) // Max zoom 5x\n            ;\n            // Zoom towards center of visible area\n            const center = {\n                x: stageSize.width / 2,\n                y: stageSize.height / 2\n            };\n            const mousePointTo = {\n                x: (center.x - stage.x()) / oldScale,\n                y: (center.y - stage.y()) / oldScale\n            };\n            const newPos = {\n                x: center.x - mousePointTo.x * newScale,\n                y: center.y - mousePointTo.y * newScale\n            };\n            stage.scale({\n                x: newScale,\n                y: newScale\n            });\n            stage.position(newPos);\n            stage.batchDraw();\n            setCanvasState({\n                scale: newScale,\n                x: newPos.x,\n                y: newPos.y\n            });\n        }\n    }[\"CanvasEditor.useCallback[zoomIn]\"], [\n        stageSize\n    ]);\n    // Zoom out function\n    const zoomOut = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[zoomOut]\": ()=>{\n            if (!stageRef.current) return;\n            const stage = stageRef.current;\n            const oldScale = stage.scaleX();\n            const scaleBy = 1.1;\n            const newScale = Math.max(0.04, oldScale / scaleBy) // Min zoom 0.04x (4%)\n            ;\n            // Zoom towards center of visible area\n            const center = {\n                x: stageSize.width / 2,\n                y: stageSize.height / 2\n            };\n            const mousePointTo = {\n                x: (center.x - stage.x()) / oldScale,\n                y: (center.y - stage.y()) / oldScale\n            };\n            const newPos = {\n                x: center.x - mousePointTo.x * newScale,\n                y: center.y - mousePointTo.y * newScale\n            };\n            stage.scale({\n                x: newScale,\n                y: newScale\n            });\n            stage.position(newPos);\n            stage.batchDraw();\n            setCanvasState({\n                scale: newScale,\n                x: newPos.x,\n                y: newPos.y\n            });\n        }\n    }[\"CanvasEditor.useCallback[zoomOut]\"], [\n        stageSize\n    ]);\n    // Calculate visible bounds for performance optimization\n    const getVisibleBounds = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[getVisibleBounds]\": ()=>{\n            const buffer = 1000 // pixels buffer for smooth scrolling\n            ;\n            return {\n                minX: -canvasState.x / canvasState.scale - buffer,\n                maxX: (-canvasState.x + stageSize.width) / canvasState.scale + buffer,\n                minY: -canvasState.y / canvasState.scale - buffer,\n                maxY: (-canvasState.y + stageSize.height) / canvasState.scale + buffer\n            };\n        }\n    }[\"CanvasEditor.useCallback[getVisibleBounds]\"], [\n        canvasState.x,\n        canvasState.y,\n        canvasState.scale,\n        stageSize\n    ]);\n    // Handle measurement tool clicks\n    const handleMeasurementToolClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleMeasurementToolClick]\": (x, y)=>{\n            console.log('handleMeasurementToolClick called:', {\n                x,\n                y,\n                activeMeasurementTool\n            });\n            if (!activeMeasurementTool) return;\n            // Forward click to SimpleMeasurementTool via global handlers\n            const handlers = window.measurementToolHandlers;\n            console.log('Global handlers:', handlers);\n            if (handlers && handlers.handleClick) {\n                console.log('Calling handlers.handleClick');\n                handlers.handleClick(x, y);\n            } else {\n                console.log('No global handlers found');\n            }\n        }\n    }[\"CanvasEditor.useCallback[handleMeasurementToolClick]\"], [\n        activeMeasurementTool\n    ]);\n    // Handle double-click to complete area/perimeter measurements\n    const handleMeasurementToolDoubleClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleMeasurementToolDoubleClick]\": (x, y)=>{\n            if (!activeMeasurementTool) return;\n            console.log('Double-click for measurement tool:', {\n                x,\n                y,\n                activeMeasurementTool\n            });\n            // Find incomplete measurement\n            const currentMeasurement = simpleMeasurements.find({\n                \"CanvasEditor.useCallback[handleMeasurementToolDoubleClick].currentMeasurement\": (m)=>!m.completed\n            }[\"CanvasEditor.useCallback[handleMeasurementToolDoubleClick].currentMeasurement\"]);\n            if (!currentMeasurement || currentMeasurement.points.length < 2) return;\n            let value = 0;\n            let label = '';\n            if (activeMeasurementTool === 'area') {\n                // Calculate area using shoelace formula\n                if (currentMeasurement.points.length < 3) return;\n                let area = 0;\n                const points = currentMeasurement.points;\n                const n = points.length;\n                for(let i = 0; i < n; i++){\n                    const j = (i + 1) % n;\n                    area += points[i].x * points[j].y;\n                    area -= points[j].x * points[i].y;\n                }\n                area = Math.abs(area) / 2;\n                value = area / (PIXELS_PER_FOOT * PIXELS_PER_FOOT // Convert to square feet\n                );\n                label = \"Area: \".concat(value.toFixed(0), \" sq ft\");\n            } else if (activeMeasurementTool === 'perimeter') {\n                // Calculate perimeter\n                let perimeter = 0;\n                const points = currentMeasurement.points;\n                for(let i = 0; i < points.length - 1; i++){\n                    const dx = points[i + 1].x - points[i].x;\n                    const dy = points[i + 1].y - points[i].y;\n                    perimeter += Math.sqrt(dx * dx + dy * dy);\n                }\n                // Close the perimeter (connect last point to first)\n                if (points.length > 2) {\n                    const dx = points[0].x - points[points.length - 1].x;\n                    const dy = points[0].y - points[points.length - 1].y;\n                    perimeter += Math.sqrt(dx * dx + dy * dy);\n                }\n                value = perimeter / PIXELS_PER_FOOT; // Convert to feet\n                label = \"Perimeter: \".concat(value.toFixed(0), \" ft\");\n            }\n            // Complete the measurement\n            const completedMeasurement = {\n                ...currentMeasurement,\n                value,\n                label,\n                completed: true\n            };\n            setSimpleMeasurements({\n                \"CanvasEditor.useCallback[handleMeasurementToolDoubleClick]\": (prev)=>prev.map({\n                        \"CanvasEditor.useCallback[handleMeasurementToolDoubleClick]\": (m)=>m.id === currentMeasurement.id ? completedMeasurement : m\n                    }[\"CanvasEditor.useCallback[handleMeasurementToolDoubleClick]\"])\n            }[\"CanvasEditor.useCallback[handleMeasurementToolDoubleClick]\"]);\n            console.log('Measurement completed:', completedMeasurement);\n        }\n    }[\"CanvasEditor.useCallback[handleMeasurementToolDoubleClick]\"], [\n        activeMeasurementTool,\n        simpleMeasurements,\n        PIXELS_PER_FOOT\n    ]);\n    // Enhanced measurement handlers\n    const handleEnhancedMeasurementPointSet = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleEnhancedMeasurementPointSet]\": (point)=>{\n            if (!currentMeasurement) return;\n            if (!currentMeasurement.firstPoint) {\n                // Set first point\n                setCurrentMeasurement({\n                    \"CanvasEditor.useCallback[handleEnhancedMeasurementPointSet]\": (prev)=>prev ? {\n                            ...prev,\n                            firstPoint: point\n                        } : null\n                }[\"CanvasEditor.useCallback[handleEnhancedMeasurementPointSet]\"]);\n            } else if (!currentMeasurement.secondPoint) {\n                // Set second point and complete measurement\n                const updatedMeasurement = {\n                    ...currentMeasurement,\n                    secondPoint: point,\n                    isComplete: true\n                };\n                setCurrentMeasurement(updatedMeasurement);\n                // Calculate distance and show calibration dialog\n                const dx = point.x - currentMeasurement.firstPoint.x;\n                const dy = point.y - currentMeasurement.firstPoint.y;\n                const pixelDistance = Math.sqrt(dx * dx + dy * dy);\n                const calculatedDistance = pixelDistance / PIXELS_PER_FOOT;\n                // Show calibration dialog after a short delay\n                setTimeout({\n                    \"CanvasEditor.useCallback[handleEnhancedMeasurementPointSet]\": ()=>{\n                        setShowCalibrateDialog(true);\n                    }\n                }[\"CanvasEditor.useCallback[handleEnhancedMeasurementPointSet]\"], 500);\n            }\n        }\n    }[\"CanvasEditor.useCallback[handleEnhancedMeasurementPointSet]\"], [\n        currentMeasurement,\n        PIXELS_PER_FOOT\n    ]);\n    const handleEnhancedMeasurementEdit = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleEnhancedMeasurementEdit]\": (firstPoint, secondPoint)=>{\n            if (!currentMeasurement) return;\n            setCurrentMeasurement({\n                \"CanvasEditor.useCallback[handleEnhancedMeasurementEdit]\": (prev)=>prev ? {\n                        ...prev,\n                        firstPoint,\n                        secondPoint\n                    } : null\n            }[\"CanvasEditor.useCallback[handleEnhancedMeasurementEdit]\"]);\n        }\n    }[\"CanvasEditor.useCallback[handleEnhancedMeasurementEdit]\"], [\n        currentMeasurement\n    ]);\n    const handleCalibrateSubmit = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleCalibrateSubmit]\": (actualDistance)=>{\n            if (!currentMeasurement || !currentMeasurement.firstPoint || !currentMeasurement.secondPoint) return;\n            // Calculate the scale factor\n            const dx = currentMeasurement.secondPoint.x - currentMeasurement.firstPoint.x;\n            const dy = currentMeasurement.secondPoint.y - currentMeasurement.firstPoint.y;\n            const pixelDistance = Math.sqrt(dx * dx + dy * dy);\n            const scaleFactor = actualDistance / (pixelDistance / PIXELS_PER_FOOT);\n            // Update the measurement with real-world distance\n            setCurrentMeasurement({\n                \"CanvasEditor.useCallback[handleCalibrateSubmit]\": (prev)=>prev ? {\n                        ...prev,\n                        realWorldDistance: actualDistance\n                    } : null\n            }[\"CanvasEditor.useCallback[handleCalibrateSubmit]\"]);\n            // Apply scale calibration to background images if any\n            if (backgroundImages && backgroundImages.length > 0 && onBackgroundImageUpdate) {\n                backgroundImages.forEach({\n                    \"CanvasEditor.useCallback[handleCalibrateSubmit]\": (image)=>{\n                        onBackgroundImageUpdate(image.id, {\n                            scaleX: (image.scaleX || 1) * scaleFactor,\n                            scaleY: (image.scaleY || 1) * scaleFactor\n                        });\n                    }\n                }[\"CanvasEditor.useCallback[handleCalibrateSubmit]\"]);\n            }\n            setShowCalibrateDialog(false);\n            console.log('Scale calibrated with factor:', scaleFactor);\n        }\n    }[\"CanvasEditor.useCallback[handleCalibrateSubmit]\"], [\n        currentMeasurement,\n        PIXELS_PER_FOOT,\n        backgroundImages,\n        onBackgroundImageUpdate\n    ]);\n    const handleCalibrateEdit = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleCalibrateEdit]\": ()=>{\n            setShowCalibrateDialog(false);\n            setMeasurementEditMode(true);\n        }\n    }[\"CanvasEditor.useCallback[handleCalibrateEdit]\"], []);\n    const handleCalibrateCancel = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleCalibrateCancel]\": ()=>{\n            setShowCalibrateDialog(false);\n            // Optionally reset the measurement\n            setCurrentMeasurement(null);\n            setMeasurementToolActive(false);\n        }\n    }[\"CanvasEditor.useCallback[handleCalibrateCancel]\"], []);\n    // Handle canvas clicks for measurement tools\n    const handleCanvasClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleCanvasClick]\": (x, y)=>{\n            if (!activeMeasurementTool) return;\n            console.log('Canvas click for measurement tool (raw):', {\n                x,\n                y,\n                activeMeasurementTool\n            });\n            // Transform screen coordinates to canvas coordinates\n            // Account for canvas zoom and pan\n            const canvasX = (x - canvasState.x) / canvasState.scale;\n            const canvasY = (y - canvasState.y) / canvasState.scale;\n            console.log('Canvas click for measurement tool (transformed):', {\n                canvasX,\n                canvasY,\n                canvasState\n            });\n            const newPoint = {\n                x: canvasX,\n                y: canvasY\n            };\n            if (simpleMeasurements.some({\n                \"CanvasEditor.useCallback[handleCanvasClick]\": (m)=>!m.completed\n            }[\"CanvasEditor.useCallback[handleCanvasClick]\"])) {\n                // Continue existing measurement\n                const currentMeasurement = simpleMeasurements.find({\n                    \"CanvasEditor.useCallback[handleCanvasClick].currentMeasurement\": (m)=>!m.completed\n                }[\"CanvasEditor.useCallback[handleCanvasClick].currentMeasurement\"]);\n                if (currentMeasurement) {\n                    const updatedPoints = [\n                        ...currentMeasurement.points,\n                        newPoint\n                    ];\n                    // For distance tool, complete after 2 points\n                    if (activeMeasurementTool === 'distance' && updatedPoints.length === 2) {\n                        const distance = Math.sqrt(Math.pow(updatedPoints[1].x - updatedPoints[0].x, 2) + Math.pow(updatedPoints[1].y - updatedPoints[0].y, 2)) / PIXELS_PER_FOOT;\n                        const completedMeasurement = {\n                            ...currentMeasurement,\n                            points: updatedPoints,\n                            value: distance,\n                            label: \"Distance: \".concat(distance.toFixed(0), \" ft\"),\n                            completed: true\n                        };\n                        setSimpleMeasurements({\n                            \"CanvasEditor.useCallback[handleCanvasClick]\": (prev)=>prev.map({\n                                    \"CanvasEditor.useCallback[handleCanvasClick]\": (m)=>m.id === currentMeasurement.id ? completedMeasurement : m\n                                }[\"CanvasEditor.useCallback[handleCanvasClick]\"])\n                        }[\"CanvasEditor.useCallback[handleCanvasClick]\"]);\n                    } else {\n                        // Update current measurement with new point\n                        setSimpleMeasurements({\n                            \"CanvasEditor.useCallback[handleCanvasClick]\": (prev)=>prev.map({\n                                    \"CanvasEditor.useCallback[handleCanvasClick]\": (m)=>m.id === currentMeasurement.id ? {\n                                            ...m,\n                                            points: updatedPoints\n                                        } : m\n                                }[\"CanvasEditor.useCallback[handleCanvasClick]\"])\n                        }[\"CanvasEditor.useCallback[handleCanvasClick]\"]);\n                    }\n                }\n            } else {\n                // Start new measurement\n                const newMeasurement = {\n                    id: \"\".concat(activeMeasurementTool, \"-\").concat(Date.now()),\n                    type: activeMeasurementTool,\n                    points: [\n                        newPoint\n                    ],\n                    value: 0,\n                    label: '',\n                    completed: false\n                };\n                setSimpleMeasurements({\n                    \"CanvasEditor.useCallback[handleCanvasClick]\": (prev)=>[\n                            ...prev,\n                            newMeasurement\n                        ]\n                }[\"CanvasEditor.useCallback[handleCanvasClick]\"]);\n            }\n        }\n    }[\"CanvasEditor.useCallback[handleCanvasClick]\"], [\n        activeMeasurementTool,\n        simpleMeasurements,\n        PIXELS_PER_FOOT\n    ]);\n    // Handle stage click to deselect equipment when clicking on empty canvas\n    const handleStageClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleStageClick]\": (e)=>{\n            // Check if we clicked on the stage itself (not on any equipment)\n            const clickedOnEmpty = e.target === e.target.getStage();\n            if (clickedOnEmpty) {\n                const stage = e.target.getStage();\n                const pos = stage.getPointerPosition();\n                // If enhanced measurement tool is active, handle the click\n                if (measurementToolActive && !activeMeasurementTool && pos) {\n                    const canvasX = (pos.x - canvasState.x) / canvasState.scale;\n                    const canvasY = (pos.y - canvasState.y) / canvasState.scale;\n                    // Forward to enhanced measurement handlers\n                    const handlers = window.enhancedMeasurementHandlers;\n                    if (handlers && handlers.handleClick) {\n                        handlers.handleClick({\n                            target: {\n                                getStage: {\n                                    \"CanvasEditor.useCallback[handleStageClick]\": ()=>stage\n                                }[\"CanvasEditor.useCallback[handleStageClick]\"]\n                            }\n                        });\n                    }\n                    return;\n                }\n                // If a simple measurement tool is active, handle the click for measurement\n                if (activeMeasurementTool && pos) {\n                    handleCanvasClick(pos.x, pos.y);\n                    return;\n                }\n                // Otherwise, deselect equipment\n                onEquipmentSelect === null || onEquipmentSelect === void 0 ? void 0 : onEquipmentSelect(null);\n                setSelectedBackgroundImageId(null);\n            }\n        }\n    }[\"CanvasEditor.useCallback[handleStageClick]\"], [\n        onEquipmentSelect,\n        activeMeasurementTool,\n        measurementToolActive,\n        handleCanvasClick,\n        canvasState\n    ]);\n    // Handle stage double click for measurement tools\n    const handleStageDoubleClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleStageDoubleClick]\": (e)=>{\n            if (!activeMeasurementTool) return;\n            const stage = e.target.getStage();\n            const pos = stage.getPointerPosition();\n            if (pos) {\n                // Transform screen coordinates to canvas coordinates\n                const canvasX = (pos.x - canvasState.x) / canvasState.scale;\n                const canvasY = (pos.y - canvasState.y) / canvasState.scale;\n                console.log('Double-click for measurement tool:', {\n                    x: canvasX,\n                    y: canvasY,\n                    activeMeasurementTool\n                });\n                // Complete the current measurement\n                setSimpleMeasurements({\n                    \"CanvasEditor.useCallback[handleStageDoubleClick]\": (prev)=>{\n                        const currentMeasurement = prev.find({\n                            \"CanvasEditor.useCallback[handleStageDoubleClick].currentMeasurement\": (m)=>!m.completed\n                        }[\"CanvasEditor.useCallback[handleStageDoubleClick].currentMeasurement\"]);\n                        if (!currentMeasurement) return prev;\n                        // Add the final point for area and perimeter measurements\n                        if (activeMeasurementTool === 'area' || activeMeasurementTool === 'perimeter') {\n                            const updatedPoints = [\n                                ...currentMeasurement.points,\n                                {\n                                    x: canvasX,\n                                    y: canvasY\n                                }\n                            ];\n                            // Calculate the measurement value\n                            let value = 0;\n                            let label = '';\n                            if (activeMeasurementTool === 'area' && updatedPoints.length >= 3) {\n                                // Calculate area using shoelace formula\n                                let area = 0;\n                                for(let i = 0; i < updatedPoints.length; i++){\n                                    const j = (i + 1) % updatedPoints.length;\n                                    area += updatedPoints[i].x * updatedPoints[j].y;\n                                    area -= updatedPoints[j].x * updatedPoints[i].y;\n                                }\n                                area = Math.abs(area) / 2;\n                                // Convert from pixels to square feet\n                                const areaInSqFt = area / (PIXELS_PER_FOOT * PIXELS_PER_FOOT);\n                                value = Math.round(areaInSqFt);\n                                label = \"Area: \".concat(value.toLocaleString(), \" sq ft\");\n                            } else if (activeMeasurementTool === 'perimeter' && updatedPoints.length >= 2) {\n                                // Calculate perimeter (sum of all segments + closing segment)\n                                let perimeter = 0;\n                                for(let i = 0; i < updatedPoints.length - 1; i++){\n                                    const dx = updatedPoints[i + 1].x - updatedPoints[i].x;\n                                    const dy = updatedPoints[i + 1].y - updatedPoints[i].y;\n                                    perimeter += Math.sqrt(dx * dx + dy * dy);\n                                }\n                                // Add closing segment\n                                const dx = updatedPoints[0].x - updatedPoints[updatedPoints.length - 1].x;\n                                const dy = updatedPoints[0].y - updatedPoints[updatedPoints.length - 1].y;\n                                perimeter += Math.sqrt(dx * dx + dy * dy);\n                                // Convert from pixels to feet\n                                const perimeterInFt = perimeter / PIXELS_PER_FOOT;\n                                value = Math.round(perimeterInFt);\n                                label = \"Perimeter: \".concat(value.toLocaleString(), \" ft\");\n                            }\n                            console.log('Measurement completed:', {\n                                id: currentMeasurement.id,\n                                value,\n                                label,\n                                completed: true\n                            });\n                            return prev.map({\n                                \"CanvasEditor.useCallback[handleStageDoubleClick]\": (m)=>m.id === currentMeasurement.id ? {\n                                        ...m,\n                                        points: updatedPoints,\n                                        value,\n                                        label,\n                                        completed: true\n                                    } : m\n                            }[\"CanvasEditor.useCallback[handleStageDoubleClick]\"]);\n                        }\n                        return prev;\n                    }\n                }[\"CanvasEditor.useCallback[handleStageDoubleClick]\"]);\n                // Deactivate the measurement tool\n                setActiveMeasurementTool(null);\n            }\n        }\n    }[\"CanvasEditor.useCallback[handleStageDoubleClick]\"], [\n        activeMeasurementTool,\n        canvasState,\n        PIXELS_PER_FOOT\n    ]);\n    // Background image management functions\n    const handleBackgroundImageAdd = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleBackgroundImageAdd]\": (image)=>{\n            const imageWithId = {\n                ...image,\n                id: \"bg-\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9))\n            };\n            onBackgroundImageAdd === null || onBackgroundImageAdd === void 0 ? void 0 : onBackgroundImageAdd(imageWithId);\n        }\n    }[\"CanvasEditor.useCallback[handleBackgroundImageAdd]\"], [\n        onBackgroundImageAdd\n    ]);\n    const handleBackgroundImageSelect = (imageId)=>{\n        setSelectedBackgroundImageId(imageId);\n    };\n    const calibrateImageScale = (actualDistance, calculatedDistance)=>{\n        // Calculate the scale correction factor\n        const scaleCorrection = actualDistance / calculatedDistance;\n        // Apply the correction to all background images\n        backgroundImages.forEach((image)=>{\n            if (onBackgroundImageUpdate) {\n                onBackgroundImageUpdate(image.id, {\n                    scaleX: image.scaleX * scaleCorrection,\n                    scaleY: image.scaleY * scaleCorrection\n                });\n            }\n        });\n        console.log(\"Scale calibrated: \".concat(scaleCorrection.toFixed(3), \"x correction applied to \").concat(backgroundImages.length, \" background images\"));\n    };\n    const handleShowDistanceInput = (calculatedDistance, onSubmit, onCancel)=>{\n        setDistanceInputData({\n            calculatedDistance,\n            onSubmit: (actualDistance)=>{\n                // Calibrate the image scale automatically\n                calibrateImageScale(actualDistance, calculatedDistance);\n                onSubmit(actualDistance);\n                setShowDistanceInput(false);\n                setDistanceInputData(null);\n            },\n            onCancel: ()=>{\n                onCancel();\n                setShowDistanceInput(false);\n                setDistanceInputData(null);\n            }\n        });\n        setShowDistanceInput(true);\n    };\n    // Ensure client-side only rendering to prevent hydration mismatches\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CanvasEditor.useEffect\": ()=>{\n            setIsClient(true);\n        }\n    }[\"CanvasEditor.useEffect\"], []);\n    // Don't render canvas during SSR to prevent hydration mismatches\n    if (!isClient) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"relative w-full h-full \".concat(className, \" flex items-center justify-center bg-gray-50\"),\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-gray-500\",\n                children: \"Loading canvas...\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                lineNumber: 790,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n            lineNumber: 789,\n            columnNumber: 7\n        }, undefined);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative w-full h-full \".concat(className),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute top-4 right-4 z-10 flex flex-col gap-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: resetCanvas,\n                        className: \"px-3 py-1 bg-white border border-gray-300 rounded shadow hover:bg-gray-50 text-sm text-gray-900\",\n                        title: \"Reset View\",\n                        children: \"Reset\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 799,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: fitToContent,\n                        className: \"px-3 py-1 bg-white border border-gray-300 rounded shadow hover:bg-gray-50 text-sm text-gray-900\",\n                        title: \"Fit to Content\",\n                        children: \"Fit\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 806,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center space-x-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex space-x-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: zoomIn,\n                                        className: \"flex-1 px-6 py-1 bg-white border border-gray-300 rounded shadow hover:bg-gray-50 text-sm text-gray-900 text-center\",\n                                        title: \"Zoom In\",\n                                        children: \"+\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                        lineNumber: 817,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: zoomOut,\n                                        className: \"flex-1 px-6 py-1 bg-white border border-gray-300 rounded shadow hover:bg-gray-50 text-sm text-gray-900 text-center\",\n                                        title: \"Zoom Out\",\n                                        children: \"−\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                        lineNumber: 824,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 816,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-sm text-gray-900 font-medium bg-white px-3 py-1 rounded border border-gray-300 shadow text-center flex items-center justify-center\",\n                                children: [\n                                    \"Zoom (\",\n                                    Math.round(canvasState.scale * 100),\n                                    \"%)\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 834,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>{\n                                    if (!stageRef.current) return;\n                                    const stage = stageRef.current;\n                                    // If there are background images, fit the largest one; otherwise fit canvas\n                                    if (backgroundImages && backgroundImages.length > 0) {\n                                        // Find the largest background image dimensions\n                                        let maxWidth = 0;\n                                        let maxHeight = 0;\n                                        let targetImage = null;\n                                        backgroundImages.forEach((img)=>{\n                                            const imgWidth = (img.width || 0) * (img.scaleX || 1);\n                                            const imgHeight = (img.height || 0) * (img.scaleY || 1);\n                                            const imgArea = imgWidth * imgHeight;\n                                            const currentMaxArea = maxWidth * maxHeight;\n                                            if (imgArea > currentMaxArea) {\n                                                maxWidth = imgWidth;\n                                                maxHeight = imgHeight;\n                                                targetImage = img;\n                                            }\n                                        });\n                                        if (maxWidth > 0 && maxHeight > 0) {\n                                            // Calculate scale to fit the largest background image\n                                            const scaleX = stageSize.width / maxWidth;\n                                            const scaleY = stageSize.height / maxHeight;\n                                            const fitScale = Math.min(scaleX, scaleY) * 0.9 // 90% padding\n                                            ;\n                                            // Center the image in the viewport\n                                            const centerX = (stageSize.width - maxWidth * fitScale) / 2;\n                                            const centerY = (stageSize.height - maxHeight * fitScale) / 2;\n                                            // If image has position, account for it\n                                            const adjustedX = centerX - ((targetImage === null || targetImage === void 0 ? void 0 : targetImage.x) || 0) * fitScale;\n                                            const adjustedY = centerY - ((targetImage === null || targetImage === void 0 ? void 0 : targetImage.y) || 0) * fitScale;\n                                            stage.scale({\n                                                x: fitScale,\n                                                y: fitScale\n                                            });\n                                            stage.position({\n                                                x: adjustedX,\n                                                y: adjustedY\n                                            });\n                                            stage.batchDraw();\n                                            setCanvasState({\n                                                scale: fitScale,\n                                                x: adjustedX,\n                                                y: adjustedY\n                                            });\n                                            console.log(\"Max Out: Fit satellite image (\".concat(Math.round(maxWidth), \"x\").concat(Math.round(maxHeight), \"px) in viewport (\").concat(stageSize.width, \"x\").concat(stageSize.height, \"px) at \").concat(Math.round(fitScale * 100), \"% zoom\"));\n                                            return;\n                                        }\n                                    }\n                                    // Fallback: fit entire canvas if no background images\n                                    const scaleX = stageSize.width / CANVAS_SIZE_PIXELS;\n                                    const scaleY = stageSize.height / CANVAS_SIZE_PIXELS;\n                                    const fitScale = Math.min(scaleX, scaleY) * 0.9 // 90% to add some padding\n                                    ;\n                                    // Center the canvas in the viewport\n                                    const centerX = (stageSize.width - CANVAS_SIZE_PIXELS * fitScale) / 2;\n                                    const centerY = (stageSize.height - CANVAS_SIZE_PIXELS * fitScale) / 2;\n                                    stage.scale({\n                                        x: fitScale,\n                                        y: fitScale\n                                    });\n                                    stage.position({\n                                        x: centerX,\n                                        y: centerY\n                                    });\n                                    stage.batchDraw();\n                                    setCanvasState({\n                                        scale: fitScale,\n                                        x: centerX,\n                                        y: centerY\n                                    });\n                                    console.log(\"Max Out: Fit entire canvas (\".concat(CANVAS_SIZE_PIXELS, \"px) in viewport (\").concat(stageSize.width, \"x\").concat(stageSize.height, \"px) at \").concat(Math.round(fitScale * 100), \"% zoom\"));\n                                },\n                                className: \"px-3 py-1 bg-white border border-gray-300 rounded shadow hover:bg-gray-50 text-sm text-gray-900 text-center\",\n                                title: \"Fit Entire Satellite Image in View\",\n                                children: \"Max Out\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 839,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 815,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>setGridVisible(!gridVisible),\n                        className: \"px-3 py-1 border rounded shadow text-sm \".concat(gridVisible ? 'bg-blue-500 text-white border-blue-500' : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'),\n                        title: \"Toggle Grid\",\n                        children: \"Grid\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 921,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>setBackgroundManagerOpen(true),\n                        className: \"px-3 py-1 bg-white border border-gray-300 rounded shadow hover:bg-gray-50 text-sm text-gray-900\",\n                        title: \"Manage Background Images\",\n                        children: \"Images\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 932,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>setScaleBarVisible(!scaleBarVisible),\n                        className: \"px-3 py-1 border rounded shadow text-sm \".concat(scaleBarVisible ? 'bg-green-500 text-white border-green-500' : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'),\n                        title: \"Toggle Scale Bar\",\n                        children: \"Scale\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 939,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex space-x-1\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>{\n                                    if (measurementToolActive) {\n                                        // Reset measurement if already active\n                                        setCurrentMeasurement(null);\n                                        setMeasurementToolActive(false);\n                                        setMeasurementEditMode(false);\n                                    } else {\n                                        // Start new measurement\n                                        setCurrentMeasurement({\n                                            id: Date.now().toString(),\n                                            firstPoint: null,\n                                            secondPoint: null,\n                                            isComplete: false\n                                        });\n                                        setMeasurementToolActive(true);\n                                        setMeasurementEditMode(false);\n                                    }\n                                },\n                                className: \"px-3 py-1 border rounded shadow text-sm transition-colors \".concat(measurementToolActive && !measurementEditMode ? 'bg-orange-500 text-white border-orange-500' : 'bg-white text-gray-900 border-gray-300 hover:bg-gray-50'),\n                                title: \"Start New Measurement\",\n                                children: \"\\uD83D\\uDCCF Measure\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 952,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>{\n                                    if (currentMeasurement === null || currentMeasurement === void 0 ? void 0 : currentMeasurement.isComplete) {\n                                        setMeasurementEditMode(!measurementEditMode);\n                                    }\n                                },\n                                disabled: !(currentMeasurement === null || currentMeasurement === void 0 ? void 0 : currentMeasurement.isComplete),\n                                className: \"px-3 py-1 border rounded shadow text-sm transition-colors \".concat(measurementEditMode ? 'bg-blue-500 text-white border-blue-500' : (currentMeasurement === null || currentMeasurement === void 0 ? void 0 : currentMeasurement.isComplete) ? 'bg-white text-gray-900 border-gray-300 hover:bg-gray-50' : 'bg-gray-200 text-gray-400 border-gray-200 cursor-not-allowed'),\n                                title: \"Edit Measurement Line\",\n                                children: \"✏️ Edit\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 981,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>{\n                                    if (currentMeasurement === null || currentMeasurement === void 0 ? void 0 : currentMeasurement.isComplete) {\n                                        setShowCalibrateDialog(true);\n                                    }\n                                },\n                                disabled: !(currentMeasurement === null || currentMeasurement === void 0 ? void 0 : currentMeasurement.isComplete),\n                                className: \"px-3 py-1 border rounded shadow text-sm transition-colors \".concat((currentMeasurement === null || currentMeasurement === void 0 ? void 0 : currentMeasurement.isComplete) ? 'bg-white text-gray-900 border-gray-300 hover:bg-gray-50' : 'bg-gray-200 text-gray-400 border-gray-200 cursor-not-allowed'),\n                                title: \"Calibrate Scale\",\n                                children: \"\\uD83C\\uDFAF Calibrate\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 1000,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 951,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex space-x-1\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>setActiveMeasurementTool(activeMeasurementTool === 'area' ? null : 'area'),\n                                className: \"px-3 py-2 rounded text-sm font-medium transition-colors \".concat(activeMeasurementTool === 'area' ? 'bg-green-500 text-white' : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'),\n                                title: \"Area Measurement Tool\",\n                                children: \"\\uD83D\\uDCD0 Area\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 1020,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>setActiveMeasurementTool(activeMeasurementTool === 'perimeter' ? null : 'perimeter'),\n                                className: \"px-3 py-2 rounded text-sm font-medium transition-colors \".concat(activeMeasurementTool === 'perimeter' ? 'bg-blue-500 text-white' : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'),\n                                title: \"Perimeter Measurement Tool\",\n                                children: \"\\uD83D\\uDCCF Perimeter\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 1032,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>setActiveMeasurementTool(activeMeasurementTool === 'distance' ? null : 'distance'),\n                                className: \"px-3 py-2 rounded text-sm font-medium transition-colors \".concat(activeMeasurementTool === 'distance' ? 'bg-amber-500 text-white' : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'),\n                                title: \"Distance Measurement Tool\",\n                                children: \"\\uD83D\\uDCCF Distance\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 1044,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 1019,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                lineNumber: 798,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_konva__WEBPACK_IMPORTED_MODULE_2__.Stage, {\n                ref: stageRef,\n                width: stageSize.width,\n                height: stageSize.height,\n                draggable: !measurementToolActive && !activeMeasurementTool,\n                onWheel: handleWheel,\n                onDragEnd: handleDragEnd,\n                onClick: handleStageClick,\n                onDblClick: handleStageDoubleClick,\n                className: \"border border-gray-300 bg-gray-50\",\n                onContentMouseDown: ()=>{\n                    // Ensure canvas element is captured after stage is fully mounted\n                    if (stageRef.current && onCanvasReady) {\n                        const container = stageRef.current.container();\n                        if (container) {\n                            console.log('Stage mounted, capturing canvas element:', container);\n                            onCanvasReady(container);\n                        }\n                    }\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_konva__WEBPACK_IMPORTED_MODULE_2__.Layer, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_BackgroundLayer__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                            images: backgroundImages,\n                            onImageUpdate: onBackgroundImageUpdate,\n                            onImageDelete: onBackgroundImageDelete,\n                            onImageSelect: handleBackgroundImageSelect,\n                            selectedImageId: selectedBackgroundImageId,\n                            scale: canvasState.scale,\n                            editable: true\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                            lineNumber: 1086,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_GridLayer__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                            width: CANVAS_SIZE_PIXELS,\n                            height: CANVAS_SIZE_PIXELS,\n                            scale: canvasState.scale,\n                            x: canvasState.x,\n                            y: canvasState.y,\n                            visible: gridVisible,\n                            gridSize: PIXELS_PER_FOOT\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                            lineNumber: 1097,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_EquipmentLayer__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            equipment: placedEquipment,\n                            equipmentDefinitions: equipmentDefinitions,\n                            scale: canvasState.scale,\n                            onEquipmentSelect: onEquipmentSelect,\n                            onEquipmentMove: onEquipmentMove,\n                            onEquipmentRotate: onEquipmentRotate,\n                            onEquipmentDelete: onEquipmentDelete,\n                            selectedEquipmentId: selectedEquipmentId,\n                            snapToGrid: true,\n                            gridSize: PIXELS_PER_FOOT\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                            lineNumber: 1108,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_EnhancedMeasurementTool__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                            isActive: measurementToolActive && !activeMeasurementTool,\n                            editMode: measurementEditMode,\n                            scale: canvasState.scale,\n                            pixelsPerFoot: PIXELS_PER_FOOT,\n                            currentMeasurement: currentMeasurement,\n                            onPointSet: handleEnhancedMeasurementPointSet,\n                            onMeasurementComplete: (distance)=>{\n                                console.log('Enhanced measurement completed:', distance);\n                            },\n                            onMeasurementEdit: handleEnhancedMeasurementEdit\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                            lineNumber: 1122,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_MeasurementTool__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                            isActive: false,\n                            scale: canvasState.scale,\n                            pixelsPerFoot: PIXELS_PER_FOOT,\n                            onMeasurementComplete: (measurement)=>{\n                                setMeasurements((prev)=>[\n                                        ...prev,\n                                        measurement\n                                    ]);\n                                console.log('New measurement:', measurement);\n                            },\n                            onShowDistanceInput: handleShowDistanceInput\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                            lineNumber: 1136,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_SimpleMeasurementTool__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                            activeTool: activeMeasurementTool,\n                            scale: canvasState.scale,\n                            pixelsPerFoot: PIXELS_PER_FOOT,\n                            measurements: simpleMeasurements,\n                            onMeasurementComplete: (measurement)=>{\n                                setSimpleMeasurements((prev)=>[\n                                        ...prev,\n                                        measurement\n                                    ]);\n                            },\n                            onMeasurementDelete: (id)=>{\n                                setSimpleMeasurements((prev)=>prev.filter((m)=>m.id !== id));\n                            }\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                            lineNumber: 1148,\n                            columnNumber: 11\n                        }, undefined),\n                        scaleBarVisible && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ScaleBar__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                            scale: canvasState.scale,\n                            canvasWidth: stageSize.width,\n                            canvasHeight: stageSize.height,\n                            pixelsPerFoot: PIXELS_PER_FOOT\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                            lineNumber: 1163,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                    lineNumber: 1084,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                lineNumber: 1063,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_BackgroundImageManager__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                images: backgroundImages,\n                onImageAdd: handleBackgroundImageAdd,\n                onImageUpdate: onBackgroundImageUpdate || (()=>{}),\n                onImageDelete: onBackgroundImageDelete || (()=>{}),\n                onImageSelect: handleBackgroundImageSelect,\n                selectedImageId: selectedBackgroundImageId,\n                isOpen: backgroundManagerOpen,\n                onClose: ()=>setBackgroundManagerOpen(false)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                lineNumber: 1174,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_DistanceInputModal__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                isOpen: showDistanceInput,\n                calculatedDistance: (distanceInputData === null || distanceInputData === void 0 ? void 0 : distanceInputData.calculatedDistance) || 0,\n                onSubmit: (distanceInputData === null || distanceInputData === void 0 ? void 0 : distanceInputData.onSubmit) || (()=>{}),\n                onCancel: (distanceInputData === null || distanceInputData === void 0 ? void 0 : distanceInputData.onCancel) || (()=>{})\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                lineNumber: 1186,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_EnhancedCalibrateDialog__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                isOpen: showCalibrateDialog,\n                calculatedDistance: currentMeasurement && currentMeasurement.firstPoint && currentMeasurement.secondPoint ? Math.sqrt(Math.pow(currentMeasurement.secondPoint.x - currentMeasurement.firstPoint.x, 2) + Math.pow(currentMeasurement.secondPoint.y - currentMeasurement.firstPoint.y, 2)) / PIXELS_PER_FOOT : 0,\n                onSubmit: handleCalibrateSubmit,\n                onEdit: handleCalibrateEdit,\n                onCancel: handleCalibrateCancel\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                lineNumber: 1194,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n        lineNumber: 796,\n        columnNumber: 5\n    }, undefined);\n};\n_s(CanvasEditor, \"FD1N4juQo+zangP88CLFAsmwu1w=\");\n_c = CanvasEditor;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanvasEditor);\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/canvas/CanvasEditor.tsx\n"));

/***/ })

});