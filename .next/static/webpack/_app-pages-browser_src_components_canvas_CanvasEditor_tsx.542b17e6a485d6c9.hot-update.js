"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_components_canvas_CanvasEditor_tsx",{

/***/ "(app-pages-browser)/./src/components/canvas/CanvasEditor.tsx":
/*!************************************************!*\
  !*** ./src/components/canvas/CanvasEditor.tsx ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_konva__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-konva */ \"(app-pages-browser)/./node_modules/react-konva/es/ReactKonva.js\");\n/* harmony import */ var _GridLayer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GridLayer */ \"(app-pages-browser)/./src/components/canvas/GridLayer.tsx\");\n/* harmony import */ var _EquipmentLayer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EquipmentLayer */ \"(app-pages-browser)/./src/components/canvas/EquipmentLayer.tsx\");\n/* harmony import */ var _BackgroundLayer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BackgroundLayer */ \"(app-pages-browser)/./src/components/canvas/BackgroundLayer.tsx\");\n/* harmony import */ var _BackgroundImageManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./BackgroundImageManager */ \"(app-pages-browser)/./src/components/canvas/BackgroundImageManager.tsx\");\n/* harmony import */ var _ScaleBar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ScaleBar */ \"(app-pages-browser)/./src/components/canvas/ScaleBar.tsx\");\n/* harmony import */ var _MeasurementTool__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./MeasurementTool */ \"(app-pages-browser)/./src/components/canvas/MeasurementTool.tsx\");\n/* harmony import */ var _DistanceInputModal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./DistanceInputModal */ \"(app-pages-browser)/./src/components/canvas/DistanceInputModal.tsx\");\n/* harmony import */ var _SimpleMeasurementTool__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./SimpleMeasurementTool */ \"(app-pages-browser)/./src/components/canvas/SimpleMeasurementTool.tsx\");\n/* harmony import */ var _EnhancedMeasurementTool__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./EnhancedMeasurementTool */ \"(app-pages-browser)/./src/components/canvas/EnhancedMeasurementTool.tsx\");\n/* harmony import */ var _EnhancedCalibrateDialog__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./EnhancedCalibrateDialog */ \"(app-pages-browser)/./src/components/canvas/EnhancedCalibrateDialog.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\nconst CanvasEditor = (param)=>{\n    let { width = 1200, height = 800, className = '', onEquipmentAdd, placedEquipment = [], equipmentDefinitions, onEquipmentSelect, onEquipmentMove, onEquipmentRotate, onEquipmentDelete, selectedEquipmentId, backgroundImages = [], onBackgroundImageAdd, onBackgroundImageUpdate, onBackgroundImageDelete, onCanvasReady } = param;\n    _s();\n    const stageRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isClient, setIsClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Canvas configuration for 1,000,000 sq ft (1000ft x 1000ft)\n    const CANVAS_AREA_SQ_FT = 1000000;\n    const CANVAS_SIDE_FT = Math.sqrt(CANVAS_AREA_SQ_FT) // 1000 feet\n    ;\n    const PIXELS_PER_FOOT = 10 // Optimized for performance with ultra-large areas\n    ;\n    const CANVAS_SIZE_PIXELS = CANVAS_SIDE_FT * PIXELS_PER_FOOT // 10000 pixels\n    ;\n    const [canvasState, setCanvasState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        scale: 0.2,\n        x: 0,\n        y: 0\n    });\n    const [stageSize, setStageSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width,\n        height\n    });\n    const [gridVisible, setGridVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [backgroundManagerOpen, setBackgroundManagerOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [selectedBackgroundImageId, setSelectedBackgroundImageId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [scaleBarVisible, setScaleBarVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [measurementToolActive, setMeasurementToolActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [measurements, setMeasurements] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [activeMeasurementTool, setActiveMeasurementTool] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [simpleMeasurements, setSimpleMeasurements] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [showDistanceInput, setShowDistanceInput] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [distanceInputData, setDistanceInputData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Enhanced measurement workflow states\n    const [measurementEditMode, setMeasurementEditMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [currentMeasurement, setCurrentMeasurement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [showCalibrateDialog, setShowCalibrateDialog] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Handle canvas ready callback\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CanvasEditor.useEffect\": ()=>{\n            if (isClient && onCanvasReady) {\n                // Use a timeout to ensure the stage is fully mounted\n                const timeout = setTimeout({\n                    \"CanvasEditor.useEffect.timeout\": ()=>{\n                        if (stageRef.current) {\n                            const container = stageRef.current.container();\n                            if (container) {\n                                console.log('Canvas ready, calling onCanvasReady with container:', container);\n                                onCanvasReady(container);\n                            }\n                        }\n                    }\n                }[\"CanvasEditor.useEffect.timeout\"], 100) // Small delay to ensure stage is mounted\n                ;\n                return ({\n                    \"CanvasEditor.useEffect\": ()=>clearTimeout(timeout)\n                })[\"CanvasEditor.useEffect\"];\n            }\n        }\n    }[\"CanvasEditor.useEffect\"], [\n        onCanvasReady,\n        isClient\n    ]);\n    // Handle window resize to make canvas responsive\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CanvasEditor.useEffect\": ()=>{\n            const handleResize = {\n                \"CanvasEditor.useEffect.handleResize\": ()=>{\n                    if (stageRef.current) {\n                        const container = stageRef.current.container();\n                        const parent = container.parentElement;\n                        // Use parent container dimensions to ensure full height usage\n                        const containerWidth = parent ? parent.clientWidth : container.offsetWidth;\n                        const containerHeight = parent ? parent.clientHeight : container.offsetHeight;\n                        console.log('Canvas resize:', {\n                            containerWidth,\n                            containerHeight,\n                            parent: !!parent\n                        });\n                        setStageSize({\n                            width: containerWidth,\n                            height: containerHeight\n                        });\n                    }\n                }\n            }[\"CanvasEditor.useEffect.handleResize\"];\n            window.addEventListener('resize', handleResize);\n            // Use a timeout to ensure the DOM is fully rendered\n            const timeout = setTimeout(handleResize, 100);\n            return ({\n                \"CanvasEditor.useEffect\": ()=>{\n                    window.removeEventListener('resize', handleResize);\n                    clearTimeout(timeout);\n                }\n            })[\"CanvasEditor.useEffect\"];\n        }\n    }[\"CanvasEditor.useEffect\"], [\n        isClient\n    ]);\n    // Handle zoom with mouse wheel\n    const handleWheel = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleWheel]\": (e)=>{\n            e.evt.preventDefault();\n            const stage = e.target.getStage();\n            if (!stage) return;\n            const oldScale = stage.scaleX();\n            const pointer = stage.getPointerPosition();\n            if (!pointer) return;\n            // Zoom sensitivity\n            const scaleBy = 1.1;\n            const newScale = e.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy;\n            // Limit zoom range - allow zooming out to 4% to match Max Out button\n            const minScale = 0.04 // 4% minimum zoom\n            ;\n            const maxScale = 5;\n            const clampedScale = Math.max(minScale, Math.min(maxScale, newScale));\n            // Calculate new position to zoom towards mouse pointer\n            const mousePointTo = {\n                x: (pointer.x - stage.x()) / oldScale,\n                y: (pointer.y - stage.y()) / oldScale\n            };\n            const newPos = {\n                x: pointer.x - mousePointTo.x * clampedScale,\n                y: pointer.y - mousePointTo.y * clampedScale\n            };\n            stage.scale({\n                x: clampedScale,\n                y: clampedScale\n            });\n            stage.position(newPos);\n            stage.batchDraw();\n            setCanvasState({\n                scale: clampedScale,\n                x: newPos.x,\n                y: newPos.y\n            });\n        }\n    }[\"CanvasEditor.useCallback[handleWheel]\"], []);\n    // Handle panning with mouse drag\n    const handleDragEnd = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleDragEnd]\": (e)=>{\n            const stage = e.target;\n            setCanvasState({\n                \"CanvasEditor.useCallback[handleDragEnd]\": (prev)=>({\n                        ...prev,\n                        x: stage.x(),\n                        y: stage.y()\n                    })\n            }[\"CanvasEditor.useCallback[handleDragEnd]\"]);\n        }\n    }[\"CanvasEditor.useCallback[handleDragEnd]\"], []);\n    // Reset canvas to center and default zoom for 250k sq ft canvas\n    const resetCanvas = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[resetCanvas]\": ()=>{\n            const defaultScale = 0.2 // 20% zoom for large canvas overview\n            ;\n            const centerX = stageSize.width / 2 - CANVAS_SIZE_PIXELS / 2 * defaultScale;\n            const centerY = stageSize.height / 2 - CANVAS_SIZE_PIXELS / 2 * defaultScale;\n            if (stageRef.current) {\n                stageRef.current.scale({\n                    x: defaultScale,\n                    y: defaultScale\n                });\n                stageRef.current.position({\n                    x: centerX,\n                    y: centerY\n                });\n                stageRef.current.batchDraw();\n            }\n            setCanvasState({\n                scale: defaultScale,\n                x: centerX,\n                y: centerY\n            });\n        }\n    }[\"CanvasEditor.useCallback[resetCanvas]\"], [\n        stageSize,\n        CANVAS_SIZE_PIXELS\n    ]);\n    // Fit canvas to show all equipment with proper centering and zoom\n    const fitToContent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[fitToContent]\": ()=>{\n            console.log('=== FIT TO CONTENT CALLED ===');\n            console.log('placedEquipment:', placedEquipment);\n            if (!placedEquipment || placedEquipment.length === 0) {\n                console.log('No equipment to fit to, resetting canvas');\n                resetCanvas();\n                return;\n            }\n            // Calculate bounding box of all equipment including their clearance zones\n            let minX = Infinity, maxX = -Infinity;\n            let minY = Infinity, maxY = -Infinity;\n            placedEquipment.forEach({\n                \"CanvasEditor.useCallback[fitToContent]\": (equipment)=>{\n                    const equipmentDef = equipmentDefinitions === null || equipmentDefinitions === void 0 ? void 0 : equipmentDefinitions.find({\n                        \"CanvasEditor.useCallback[fitToContent]\": (def)=>def.id === equipment.equipmentId\n                    }[\"CanvasEditor.useCallback[fitToContent]\"]);\n                    if (!equipmentDef) return;\n                    const dimensions = equipment.dimensions;\n                    const isCircular = dimensions.shape === 'circle';\n                    // Calculate equipment bounds including clearance\n                    const clearance = equipmentDef.rideClearing || 0;\n                    const clearancePixels = clearance * PIXELS_PER_FOOT;\n                    let equipmentMinX, equipmentMaxX, equipmentMinY, equipmentMaxY;\n                    if (isCircular) {\n                        const radius = dimensions.radius * PIXELS_PER_FOOT;\n                        equipmentMinX = equipment.x - radius - clearancePixels;\n                        equipmentMaxX = equipment.x + radius + clearancePixels;\n                        equipmentMinY = equipment.y - radius - clearancePixels;\n                        equipmentMaxY = equipment.y + radius + clearancePixels;\n                    } else {\n                        const width = dimensions.width * PIXELS_PER_FOOT;\n                        const height = dimensions.height * PIXELS_PER_FOOT;\n                        equipmentMinX = equipment.x - width / 2 - clearancePixels;\n                        equipmentMaxX = equipment.x + width / 2 + clearancePixels;\n                        equipmentMinY = equipment.y - height / 2 - clearancePixels;\n                        equipmentMaxY = equipment.y + height / 2 + clearancePixels;\n                    }\n                    minX = Math.min(minX, equipmentMinX);\n                    maxX = Math.max(maxX, equipmentMaxX);\n                    minY = Math.min(minY, equipmentMinY);\n                    maxY = Math.max(maxY, equipmentMaxY);\n                }\n            }[\"CanvasEditor.useCallback[fitToContent]\"]);\n            // Add padding around the bounding box\n            const padding = 100 // 100 pixels padding\n            ;\n            minX -= padding;\n            maxX += padding;\n            minY -= padding;\n            maxY += padding;\n            // Calculate the center of all equipment\n            const centerX = (minX + maxX) / 2;\n            const centerY = (minY + maxY) / 2;\n            // Calculate required scale to fit all equipment in viewport\n            const contentWidth = maxX - minX;\n            const contentHeight = maxY - minY;\n            const scaleX = stageSize.width / contentWidth;\n            const scaleY = stageSize.height / contentHeight;\n            const optimalScale = Math.min(scaleX, scaleY, 2) // Cap at 2x zoom\n            ;\n            // Calculate the position to center the content\n            const newX = stageSize.width / 2 - centerX * optimalScale;\n            const newY = stageSize.height / 2 - centerY * optimalScale;\n            // Apply the new view settings to both stage and state\n            console.log('Applying new canvas state:', {\n                scale: optimalScale,\n                x: newX,\n                y: newY,\n                contentBounds: {\n                    minX,\n                    maxX,\n                    minY,\n                    maxY\n                },\n                center: {\n                    centerX,\n                    centerY\n                }\n            });\n            if (stageRef.current) {\n                stageRef.current.scale({\n                    x: optimalScale,\n                    y: optimalScale\n                });\n                stageRef.current.position({\n                    x: newX,\n                    y: newY\n                });\n                stageRef.current.batchDraw();\n            }\n            setCanvasState({\n                scale: optimalScale,\n                x: newX,\n                y: newY\n            });\n        }\n    }[\"CanvasEditor.useCallback[fitToContent]\"], [\n        placedEquipment,\n        equipmentDefinitions,\n        stageSize,\n        resetCanvas\n    ]);\n    // Zoom in function\n    const zoomIn = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[zoomIn]\": ()=>{\n            if (!stageRef.current) return;\n            const stage = stageRef.current;\n            const oldScale = stage.scaleX();\n            const scaleBy = 1.1;\n            const newScale = Math.min(5, oldScale * scaleBy) // Max zoom 5x\n            ;\n            // Zoom towards center of visible area\n            const center = {\n                x: stageSize.width / 2,\n                y: stageSize.height / 2\n            };\n            const mousePointTo = {\n                x: (center.x - stage.x()) / oldScale,\n                y: (center.y - stage.y()) / oldScale\n            };\n            const newPos = {\n                x: center.x - mousePointTo.x * newScale,\n                y: center.y - mousePointTo.y * newScale\n            };\n            stage.scale({\n                x: newScale,\n                y: newScale\n            });\n            stage.position(newPos);\n            stage.batchDraw();\n            setCanvasState({\n                scale: newScale,\n                x: newPos.x,\n                y: newPos.y\n            });\n        }\n    }[\"CanvasEditor.useCallback[zoomIn]\"], [\n        stageSize\n    ]);\n    // Zoom out function\n    const zoomOut = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[zoomOut]\": ()=>{\n            if (!stageRef.current) return;\n            const stage = stageRef.current;\n            const oldScale = stage.scaleX();\n            const scaleBy = 1.1;\n            const newScale = Math.max(0.04, oldScale / scaleBy) // Min zoom 0.04x (4%)\n            ;\n            // Zoom towards center of visible area\n            const center = {\n                x: stageSize.width / 2,\n                y: stageSize.height / 2\n            };\n            const mousePointTo = {\n                x: (center.x - stage.x()) / oldScale,\n                y: (center.y - stage.y()) / oldScale\n            };\n            const newPos = {\n                x: center.x - mousePointTo.x * newScale,\n                y: center.y - mousePointTo.y * newScale\n            };\n            stage.scale({\n                x: newScale,\n                y: newScale\n            });\n            stage.position(newPos);\n            stage.batchDraw();\n            setCanvasState({\n                scale: newScale,\n                x: newPos.x,\n                y: newPos.y\n            });\n        }\n    }[\"CanvasEditor.useCallback[zoomOut]\"], [\n        stageSize\n    ]);\n    // Calculate visible bounds for performance optimization\n    const getVisibleBounds = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[getVisibleBounds]\": ()=>{\n            const buffer = 1000 // pixels buffer for smooth scrolling\n            ;\n            return {\n                minX: -canvasState.x / canvasState.scale - buffer,\n                maxX: (-canvasState.x + stageSize.width) / canvasState.scale + buffer,\n                minY: -canvasState.y / canvasState.scale - buffer,\n                maxY: (-canvasState.y + stageSize.height) / canvasState.scale + buffer\n            };\n        }\n    }[\"CanvasEditor.useCallback[getVisibleBounds]\"], [\n        canvasState.x,\n        canvasState.y,\n        canvasState.scale,\n        stageSize\n    ]);\n    // Handle measurement tool clicks\n    const handleMeasurementToolClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleMeasurementToolClick]\": (x, y)=>{\n            console.log('handleMeasurementToolClick called:', {\n                x,\n                y,\n                activeMeasurementTool\n            });\n            if (!activeMeasurementTool) return;\n            // Forward click to SimpleMeasurementTool via global handlers\n            const handlers = window.measurementToolHandlers;\n            console.log('Global handlers:', handlers);\n            if (handlers && handlers.handleClick) {\n                console.log('Calling handlers.handleClick');\n                handlers.handleClick(x, y);\n            } else {\n                console.log('No global handlers found');\n            }\n        }\n    }[\"CanvasEditor.useCallback[handleMeasurementToolClick]\"], [\n        activeMeasurementTool\n    ]);\n    // Handle double-click to complete area/perimeter measurements\n    const handleMeasurementToolDoubleClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleMeasurementToolDoubleClick]\": (x, y)=>{\n            if (!activeMeasurementTool) return;\n            console.log('Double-click for measurement tool:', {\n                x,\n                y,\n                activeMeasurementTool\n            });\n            // Find incomplete measurement\n            const currentMeasurement = simpleMeasurements.find({\n                \"CanvasEditor.useCallback[handleMeasurementToolDoubleClick].currentMeasurement\": (m)=>!m.completed\n            }[\"CanvasEditor.useCallback[handleMeasurementToolDoubleClick].currentMeasurement\"]);\n            if (!currentMeasurement || currentMeasurement.points.length < 2) return;\n            let value = 0;\n            let label = '';\n            if (activeMeasurementTool === 'area') {\n                // Calculate area using shoelace formula\n                if (currentMeasurement.points.length < 3) return;\n                let area = 0;\n                const points = currentMeasurement.points;\n                const n = points.length;\n                for(let i = 0; i < n; i++){\n                    const j = (i + 1) % n;\n                    area += points[i].x * points[j].y;\n                    area -= points[j].x * points[i].y;\n                }\n                area = Math.abs(area) / 2;\n                value = area / (PIXELS_PER_FOOT * PIXELS_PER_FOOT // Convert to square feet\n                );\n                label = \"Area: \".concat(value.toFixed(0), \" sq ft\");\n            } else if (activeMeasurementTool === 'perimeter') {\n                // Calculate perimeter\n                let perimeter = 0;\n                const points = currentMeasurement.points;\n                for(let i = 0; i < points.length - 1; i++){\n                    const dx = points[i + 1].x - points[i].x;\n                    const dy = points[i + 1].y - points[i].y;\n                    perimeter += Math.sqrt(dx * dx + dy * dy);\n                }\n                // Close the perimeter (connect last point to first)\n                if (points.length > 2) {\n                    const dx = points[0].x - points[points.length - 1].x;\n                    const dy = points[0].y - points[points.length - 1].y;\n                    perimeter += Math.sqrt(dx * dx + dy * dy);\n                }\n                value = perimeter / PIXELS_PER_FOOT; // Convert to feet\n                label = \"Perimeter: \".concat(value.toFixed(0), \" ft\");\n            }\n            // Complete the measurement\n            const completedMeasurement = {\n                ...currentMeasurement,\n                value,\n                label,\n                completed: true\n            };\n            setSimpleMeasurements({\n                \"CanvasEditor.useCallback[handleMeasurementToolDoubleClick]\": (prev)=>prev.map({\n                        \"CanvasEditor.useCallback[handleMeasurementToolDoubleClick]\": (m)=>m.id === currentMeasurement.id ? completedMeasurement : m\n                    }[\"CanvasEditor.useCallback[handleMeasurementToolDoubleClick]\"])\n            }[\"CanvasEditor.useCallback[handleMeasurementToolDoubleClick]\"]);\n            console.log('Measurement completed:', completedMeasurement);\n        }\n    }[\"CanvasEditor.useCallback[handleMeasurementToolDoubleClick]\"], [\n        activeMeasurementTool,\n        simpleMeasurements,\n        PIXELS_PER_FOOT\n    ]);\n    // Enhanced measurement handlers\n    const handleEnhancedMeasurementPointSet = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleEnhancedMeasurementPointSet]\": (point)=>{\n            if (!currentMeasurement) return;\n            if (!currentMeasurement.firstPoint) {\n                // Set first point\n                setCurrentMeasurement({\n                    \"CanvasEditor.useCallback[handleEnhancedMeasurementPointSet]\": (prev)=>prev ? {\n                            ...prev,\n                            firstPoint: point\n                        } : null\n                }[\"CanvasEditor.useCallback[handleEnhancedMeasurementPointSet]\"]);\n            } else if (!currentMeasurement.secondPoint) {\n                // Set second point and complete measurement\n                const updatedMeasurement = {\n                    ...currentMeasurement,\n                    secondPoint: point,\n                    isComplete: true\n                };\n                setCurrentMeasurement(updatedMeasurement);\n                // Calculate distance and show calibration dialog\n                const dx = point.x - currentMeasurement.firstPoint.x;\n                const dy = point.y - currentMeasurement.firstPoint.y;\n                const pixelDistance = Math.sqrt(dx * dx + dy * dy);\n                const calculatedDistance = pixelDistance / PIXELS_PER_FOOT;\n                // Show calibration dialog after a short delay\n                setTimeout({\n                    \"CanvasEditor.useCallback[handleEnhancedMeasurementPointSet]\": ()=>{\n                        setShowCalibrateDialog(true);\n                    }\n                }[\"CanvasEditor.useCallback[handleEnhancedMeasurementPointSet]\"], 500);\n            }\n        }\n    }[\"CanvasEditor.useCallback[handleEnhancedMeasurementPointSet]\"], [\n        currentMeasurement,\n        PIXELS_PER_FOOT\n    ]);\n    const handleEnhancedMeasurementEdit = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleEnhancedMeasurementEdit]\": (firstPoint, secondPoint)=>{\n            if (!currentMeasurement) return;\n            setCurrentMeasurement({\n                \"CanvasEditor.useCallback[handleEnhancedMeasurementEdit]\": (prev)=>prev ? {\n                        ...prev,\n                        firstPoint,\n                        secondPoint\n                    } : null\n            }[\"CanvasEditor.useCallback[handleEnhancedMeasurementEdit]\"]);\n        }\n    }[\"CanvasEditor.useCallback[handleEnhancedMeasurementEdit]\"], [\n        currentMeasurement\n    ]);\n    const handleCalibrateSubmit = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleCalibrateSubmit]\": (actualDistance)=>{\n            if (!currentMeasurement || !currentMeasurement.firstPoint || !currentMeasurement.secondPoint) return;\n            // Calculate the scale factor\n            const dx = currentMeasurement.secondPoint.x - currentMeasurement.firstPoint.x;\n            const dy = currentMeasurement.secondPoint.y - currentMeasurement.firstPoint.y;\n            const pixelDistance = Math.sqrt(dx * dx + dy * dy);\n            const scaleFactor = actualDistance / (pixelDistance / PIXELS_PER_FOOT);\n            // Update the measurement with real-world distance\n            setCurrentMeasurement({\n                \"CanvasEditor.useCallback[handleCalibrateSubmit]\": (prev)=>prev ? {\n                        ...prev,\n                        realWorldDistance: actualDistance\n                    } : null\n            }[\"CanvasEditor.useCallback[handleCalibrateSubmit]\"]);\n            // Apply scale calibration to background images if any\n            if (backgroundImages && backgroundImages.length > 0 && onBackgroundImageUpdate) {\n                backgroundImages.forEach({\n                    \"CanvasEditor.useCallback[handleCalibrateSubmit]\": (image)=>{\n                        onBackgroundImageUpdate(image.id, {\n                            scaleX: (image.scaleX || 1) * scaleFactor,\n                            scaleY: (image.scaleY || 1) * scaleFactor\n                        });\n                    }\n                }[\"CanvasEditor.useCallback[handleCalibrateSubmit]\"]);\n            }\n            setShowCalibrateDialog(false);\n            console.log('Scale calibrated with factor:', scaleFactor);\n        }\n    }[\"CanvasEditor.useCallback[handleCalibrateSubmit]\"], [\n        currentMeasurement,\n        PIXELS_PER_FOOT,\n        backgroundImages,\n        onBackgroundImageUpdate\n    ]);\n    const handleCalibrateEdit = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleCalibrateEdit]\": ()=>{\n            setShowCalibrateDialog(false);\n            setMeasurementEditMode(true);\n        }\n    }[\"CanvasEditor.useCallback[handleCalibrateEdit]\"], []);\n    const handleCalibrateCancel = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleCalibrateCancel]\": ()=>{\n            setShowCalibrateDialog(false);\n            // Optionally reset the measurement\n            setCurrentMeasurement(null);\n            setMeasurementToolActive(false);\n        }\n    }[\"CanvasEditor.useCallback[handleCalibrateCancel]\"], []);\n    // Handle canvas clicks for measurement tools\n    const handleCanvasClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleCanvasClick]\": (x, y)=>{\n            if (!activeMeasurementTool) return;\n            console.log('Canvas click for measurement tool (raw):', {\n                x,\n                y,\n                activeMeasurementTool\n            });\n            // Transform screen coordinates to canvas coordinates\n            // Account for canvas zoom and pan\n            const canvasX = (x - canvasState.x) / canvasState.scale;\n            const canvasY = (y - canvasState.y) / canvasState.scale;\n            console.log('Canvas click for measurement tool (transformed):', {\n                canvasX,\n                canvasY,\n                canvasState\n            });\n            const newPoint = {\n                x: canvasX,\n                y: canvasY\n            };\n            if (simpleMeasurements.some({\n                \"CanvasEditor.useCallback[handleCanvasClick]\": (m)=>!m.completed\n            }[\"CanvasEditor.useCallback[handleCanvasClick]\"])) {\n                // Continue existing measurement\n                const currentMeasurement = simpleMeasurements.find({\n                    \"CanvasEditor.useCallback[handleCanvasClick].currentMeasurement\": (m)=>!m.completed\n                }[\"CanvasEditor.useCallback[handleCanvasClick].currentMeasurement\"]);\n                if (currentMeasurement) {\n                    const updatedPoints = [\n                        ...currentMeasurement.points,\n                        newPoint\n                    ];\n                    // For distance tool, complete after 2 points\n                    if (activeMeasurementTool === 'distance' && updatedPoints.length === 2) {\n                        const distance = Math.sqrt(Math.pow(updatedPoints[1].x - updatedPoints[0].x, 2) + Math.pow(updatedPoints[1].y - updatedPoints[0].y, 2)) / PIXELS_PER_FOOT;\n                        const completedMeasurement = {\n                            ...currentMeasurement,\n                            points: updatedPoints,\n                            value: distance,\n                            label: \"Distance: \".concat(distance.toFixed(0), \" ft\"),\n                            completed: true\n                        };\n                        setSimpleMeasurements({\n                            \"CanvasEditor.useCallback[handleCanvasClick]\": (prev)=>prev.map({\n                                    \"CanvasEditor.useCallback[handleCanvasClick]\": (m)=>m.id === currentMeasurement.id ? completedMeasurement : m\n                                }[\"CanvasEditor.useCallback[handleCanvasClick]\"])\n                        }[\"CanvasEditor.useCallback[handleCanvasClick]\"]);\n                    } else {\n                        // Update current measurement with new point\n                        setSimpleMeasurements({\n                            \"CanvasEditor.useCallback[handleCanvasClick]\": (prev)=>prev.map({\n                                    \"CanvasEditor.useCallback[handleCanvasClick]\": (m)=>m.id === currentMeasurement.id ? {\n                                            ...m,\n                                            points: updatedPoints\n                                        } : m\n                                }[\"CanvasEditor.useCallback[handleCanvasClick]\"])\n                        }[\"CanvasEditor.useCallback[handleCanvasClick]\"]);\n                    }\n                }\n            } else {\n                // Start new measurement\n                const newMeasurement = {\n                    id: \"\".concat(activeMeasurementTool, \"-\").concat(Date.now()),\n                    type: activeMeasurementTool,\n                    points: [\n                        newPoint\n                    ],\n                    value: 0,\n                    label: '',\n                    completed: false\n                };\n                setSimpleMeasurements({\n                    \"CanvasEditor.useCallback[handleCanvasClick]\": (prev)=>[\n                            ...prev,\n                            newMeasurement\n                        ]\n                }[\"CanvasEditor.useCallback[handleCanvasClick]\"]);\n            }\n        }\n    }[\"CanvasEditor.useCallback[handleCanvasClick]\"], [\n        activeMeasurementTool,\n        simpleMeasurements,\n        PIXELS_PER_FOOT\n    ]);\n    // Handle stage click to deselect equipment when clicking on empty canvas\n    const handleStageClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleStageClick]\": (e)=>{\n            // Check if we clicked on the stage itself (not on any equipment)\n            const clickedOnEmpty = e.target === e.target.getStage();\n            if (clickedOnEmpty) {\n                const stage = e.target.getStage();\n                const pos = stage.getPointerPosition();\n                // If enhanced measurement tool is active, handle the click\n                if (measurementToolActive && !activeMeasurementTool && pos) {\n                    const canvasX = (pos.x - canvasState.x) / canvasState.scale;\n                    const canvasY = (pos.y - canvasState.y) / canvasState.scale;\n                    // Forward to enhanced measurement handlers\n                    const handlers = window.enhancedMeasurementHandlers;\n                    if (handlers && handlers.handleClick) {\n                        handlers.handleClick({\n                            target: {\n                                getStage: {\n                                    \"CanvasEditor.useCallback[handleStageClick]\": ()=>stage\n                                }[\"CanvasEditor.useCallback[handleStageClick]\"]\n                            }\n                        });\n                    }\n                    return;\n                }\n                // If a simple measurement tool is active, handle the click for measurement\n                if (activeMeasurementTool && pos) {\n                    handleCanvasClick(pos.x, pos.y);\n                    return;\n                }\n                // Otherwise, deselect equipment\n                onEquipmentSelect === null || onEquipmentSelect === void 0 ? void 0 : onEquipmentSelect(null);\n                setSelectedBackgroundImageId(null);\n            }\n        }\n    }[\"CanvasEditor.useCallback[handleStageClick]\"], [\n        onEquipmentSelect,\n        activeMeasurementTool,\n        measurementToolActive,\n        handleCanvasClick,\n        canvasState\n    ]);\n    // Handle stage double click for measurement tools\n    const handleStageDoubleClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleStageDoubleClick]\": (e)=>{\n            if (!activeMeasurementTool) return;\n            const stage = e.target.getStage();\n            const pos = stage.getPointerPosition();\n            if (pos) {\n                // Transform screen coordinates to canvas coordinates\n                const canvasX = (pos.x - canvasState.x) / canvasState.scale;\n                const canvasY = (pos.y - canvasState.y) / canvasState.scale;\n                console.log('Double-click for measurement tool:', {\n                    x: canvasX,\n                    y: canvasY,\n                    activeMeasurementTool\n                });\n                // Complete the current measurement\n                setSimpleMeasurements({\n                    \"CanvasEditor.useCallback[handleStageDoubleClick]\": (prev)=>{\n                        const currentMeasurement = prev.find({\n                            \"CanvasEditor.useCallback[handleStageDoubleClick].currentMeasurement\": (m)=>!m.completed\n                        }[\"CanvasEditor.useCallback[handleStageDoubleClick].currentMeasurement\"]);\n                        if (!currentMeasurement) return prev;\n                        // Add the final point for area and perimeter measurements\n                        if (activeMeasurementTool === 'area' || activeMeasurementTool === 'perimeter') {\n                            const updatedPoints = [\n                                ...currentMeasurement.points,\n                                {\n                                    x: canvasX,\n                                    y: canvasY\n                                }\n                            ];\n                            // Calculate the measurement value\n                            let value = 0;\n                            let label = '';\n                            if (activeMeasurementTool === 'area' && updatedPoints.length >= 3) {\n                                // Calculate area using shoelace formula\n                                let area = 0;\n                                for(let i = 0; i < updatedPoints.length; i++){\n                                    const j = (i + 1) % updatedPoints.length;\n                                    area += updatedPoints[i].x * updatedPoints[j].y;\n                                    area -= updatedPoints[j].x * updatedPoints[i].y;\n                                }\n                                area = Math.abs(area) / 2;\n                                // Convert from pixels to square feet\n                                const areaInSqFt = area / (PIXELS_PER_FOOT * PIXELS_PER_FOOT);\n                                value = Math.round(areaInSqFt);\n                                label = \"Area: \".concat(value.toLocaleString(), \" sq ft\");\n                            } else if (activeMeasurementTool === 'perimeter' && updatedPoints.length >= 2) {\n                                // Calculate perimeter (sum of all segments + closing segment)\n                                let perimeter = 0;\n                                for(let i = 0; i < updatedPoints.length - 1; i++){\n                                    const dx = updatedPoints[i + 1].x - updatedPoints[i].x;\n                                    const dy = updatedPoints[i + 1].y - updatedPoints[i].y;\n                                    perimeter += Math.sqrt(dx * dx + dy * dy);\n                                }\n                                // Add closing segment\n                                const dx = updatedPoints[0].x - updatedPoints[updatedPoints.length - 1].x;\n                                const dy = updatedPoints[0].y - updatedPoints[updatedPoints.length - 1].y;\n                                perimeter += Math.sqrt(dx * dx + dy * dy);\n                                // Convert from pixels to feet\n                                const perimeterInFt = perimeter / PIXELS_PER_FOOT;\n                                value = Math.round(perimeterInFt);\n                                label = \"Perimeter: \".concat(value.toLocaleString(), \" ft\");\n                            }\n                            console.log('Measurement completed:', {\n                                id: currentMeasurement.id,\n                                value,\n                                label,\n                                completed: true\n                            });\n                            return prev.map({\n                                \"CanvasEditor.useCallback[handleStageDoubleClick]\": (m)=>m.id === currentMeasurement.id ? {\n                                        ...m,\n                                        points: updatedPoints,\n                                        value,\n                                        label,\n                                        completed: true\n                                    } : m\n                            }[\"CanvasEditor.useCallback[handleStageDoubleClick]\"]);\n                        }\n                        return prev;\n                    }\n                }[\"CanvasEditor.useCallback[handleStageDoubleClick]\"]);\n                // Deactivate the measurement tool\n                setActiveMeasurementTool(null);\n            }\n        }\n    }[\"CanvasEditor.useCallback[handleStageDoubleClick]\"], [\n        activeMeasurementTool,\n        canvasState,\n        PIXELS_PER_FOOT\n    ]);\n    // Background image management functions\n    const handleBackgroundImageAdd = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CanvasEditor.useCallback[handleBackgroundImageAdd]\": (image)=>{\n            const imageWithId = {\n                ...image,\n                id: \"bg-\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9))\n            };\n            onBackgroundImageAdd === null || onBackgroundImageAdd === void 0 ? void 0 : onBackgroundImageAdd(imageWithId);\n        }\n    }[\"CanvasEditor.useCallback[handleBackgroundImageAdd]\"], [\n        onBackgroundImageAdd\n    ]);\n    const handleBackgroundImageSelect = (imageId)=>{\n        setSelectedBackgroundImageId(imageId);\n    };\n    const calibrateImageScale = (actualDistance, calculatedDistance)=>{\n        // Calculate the scale correction factor\n        const scaleCorrection = actualDistance / calculatedDistance;\n        // Apply the correction to all background images\n        backgroundImages.forEach((image)=>{\n            if (onBackgroundImageUpdate) {\n                onBackgroundImageUpdate(image.id, {\n                    scaleX: image.scaleX * scaleCorrection,\n                    scaleY: image.scaleY * scaleCorrection\n                });\n            }\n        });\n        console.log(\"Scale calibrated: \".concat(scaleCorrection.toFixed(3), \"x correction applied to \").concat(backgroundImages.length, \" background images\"));\n    };\n    const handleShowDistanceInput = (calculatedDistance, onSubmit, onCancel)=>{\n        setDistanceInputData({\n            calculatedDistance,\n            onSubmit: (actualDistance)=>{\n                // Calibrate the image scale automatically\n                calibrateImageScale(actualDistance, calculatedDistance);\n                onSubmit(actualDistance);\n                setShowDistanceInput(false);\n                setDistanceInputData(null);\n            },\n            onCancel: ()=>{\n                onCancel();\n                setShowDistanceInput(false);\n                setDistanceInputData(null);\n            }\n        });\n        setShowDistanceInput(true);\n    };\n    // Ensure client-side only rendering to prevent hydration mismatches\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CanvasEditor.useEffect\": ()=>{\n            setIsClient(true);\n        }\n    }[\"CanvasEditor.useEffect\"], []);\n    // Don't render canvas during SSR to prevent hydration mismatches\n    if (!isClient) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"relative w-full h-full \".concat(className, \" flex items-center justify-center bg-gray-50\"),\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-gray-500\",\n                children: \"Loading canvas...\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                lineNumber: 800,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n            lineNumber: 799,\n            columnNumber: 7\n        }, undefined);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative w-full h-full \".concat(className, \" flex flex-col\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute top-4 right-4 z-10 flex flex-col gap-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: resetCanvas,\n                        className: \"px-3 py-1 bg-white border border-gray-300 rounded shadow hover:bg-gray-50 text-sm text-gray-900\",\n                        title: \"Reset View\",\n                        children: \"Reset\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 809,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: fitToContent,\n                        className: \"px-3 py-1 bg-white border border-gray-300 rounded shadow hover:bg-gray-50 text-sm text-gray-900\",\n                        title: \"Fit to Content\",\n                        children: \"Fit\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 816,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center space-x-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex space-x-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: zoomIn,\n                                        className: \"flex-1 px-6 py-1 bg-white border border-gray-300 rounded shadow hover:bg-gray-50 text-sm text-gray-900 text-center\",\n                                        title: \"Zoom In\",\n                                        children: \"+\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                        lineNumber: 827,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: zoomOut,\n                                        className: \"flex-1 px-6 py-1 bg-white border border-gray-300 rounded shadow hover:bg-gray-50 text-sm text-gray-900 text-center\",\n                                        title: \"Zoom Out\",\n                                        children: \"−\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                        lineNumber: 834,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 826,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-sm text-gray-900 font-medium bg-white px-3 py-1 rounded border border-gray-300 shadow text-center flex items-center justify-center\",\n                                children: [\n                                    \"Zoom (\",\n                                    Math.round(canvasState.scale * 100),\n                                    \"%)\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 844,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>{\n                                    if (!stageRef.current) return;\n                                    const stage = stageRef.current;\n                                    // If there are background images, fit the largest one; otherwise fit canvas\n                                    if (backgroundImages && backgroundImages.length > 0) {\n                                        // Find the largest background image dimensions\n                                        let maxWidth = 0;\n                                        let maxHeight = 0;\n                                        let targetImage = null;\n                                        backgroundImages.forEach((img)=>{\n                                            const imgWidth = (img.width || 0) * (img.scaleX || 1);\n                                            const imgHeight = (img.height || 0) * (img.scaleY || 1);\n                                            const imgArea = imgWidth * imgHeight;\n                                            const currentMaxArea = maxWidth * maxHeight;\n                                            if (imgArea > currentMaxArea) {\n                                                maxWidth = imgWidth;\n                                                maxHeight = imgHeight;\n                                                targetImage = img;\n                                            }\n                                        });\n                                        if (maxWidth > 0 && maxHeight > 0) {\n                                            // Calculate scale to fit the largest background image\n                                            const scaleX = stageSize.width / maxWidth;\n                                            const scaleY = stageSize.height / maxHeight;\n                                            const fitScale = Math.min(scaleX, scaleY) * 0.9 // 90% padding\n                                            ;\n                                            // Center the image in the viewport\n                                            const centerX = (stageSize.width - maxWidth * fitScale) / 2;\n                                            const centerY = (stageSize.height - maxHeight * fitScale) / 2;\n                                            // If image has position, account for it\n                                            const adjustedX = centerX - ((targetImage === null || targetImage === void 0 ? void 0 : targetImage.x) || 0) * fitScale;\n                                            const adjustedY = centerY - ((targetImage === null || targetImage === void 0 ? void 0 : targetImage.y) || 0) * fitScale;\n                                            stage.scale({\n                                                x: fitScale,\n                                                y: fitScale\n                                            });\n                                            stage.position({\n                                                x: adjustedX,\n                                                y: adjustedY\n                                            });\n                                            stage.batchDraw();\n                                            setCanvasState({\n                                                scale: fitScale,\n                                                x: adjustedX,\n                                                y: adjustedY\n                                            });\n                                            console.log(\"Max Out: Fit satellite image (\".concat(Math.round(maxWidth), \"x\").concat(Math.round(maxHeight), \"px) in viewport (\").concat(stageSize.width, \"x\").concat(stageSize.height, \"px) at \").concat(Math.round(fitScale * 100), \"% zoom\"));\n                                            return;\n                                        }\n                                    }\n                                    // Fallback: fit entire canvas if no background images\n                                    const scaleX = stageSize.width / CANVAS_SIZE_PIXELS;\n                                    const scaleY = stageSize.height / CANVAS_SIZE_PIXELS;\n                                    const fitScale = Math.min(scaleX, scaleY) * 0.9 // 90% to add some padding\n                                    ;\n                                    // Center the canvas in the viewport\n                                    const centerX = (stageSize.width - CANVAS_SIZE_PIXELS * fitScale) / 2;\n                                    const centerY = (stageSize.height - CANVAS_SIZE_PIXELS * fitScale) / 2;\n                                    stage.scale({\n                                        x: fitScale,\n                                        y: fitScale\n                                    });\n                                    stage.position({\n                                        x: centerX,\n                                        y: centerY\n                                    });\n                                    stage.batchDraw();\n                                    setCanvasState({\n                                        scale: fitScale,\n                                        x: centerX,\n                                        y: centerY\n                                    });\n                                    console.log(\"Max Out: Fit entire canvas (\".concat(CANVAS_SIZE_PIXELS, \"px) in viewport (\").concat(stageSize.width, \"x\").concat(stageSize.height, \"px) at \").concat(Math.round(fitScale * 100), \"% zoom\"));\n                                },\n                                className: \"px-3 py-1 bg-white border border-gray-300 rounded shadow hover:bg-gray-50 text-sm text-gray-900 text-center\",\n                                title: \"Fit Entire Satellite Image in View\",\n                                children: \"Max Out\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 849,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 825,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>setGridVisible(!gridVisible),\n                        className: \"px-3 py-1 border rounded shadow text-sm \".concat(gridVisible ? 'bg-blue-500 text-white border-blue-500' : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'),\n                        title: \"Toggle Grid\",\n                        children: \"Grid\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 931,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>setBackgroundManagerOpen(true),\n                        className: \"px-3 py-1 bg-white border border-gray-300 rounded shadow hover:bg-gray-50 text-sm text-gray-900\",\n                        title: \"Manage Background Images\",\n                        children: \"Images\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 942,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>setScaleBarVisible(!scaleBarVisible),\n                        className: \"px-3 py-1 border rounded shadow text-sm \".concat(scaleBarVisible ? 'bg-green-500 text-white border-green-500' : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'),\n                        title: \"Toggle Scale Bar\",\n                        children: \"Scale\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 949,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex space-x-1\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>{\n                                    if (measurementToolActive) {\n                                        // Reset measurement if already active\n                                        setCurrentMeasurement(null);\n                                        setMeasurementToolActive(false);\n                                        setMeasurementEditMode(false);\n                                    } else {\n                                        // Start new measurement\n                                        setCurrentMeasurement({\n                                            id: Date.now().toString(),\n                                            firstPoint: null,\n                                            secondPoint: null,\n                                            isComplete: false\n                                        });\n                                        setMeasurementToolActive(true);\n                                        setMeasurementEditMode(false);\n                                    }\n                                },\n                                className: \"px-3 py-1 border rounded shadow text-sm transition-colors \".concat(measurementToolActive && !measurementEditMode ? 'bg-orange-500 text-white border-orange-500' : 'bg-white text-gray-900 border-gray-300 hover:bg-gray-50'),\n                                title: \"Start New Measurement\",\n                                children: \"\\uD83D\\uDCCF Measure\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 962,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>{\n                                    if (currentMeasurement === null || currentMeasurement === void 0 ? void 0 : currentMeasurement.isComplete) {\n                                        setMeasurementEditMode(!measurementEditMode);\n                                    }\n                                },\n                                disabled: !(currentMeasurement === null || currentMeasurement === void 0 ? void 0 : currentMeasurement.isComplete),\n                                className: \"px-3 py-1 border rounded shadow text-sm transition-colors \".concat(measurementEditMode ? 'bg-blue-500 text-white border-blue-500' : (currentMeasurement === null || currentMeasurement === void 0 ? void 0 : currentMeasurement.isComplete) ? 'bg-white text-gray-900 border-gray-300 hover:bg-gray-50' : 'bg-gray-200 text-gray-400 border-gray-200 cursor-not-allowed'),\n                                title: \"Edit Measurement Line\",\n                                children: \"✏️ Edit\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 991,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>{\n                                    if (currentMeasurement === null || currentMeasurement === void 0 ? void 0 : currentMeasurement.isComplete) {\n                                        setShowCalibrateDialog(true);\n                                    }\n                                },\n                                disabled: !(currentMeasurement === null || currentMeasurement === void 0 ? void 0 : currentMeasurement.isComplete),\n                                className: \"px-3 py-1 border rounded shadow text-sm transition-colors \".concat((currentMeasurement === null || currentMeasurement === void 0 ? void 0 : currentMeasurement.isComplete) ? 'bg-white text-gray-900 border-gray-300 hover:bg-gray-50' : 'bg-gray-200 text-gray-400 border-gray-200 cursor-not-allowed'),\n                                title: \"Calibrate Scale\",\n                                children: \"\\uD83C\\uDFAF Calibrate\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 1010,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 961,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex space-x-1\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>setActiveMeasurementTool(activeMeasurementTool === 'area' ? null : 'area'),\n                                className: \"px-3 py-2 rounded text-sm font-medium transition-colors \".concat(activeMeasurementTool === 'area' ? 'bg-green-500 text-white' : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'),\n                                title: \"Area Measurement Tool\",\n                                children: \"\\uD83D\\uDCD0 Area\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 1030,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>setActiveMeasurementTool(activeMeasurementTool === 'perimeter' ? null : 'perimeter'),\n                                className: \"px-3 py-2 rounded text-sm font-medium transition-colors \".concat(activeMeasurementTool === 'perimeter' ? 'bg-blue-500 text-white' : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'),\n                                title: \"Perimeter Measurement Tool\",\n                                children: \"\\uD83D\\uDCCF Perimeter\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 1042,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>setActiveMeasurementTool(activeMeasurementTool === 'distance' ? null : 'distance'),\n                                className: \"px-3 py-2 rounded text-sm font-medium transition-colors \".concat(activeMeasurementTool === 'distance' ? 'bg-amber-500 text-white' : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'),\n                                title: \"Distance Measurement Tool\",\n                                children: \"\\uD83D\\uDCCF Distance\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                                lineNumber: 1054,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                        lineNumber: 1029,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                lineNumber: 808,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_konva__WEBPACK_IMPORTED_MODULE_2__.Stage, {\n                ref: stageRef,\n                width: stageSize.width,\n                height: stageSize.height,\n                draggable: !measurementToolActive && !activeMeasurementTool,\n                onWheel: handleWheel,\n                onDragEnd: handleDragEnd,\n                onClick: handleStageClick,\n                onDblClick: handleStageDoubleClick,\n                className: \"border border-gray-300 bg-gray-50 flex-1\",\n                onContentMouseDown: ()=>{\n                    // Ensure canvas element is captured after stage is fully mounted\n                    if (stageRef.current && onCanvasReady) {\n                        const container = stageRef.current.container();\n                        if (container) {\n                            console.log('Stage mounted, capturing canvas element:', container);\n                            onCanvasReady(container);\n                        }\n                    }\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_konva__WEBPACK_IMPORTED_MODULE_2__.Layer, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_BackgroundLayer__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                            images: backgroundImages,\n                            onImageUpdate: onBackgroundImageUpdate,\n                            onImageDelete: onBackgroundImageDelete,\n                            onImageSelect: handleBackgroundImageSelect,\n                            selectedImageId: selectedBackgroundImageId,\n                            scale: canvasState.scale,\n                            editable: true\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                            lineNumber: 1096,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_GridLayer__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                            width: CANVAS_SIZE_PIXELS,\n                            height: CANVAS_SIZE_PIXELS,\n                            scale: canvasState.scale,\n                            x: canvasState.x,\n                            y: canvasState.y,\n                            visible: gridVisible,\n                            gridSize: PIXELS_PER_FOOT\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                            lineNumber: 1107,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_EquipmentLayer__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            equipment: placedEquipment,\n                            equipmentDefinitions: equipmentDefinitions,\n                            scale: canvasState.scale,\n                            onEquipmentSelect: onEquipmentSelect,\n                            onEquipmentMove: onEquipmentMove,\n                            onEquipmentRotate: onEquipmentRotate,\n                            onEquipmentDelete: onEquipmentDelete,\n                            selectedEquipmentId: selectedEquipmentId,\n                            snapToGrid: true,\n                            gridSize: PIXELS_PER_FOOT\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                            lineNumber: 1118,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_EnhancedMeasurementTool__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                            isActive: measurementToolActive && !activeMeasurementTool,\n                            editMode: measurementEditMode,\n                            scale: canvasState.scale,\n                            pixelsPerFoot: PIXELS_PER_FOOT,\n                            currentMeasurement: currentMeasurement,\n                            onPointSet: handleEnhancedMeasurementPointSet,\n                            onMeasurementComplete: (distance)=>{\n                                console.log('Enhanced measurement completed:', distance);\n                            },\n                            onMeasurementEdit: handleEnhancedMeasurementEdit\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                            lineNumber: 1132,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_MeasurementTool__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                            isActive: false,\n                            scale: canvasState.scale,\n                            pixelsPerFoot: PIXELS_PER_FOOT,\n                            onMeasurementComplete: (measurement)=>{\n                                setMeasurements((prev)=>[\n                                        ...prev,\n                                        measurement\n                                    ]);\n                                console.log('New measurement:', measurement);\n                            },\n                            onShowDistanceInput: handleShowDistanceInput\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                            lineNumber: 1146,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_SimpleMeasurementTool__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                            activeTool: activeMeasurementTool,\n                            scale: canvasState.scale,\n                            pixelsPerFoot: PIXELS_PER_FOOT,\n                            measurements: simpleMeasurements,\n                            onMeasurementComplete: (measurement)=>{\n                                setSimpleMeasurements((prev)=>[\n                                        ...prev,\n                                        measurement\n                                    ]);\n                            },\n                            onMeasurementDelete: (id)=>{\n                                setSimpleMeasurements((prev)=>prev.filter((m)=>m.id !== id));\n                            }\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                            lineNumber: 1158,\n                            columnNumber: 11\n                        }, undefined),\n                        scaleBarVisible && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ScaleBar__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                            scale: canvasState.scale,\n                            canvasWidth: stageSize.width,\n                            canvasHeight: stageSize.height,\n                            pixelsPerFoot: PIXELS_PER_FOOT\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                            lineNumber: 1173,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                    lineNumber: 1094,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                lineNumber: 1073,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_BackgroundImageManager__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                images: backgroundImages,\n                onImageAdd: handleBackgroundImageAdd,\n                onImageUpdate: onBackgroundImageUpdate || (()=>{}),\n                onImageDelete: onBackgroundImageDelete || (()=>{}),\n                onImageSelect: handleBackgroundImageSelect,\n                selectedImageId: selectedBackgroundImageId,\n                isOpen: backgroundManagerOpen,\n                onClose: ()=>setBackgroundManagerOpen(false)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                lineNumber: 1184,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_DistanceInputModal__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                isOpen: showDistanceInput,\n                calculatedDistance: (distanceInputData === null || distanceInputData === void 0 ? void 0 : distanceInputData.calculatedDistance) || 0,\n                onSubmit: (distanceInputData === null || distanceInputData === void 0 ? void 0 : distanceInputData.onSubmit) || (()=>{}),\n                onCancel: (distanceInputData === null || distanceInputData === void 0 ? void 0 : distanceInputData.onCancel) || (()=>{})\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                lineNumber: 1196,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_EnhancedCalibrateDialog__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                isOpen: showCalibrateDialog,\n                calculatedDistance: currentMeasurement && currentMeasurement.firstPoint && currentMeasurement.secondPoint ? Math.sqrt(Math.pow(currentMeasurement.secondPoint.x - currentMeasurement.firstPoint.x, 2) + Math.pow(currentMeasurement.secondPoint.y - currentMeasurement.firstPoint.y, 2)) / PIXELS_PER_FOOT : 0,\n                onSubmit: handleCalibrateSubmit,\n                onEdit: handleCalibrateEdit,\n                onCancel: handleCalibrateCancel\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n                lineNumber: 1204,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\scale\\\\CascadeProjects\\\\FrazierShows Apps\\\\Lot Planner\\\\src\\\\components\\\\canvas\\\\CanvasEditor.tsx\",\n        lineNumber: 806,\n        columnNumber: 5\n    }, undefined);\n};\n_s(CanvasEditor, \"FD1N4juQo+zangP88CLFAsmwu1w=\");\n_c = CanvasEditor;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanvasEditor);\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2NhbnZhcy9DYW52YXNFZGl0b3IudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRXVFO0FBQzdCO0FBRVA7QUFDVTtBQUN1QjtBQUNQO0FBQzVCO0FBQ29DO0FBQ2hCO0FBQzZCO0FBQ25CO0FBQ0E7QUE0Qi9ELE1BQU1pQixlQUE0QztRQUFDLEVBQ2pEQyxRQUFRLElBQUksRUFDWkMsU0FBUyxHQUFHLEVBQ1pDLFlBQVksRUFBRSxFQUNkQyxjQUFjLEVBQ2RDLGtCQUFrQixFQUFFLEVBQ3BCQyxvQkFBb0IsRUFDcEJDLGlCQUFpQixFQUNqQkMsZUFBZSxFQUNmQyxpQkFBaUIsRUFDakJDLGlCQUFpQixFQUNqQkMsbUJBQW1CLEVBQ25CQyxtQkFBbUIsRUFBRSxFQUNyQkMsb0JBQW9CLEVBQ3BCQyx1QkFBdUIsRUFDdkJDLHVCQUF1QixFQUN2QkMsYUFBYSxFQUNkOztJQUNDLE1BQU1DLFdBQVdqQyw2Q0FBTUEsQ0FBYztJQUNyQyxNQUFNLENBQUNrQyxVQUFVQyxZQUFZLEdBQUdqQywrQ0FBUUEsQ0FBQztJQUV6Qyw2REFBNkQ7SUFDN0QsTUFBTWtDLG9CQUFvQjtJQUMxQixNQUFNQyxpQkFBaUJDLEtBQUtDLElBQUksQ0FBQ0gsbUJBQW1CLFlBQVk7O0lBQ2hFLE1BQU1JLGtCQUFrQixHQUFHLG1EQUFtRDs7SUFDOUUsTUFBTUMscUJBQXFCSixpQkFBaUJHLGdCQUFnQixlQUFlOztJQUUzRSxNQUFNLENBQUNFLGFBQWFDLGVBQWUsR0FBR3pDLCtDQUFRQSxDQUFjO1FBQzFEMEMsT0FBTztRQUNQQyxHQUFHO1FBQ0hDLEdBQUc7SUFDTDtJQUNBLE1BQU0sQ0FBQ0MsV0FBV0MsYUFBYSxHQUFHOUMsK0NBQVFBLENBQUM7UUFBRWU7UUFBT0M7SUFBTztJQUMzRCxNQUFNLENBQUMrQixhQUFhQyxlQUFlLEdBQUdoRCwrQ0FBUUEsQ0FBQztJQUMvQyxNQUFNLENBQUNpRCx1QkFB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QkFBbUJpSCxVQUFVLENBQUMzSSxDQUFDLEVBQUUsS0FDN0VQLEtBQUt1SyxHQUFHLENBQUN0SSxtQkFBbUJrSCxXQUFXLENBQUMzSSxDQUFDLEdBQUd5QixtQkFBbUJpSCxVQUFVLENBQUMxSSxDQUFDLEVBQUUsTUFDM0VOLGtCQUNKO2dCQUVKNkwsVUFBVXRDO2dCQUNWdUYsUUFBUWxGO2dCQUNSa0MsVUFBVWpDOzs7Ozs7Ozs7Ozs7QUFJbEI7R0F4cENNckw7S0FBQUE7QUEwcENOLGlFQUFlQSxZQUFZQSxFQUFBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXHNjYWxlXFxDYXNjYWRlUHJvamVjdHNcXEZyYXppZXJTaG93cyBBcHBzXFxMb3QgUGxhbm5lclxcc3JjXFxjb21wb25lbnRzXFxjYW52YXNcXENhbnZhc0VkaXRvci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXG5cbmltcG9ydCBSZWFjdCwgeyB1c2VSZWYsIHVzZUVmZmVjdCwgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBTdGFnZSwgTGF5ZXIgfSBmcm9tICdyZWFjdC1rb252YSdcbmltcG9ydCBLb252YSBmcm9tICdrb252YSdcbmltcG9ydCBHcmlkTGF5ZXIgZnJvbSAnLi9HcmlkTGF5ZXInXG5pbXBvcnQgRXF1aXBtZW50TGF5ZXIgZnJvbSAnLi9FcXVpcG1lbnRMYXllcidcbmltcG9ydCBCYWNrZ3JvdW5kTGF5ZXIsIHsgQmFja2dyb3VuZEltYWdlIH0gZnJvbSAnLi9CYWNrZ3JvdW5kTGF5ZXInXG5pbXBvcnQgQmFja2dyb3VuZEltYWdlTWFuYWdlciBmcm9tICcuL0JhY2tncm91bmRJbWFnZU1hbmFnZXInXG5pbXBvcnQgU2NhbGVCYXIgZnJvbSAnLi9TY2FsZUJhcidcbmltcG9ydCBNZWFzdXJlbWVudFRvb2wsIHsgdHlwZSBNZWFzdXJlbWVudCB9IGZyb20gJy4vTWVhc3VyZW1lbnRUb29sJ1xuaW1wb3J0IERpc3RhbmNlSW5wdXRNb2RhbCBmcm9tICcuL0Rpc3RhbmNlSW5wdXRNb2RhbCdcbmltcG9ydCBTaW1wbGVNZWFzdXJlbWVudFRvb2wsIHsgU2ltcGxlTWVhc3VyZW1lbnQgfSBmcm9tICcuL1NpbXBsZU1lYXN1cmVtZW50VG9vbCdcbmltcG9ydCBFbmhhbmNlZE1lYXN1cmVtZW50VG9vbCBmcm9tICcuL0VuaGFuY2VkTWVhc3VyZW1lbnRUb29sJ1xuaW1wb3J0IEVuaGFuY2VkQ2FsaWJyYXRlRGlhbG9nIGZyb20gJy4vRW5oYW5jZWRDYWxpYnJhdGVEaWFsb2cnXG5pbXBvcnQgeyBQbGFjZWRFcXVpcG1lbnQsIEVxdWlwbWVudEl0ZW0gfSBmcm9tICdAL2xpYi9lcXVpcG1lbnQvdHlwZXMnXG5cbmludGVyZmFjZSBDYW52YXNFZGl0b3JQcm9wcyB7XG4gIHdpZHRoPzogbnVtYmVyXG4gIGhlaWdodD86IG51bWJlclxuICBjbGFzc05hbWU/OiBzdHJpbmdcbiAgb25FcXVpcG1lbnRBZGQ/OiAoZXF1aXBtZW50OiBFcXVpcG1lbnRJdGVtLCB4OiBudW1iZXIsIHk6IG51bWJlcikgPT4gdm9pZFxuICBwbGFjZWRFcXVpcG1lbnQ/OiBQbGFjZWRFcXVpcG1lbnRbXVxuICBlcXVpcG1lbnREZWZpbml0aW9ucz86IEVxdWlwbWVudEl0ZW1bXVxuICBvbkVxdWlwbWVudFNlbGVjdD86IChlcXVpcG1lbnQ6IFBsYWNlZEVxdWlwbWVudCB8IG51bGwpID0+IHZvaWRcbiAgb25FcXVpcG1lbnRNb3ZlPzogKGVxdWlwbWVudElkOiBzdHJpbmcsIHg6IG51bWJlciwgeTogbnVtYmVyKSA9PiB2b2lkXG4gIG9uRXF1aXBtZW50Um90YXRlPzogKGVxdWlwbWVudElkOiBzdHJpbmcsIHJvdGF0aW9uOiBudW1iZXIpID0+IHZvaWRcbiAgb25FcXVpcG1lbnREZWxldGU/OiAoZXF1aXBtZW50SWQ6IHN0cmluZykgPT4gdm9pZFxuICBzZWxlY3RlZEVxdWlwbWVudElkPzogc3RyaW5nXG4gIGJhY2tncm91bmRJbWFnZXM/OiBCYWNrZ3JvdW5kSW1hZ2VbXVxuICBvbkJhY2tncm91bmRJbWFnZUFkZD86IChpbWFnZTogT21pdDxCYWNrZ3JvdW5kSW1hZ2UsICdpZCc+KSA9PiB2b2lkXG4gIG9uQmFja2dyb3VuZEltYWdlVXBkYXRlPzogKGltYWdlSWQ6IHN0cmluZywgdXBkYXRlczogUGFydGlhbDxCYWNrZ3JvdW5kSW1hZ2U+KSA9PiB2b2lkXG4gIG9uQmFja2dyb3VuZEltYWdlRGVsZXRlPzogKGltYWdlSWQ6IHN0cmluZykgPT4gdm9pZFxuICBvbkNhbnZhc1JlYWR5PzogKGNhbnZhc0VsZW1lbnQ6IEhUTUxFbGVtZW50KSA9PiB2b2lkXG59XG5cbmludGVyZmFjZSBDYW52YXNTdGF0ZSB7XG4gIHNjYWxlOiBudW1iZXJcbiAgeDogbnVtYmVyXG4gIHk6IG51bWJlclxufVxuXG5jb25zdCBDYW52YXNFZGl0b3I6IFJlYWN0LkZDPENhbnZhc0VkaXRvclByb3BzPiA9ICh7XG4gIHdpZHRoID0gMTIwMCxcbiAgaGVpZ2h0ID0gODAwLFxuICBjbGFzc05hbWUgPSAnJyxcbiAgb25FcXVpcG1lbnRBZGQsXG4gIHBsYWNlZEVxdWlwbWVudCA9IFtdLFxuICBlcXVpcG1lbnREZWZpbml0aW9ucyxcbiAgb25FcXVpcG1lbnRTZWxlY3QsXG4gIG9uRXF1aXBtZW50TW92ZSxcbiAgb25FcXVpcG1lbnRSb3RhdGUsXG4gIG9uRXF1aXBtZW50RGVsZXRlLFxuICBzZWxlY3RlZEVxdWlwbWVudElkLFxuICBiYWNrZ3JvdW5kSW1hZ2VzID0gW10sXG4gIG9uQmFja2dyb3VuZEltYWdlQWRkLFxuICBvbkJhY2tncm91bmRJbWFnZVVwZGF0ZSxcbiAgb25CYWNrZ3JvdW5kSW1hZ2VEZWxldGUsXG4gIG9uQ2FudmFzUmVhZHlcbn0pID0+IHtcbiAgY29uc3Qgc3RhZ2VSZWYgPSB1c2VSZWY8S29udmEuU3RhZ2U+KG51bGwpXG4gIGNvbnN0IFtpc0NsaWVudCwgc2V0SXNDbGllbnRdID0gdXNlU3RhdGUoZmFsc2UpXG4gIFxuICAvLyBDYW52YXMgY29uZmlndXJhdGlvbiBmb3IgMSwwMDAsMDAwIHNxIGZ0ICgxMDAwZnQgeCAxMDAwZnQpXG4gIGNvbnN0IENBTlZBU19BUkVBX1NRX0ZUID0gMTAwMDAwMFxuICBjb25zdCBDQU5WQVNfU0lERV9GVCA9IE1hdGguc3FydChDQU5WQVNfQVJFQV9TUV9GVCkgLy8gMTAwMCBmZWV0XG4gIGNvbnN0IFBJWEVMU19QRVJfRk9PVCA9IDEwIC8vIE9wdGltaXplZCBmb3IgcGVyZm9ybWFuY2Ugd2l0aCB1bHRyYS1sYXJnZSBhcmVhc1xuICBjb25zdCBDQU5WQVNfU0laRV9QSVhFTFMgPSBDQU5WQVNfU0lERV9GVCAqIFBJWEVMU19QRVJfRk9PVCAvLyAxMDAwMCBwaXhlbHNcbiAgXG4gIGNvbnN0IFtjYW52YXNTdGF0ZSwgc2V0Q2FudmFzU3RhdGVdID0gdXNlU3RhdGU8Q2FudmFzU3RhdGU+KHtcbiAgICBzY2FsZTogMC4yLCAvLyBTdGFydCB6b29tZWQgb3V0IHRvIHNlZSBtb3JlIG9mIHRoZSBsYXJnZSBhcmVhXG4gICAgeDogMCxcbiAgICB5OiAwXG4gIH0pXG4gIGNvbnN0IFtzdGFnZVNpemUsIHNldFN0YWdlU2l6ZV0gPSB1c2VTdGF0ZSh7IHdpZHRoLCBoZWlnaHQgfSlcbiAgY29uc3QgW2dyaWRWaXNpYmxlLCBzZXRHcmlkVmlzaWJsZV0gPSB1c2VTdGF0ZSh0cnVlKVxuICBjb25zdCBbYmFja2dyb3VuZE1hbmFnZXJPcGVuLCBzZXRCYWNrZ3JvdW5kTWFuYWdlck9wZW5dID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtzZWxlY3RlZEJhY2tncm91bmRJbWFnZUlkLCBzZXRTZWxlY3RlZEJhY2tncm91bmRJbWFnZUlkXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpXG4gIGNvbnN0IFtzY2FsZUJhclZpc2libGUsIHNldFNjYWxlQmFyVmlzaWJsZV0gPSB1c2VTdGF0ZSh0cnVlKVxuICBjb25zdCBbbWVhc3VyZW1lbnRUb29sQWN0aXZlLCBzZXRNZWFzdXJlbWVudFRvb2xBY3RpdmVdID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFttZWFzdXJlbWVudHMsIHNldE1lYXN1cmVtZW50c10gPSB1c2VTdGF0ZTxNZWFzdXJlbWVudFtdPihbXSlcbiAgY29uc3QgW2FjdGl2ZU1lYXN1cmVtZW50VG9vbCwgc2V0QWN0aXZlTWVhc3VyZW1lbnRUb29sXSA9IHVzZVN0YXRlPCdhcmVhJyB8ICdwZXJpbWV0ZXInIHwgJ2Rpc3RhbmNlJyB8IG51bGw+KG51bGwpXG4gIGNvbnN0IFtzaW1wbGVNZWFzdXJlbWVudHMsIHNldFNpbXBsZU1lYXN1cmVtZW50c10gPSB1c2VTdGF0ZTxTaW1wbGVNZWFzdXJlbWVudFtdPihbXSlcbiAgY29uc3QgW3Nob3dEaXN0YW5jZUlucHV0LCBzZXRTaG93RGlzdGFuY2VJbnB1dF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2Rpc3RhbmNlSW5wdXREYXRhLCBzZXREaXN0YW5jZUlucHV0RGF0YV0gPSB1c2VTdGF0ZTx7XG4gICAgY2FsY3VsYXRlZERpc3RhbmNlOiBudW1iZXI7XG4gICAgb25TdWJtaXQ6IChhY3R1YWxEaXN0YW5jZTogbnVtYmVyKSA9PiB2b2lkO1xuICAgIG9uQ2FuY2VsOiAoKSA9PiB2b2lkO1xuICB9IHwgbnVsbD4obnVsbClcbiAgXG4gIC8vIEVuaGFuY2VkIG1lYXN1cmVtZW50IHdvcmtmbG93IHN0YXRlc1xuICBjb25zdCBbbWVhc3VyZW1lbnRFZGl0TW9kZSwgc2V0TWVhc3VyZW1lbnRFZGl0TW9kZV0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2N1cnJlbnRNZWFzdXJlbWVudCwgc2V0Q3VycmVudE1lYXN1cmVtZW50XSA9IHVzZVN0YXRlPHtcbiAgICBpZDogc3RyaW5nO1xuICAgIGZpcnN0UG9pbnQ6IHsgeDogbnVtYmVyOyB5OiBudW1iZXIgfSB8IG51bGw7XG4gICAgc2Vjb25kUG9pbnQ6IHsgeDogbnVtYmVyOyB5OiBudW1iZXIgfSB8IG51bGw7XG4gICAgaXNDb21wbGV0ZTogYm9vbGVhbjtcbiAgICByZWFsV29ybGREaXN0YW5jZT86IG51bWJlcjtcbiAgfSB8IG51bGw+KG51bGwpXG4gIGNvbnN0IFtzaG93Q2FsaWJyYXRlRGlhbG9nLCBzZXRTaG93Q2FsaWJyYXRlRGlhbG9nXSA9IHVzZVN0YXRlKGZhbHNlKVxuXG4gIC8vIEhhbmRsZSBjYW52YXMgcmVhZHkgY2FsbGJhY2tcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoaXNDbGllbnQgJiYgb25DYW52YXNSZWFkeSkge1xuICAgICAgLy8gVXNlIGEgdGltZW91dCB0byBlbnN1cmUgdGhlIHN0YWdlIGlzIGZ1bGx5IG1vdW50ZWRcbiAgICAgIGNvbnN0IHRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaWYgKHN0YWdlUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICBjb25zdCBjb250YWluZXIgPSBzdGFnZVJlZi5jdXJyZW50LmNvbnRhaW5lcigpXG4gICAgICAgICAgaWYgKGNvbnRhaW5lcikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0NhbnZhcyByZWFkeSwgY2FsbGluZyBvbkNhbnZhc1JlYWR5IHdpdGggY29udGFpbmVyOicsIGNvbnRhaW5lcilcbiAgICAgICAgICAgIG9uQ2FudmFzUmVhZHkoY29udGFpbmVyKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSwgMTAwKSAvLyBTbWFsbCBkZWxheSB0byBlbnN1cmUgc3RhZ2UgaXMgbW91bnRlZFxuICAgICAgXG4gICAgICByZXR1cm4gKCkgPT4gY2xlYXJUaW1lb3V0KHRpbWVvdXQpXG4gICAgfVxuICB9LCBbb25DYW52YXNSZWFkeSwgaXNDbGllbnRdKVxuXG4gIC8vIEhhbmRsZSB3aW5kb3cgcmVzaXplIHRvIG1ha2UgY2FudmFzIHJlc3BvbnNpdmVcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVSZXNpemUgPSAoKSA9PiB7XG4gICAgICBpZiAoc3RhZ2VSZWYuY3VycmVudCkge1xuICAgICAgICBjb25zdCBjb250YWluZXIgPSBzdGFnZVJlZi5jdXJyZW50LmNvbnRhaW5lcigpXG4gICAgICAgIGNvbnN0IHBhcmVudCA9IGNvbnRhaW5lci5wYXJlbnRFbGVtZW50XG4gICAgICAgIFxuICAgICAgICAvLyBVc2UgcGFyZW50IGNvbnRhaW5lciBkaW1lbnNpb25zIHRvIGVuc3VyZSBmdWxsIGhlaWdodCB1c2FnZVxuICAgICAgICBjb25zdCBjb250YWluZXJXaWR0aCA9IHBhcmVudCA/IHBhcmVudC5jbGllbnRXaWR0aCA6IGNvbnRhaW5lci5vZmZzZXRXaWR0aFxuICAgICAgICBjb25zdCBjb250YWluZXJIZWlnaHQgPSBwYXJlbnQgPyBwYXJlbnQuY2xpZW50SGVpZ2h0IDogY29udGFpbmVyLm9mZnNldEhlaWdodFxuICAgICAgICBcbiAgICAgICAgY29uc29sZS5sb2coJ0NhbnZhcyByZXNpemU6JywgeyBjb250YWluZXJXaWR0aCwgY29udGFpbmVySGVpZ2h0LCBwYXJlbnQ6ICEhcGFyZW50IH0pXG4gICAgICAgIFxuICAgICAgICBzZXRTdGFnZVNpemUoe1xuICAgICAgICAgIHdpZHRoOiBjb250YWluZXJXaWR0aCxcbiAgICAgICAgICBoZWlnaHQ6IGNvbnRhaW5lckhlaWdodFxuICAgICAgICB9KVxuICAgICAgfVxuICAgIH1cblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVSZXNpemUpXG4gICAgXG4gICAgLy8gVXNlIGEgdGltZW91dCB0byBlbnN1cmUgdGhlIERPTSBpcyBmdWxseSByZW5kZXJlZFxuICAgIGNvbnN0IHRpbWVvdXQgPSBzZXRUaW1lb3V0KGhhbmRsZVJlc2l6ZSwgMTAwKVxuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVSZXNpemUpXG4gICAgICBjbGVhclRpbWVvdXQodGltZW91dClcbiAgICB9XG4gIH0sIFtpc0NsaWVudF0pXG5cbiAgLy8gSGFuZGxlIHpvb20gd2l0aCBtb3VzZSB3aGVlbFxuICBjb25zdCBoYW5kbGVXaGVlbCA9IHVzZUNhbGxiYWNrKChlOiBLb252YS5Lb252YUV2ZW50T2JqZWN0PFdoZWVsRXZlbnQ+KSA9PiB7XG4gICAgZS5ldnQucHJldmVudERlZmF1bHQoKVxuICAgIFxuICAgIGNvbnN0IHN0YWdlID0gZS50YXJnZXQuZ2V0U3RhZ2UoKVxuICAgIGlmICghc3RhZ2UpIHJldHVyblxuXG4gICAgY29uc3Qgb2xkU2NhbGUgPSBzdGFnZS5zY2FsZVgoKVxuICAgIGNvbnN0IHBvaW50ZXIgPSBzdGFnZS5nZXRQb2ludGVyUG9zaXRpb24oKVxuICAgIGlmICghcG9pbnRlcikgcmV0dXJuXG5cbiAgICAvLyBab29tIHNlbnNpdGl2aXR5XG4gICAgY29uc3Qgc2NhbGVCeSA9IDEuMVxuICAgIGNvbnN0IG5ld1NjYWxlID0gZS5ldnQuZGVsdGFZID4gMCA/IG9sZFNjYWxlIC8gc2NhbGVCeSA6IG9sZFNjYWxlICogc2NhbGVCeVxuXG4gICAgLy8gTGltaXQgem9vbSByYW5nZSAtIGFsbG93IHpvb21pbmcgb3V0IHRvIDQlIHRvIG1hdGNoIE1heCBPdXQgYnV0dG9uXG4gICAgY29uc3QgbWluU2NhbGUgPSAwLjA0IC8vIDQlIG1pbmltdW0gem9vbVxuICAgIGNvbnN0IG1heFNjYWxlID0gNVxuICAgIGNvbnN0IGNsYW1wZWRTY2FsZSA9IE1hdGgubWF4KG1pblNjYWxlLCBNYXRoLm1pbihtYXhTY2FsZSwgbmV3U2NhbGUpKVxuXG4gICAgLy8gQ2FsY3VsYXRlIG5ldyBwb3NpdGlvbiB0byB6b29tIHRvd2FyZHMgbW91c2UgcG9pbnRlclxuICAgIGNvbnN0IG1vdXNlUG9pbnRUbyA9IHtcbiAgICAgIHg6IChwb2ludGVyLnggLSBzdGFnZS54KCkpIC8gb2xkU2NhbGUsXG4gICAgICB5OiAocG9pbnRlci55IC0gc3RhZ2UueSgpKSAvIG9sZFNjYWxlLFxuICAgIH1cblxuICAgIGNvbnN0IG5ld1BvcyA9IHtcbiAgICAgIHg6IHBvaW50ZXIueCAtIG1vdXNlUG9pbnRUby54ICogY2xhbXBlZFNjYWxlLFxuICAgICAgeTogcG9pbnRlci55IC0gbW91c2VQb2ludFRvLnkgKiBjbGFtcGVkU2NhbGUsXG4gICAgfVxuXG4gICAgc3RhZ2Uuc2NhbGUoeyB4OiBjbGFtcGVkU2NhbGUsIHk6IGNsYW1wZWRTY2FsZSB9KVxuICAgIHN0YWdlLnBvc2l0aW9uKG5ld1BvcylcbiAgICBzdGFnZS5iYXRjaERyYXcoKVxuXG4gICAgc2V0Q2FudmFzU3RhdGUoe1xuICAgICAgc2NhbGU6IGNsYW1wZWRTY2FsZSxcbiAgICAgIHg6IG5ld1Bvcy54LFxuICAgICAgeTogbmV3UG9zLnlcbiAgICB9KVxuICB9LCBbXSlcblxuICAvLyBIYW5kbGUgcGFubmluZyB3aXRoIG1vdXNlIGRyYWdcbiAgY29uc3QgaGFuZGxlRHJhZ0VuZCA9IHVzZUNhbGxiYWNrKChlOiBLb252YS5Lb252YUV2ZW50T2JqZWN0PERyYWdFdmVudD4pID0+IHtcbiAgICBjb25zdCBzdGFnZSA9IGUudGFyZ2V0IGFzIEtvbnZhLlN0YWdlXG4gICAgc2V0Q2FudmFzU3RhdGUocHJldiA9PiAoe1xuICAgICAgLi4ucHJldixcbiAgICAgIHg6IHN0YWdlLngoKSxcbiAgICAgIHk6IHN0YWdlLnkoKVxuICAgIH0pKVxuICB9LCBbXSlcblxuICAvLyBSZXNldCBjYW52YXMgdG8gY2VudGVyIGFuZCBkZWZhdWx0IHpvb20gZm9yIDI1MGsgc3EgZnQgY2FudmFzXG4gIGNvbnN0IHJlc2V0Q2FudmFzID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGNvbnN0IGRlZmF1bHRTY2FsZSA9IDAuMiAvLyAyMCUgem9vbSBmb3IgbGFyZ2UgY2FudmFzIG92ZXJ2aWV3XG4gICAgY29uc3QgY2VudGVyWCA9IChzdGFnZVNpemUud2lkdGggLyAyKSAtIChDQU5WQVNfU0laRV9QSVhFTFMgLyAyICogZGVmYXVsdFNjYWxlKVxuICAgIGNvbnN0IGNlbnRlclkgPSAoc3RhZ2VTaXplLmhlaWdodCAvIDIpIC0gKENBTlZBU19TSVpFX1BJWEVMUyAvIDIgKiBkZWZhdWx0U2NhbGUpXG4gICAgXG4gICAgaWYgKHN0YWdlUmVmLmN1cnJlbnQpIHtcbiAgICAgIHN0YWdlUmVmLmN1cnJlbnQuc2NhbGUoeyB4OiBkZWZhdWx0U2NhbGUsIHk6IGRlZmF1bHRTY2FsZSB9KVxuICAgICAgc3RhZ2VSZWYuY3VycmVudC5wb3NpdGlvbih7IHg6IGNlbnRlclgsIHk6IGNlbnRlclkgfSlcbiAgICAgIHN0YWdlUmVmLmN1cnJlbnQuYmF0Y2hEcmF3KClcbiAgICB9XG4gICAgXG4gICAgc2V0Q2FudmFzU3RhdGUoe1xuICAgICAgc2NhbGU6IGRlZmF1bHRTY2FsZSxcbiAgICAgIHg6IGNlbnRlclgsXG4gICAgICB5OiBjZW50ZXJZXG4gICAgfSlcbiAgfSwgW3N0YWdlU2l6ZSwgQ0FOVkFTX1NJWkVfUElYRUxTXSlcblxuICAvLyBGaXQgY2FudmFzIHRvIHNob3cgYWxsIGVxdWlwbWVudCB3aXRoIHByb3BlciBjZW50ZXJpbmcgYW5kIHpvb21cbiAgY29uc3QgZml0VG9Db250ZW50ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCc9PT0gRklUIFRPIENPTlRFTlQgQ0FMTEVEID09PScpXG4gICAgY29uc29sZS5sb2coJ3BsYWNlZEVxdWlwbWVudDonLCBwbGFjZWRFcXVpcG1lbnQpXG4gICAgXG4gICAgaWYgKCFwbGFjZWRFcXVpcG1lbnQgfHwgcGxhY2VkRXF1aXBtZW50Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgY29uc29sZS5sb2coJ05vIGVxdWlwbWVudCB0byBmaXQgdG8sIHJlc2V0dGluZyBjYW52YXMnKVxuICAgICAgcmVzZXRDYW52YXMoKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgLy8gQ2FsY3VsYXRlIGJvdW5kaW5nIGJveCBvZiBhbGwgZXF1aXBtZW50IGluY2x1ZGluZyB0aGVpciBjbGVhcmFuY2Ugem9uZXNcbiAgICBsZXQgbWluWCA9IEluZmluaXR5LCBtYXhYID0gLUluZmluaXR5XG4gICAgbGV0IG1pblkgPSBJbmZpbml0eSwgbWF4WSA9IC1JbmZpbml0eVxuXG4gICAgcGxhY2VkRXF1aXBtZW50LmZvckVhY2goZXF1aXBtZW50ID0+IHtcbiAgICAgIGNvbnN0IGVxdWlwbWVudERlZiA9IGVxdWlwbWVudERlZmluaXRpb25zPy5maW5kKGRlZiA9PiBkZWYuaWQgPT09IGVxdWlwbWVudC5lcXVpcG1lbnRJZClcbiAgICAgIGlmICghZXF1aXBtZW50RGVmKSByZXR1cm5cblxuICAgICAgY29uc3QgZGltZW5zaW9ucyA9IGVxdWlwbWVudC5kaW1lbnNpb25zXG4gICAgICBjb25zdCBpc0NpcmN1bGFyID0gZGltZW5zaW9ucy5zaGFwZSA9PT0gJ2NpcmNsZSdcbiAgICAgIFxuICAgICAgLy8gQ2FsY3VsYXRlIGVxdWlwbWVudCBib3VuZHMgaW5jbHVkaW5nIGNsZWFyYW5jZVxuICAgICAgY29uc3QgY2xlYXJhbmNlID0gZXF1aXBtZW50RGVmLnJpZGVDbGVhcmluZyB8fCAwXG4gICAgICBjb25zdCBjbGVhcmFuY2VQaXhlbHMgPSBjbGVhcmFuY2UgKiBQSVhFTFNfUEVSX0ZPT1RcbiAgICAgIFxuICAgICAgbGV0IGVxdWlwbWVudE1pblgsIGVxdWlwbWVudE1heFgsIGVxdWlwbWVudE1pblksIGVxdWlwbWVudE1heFlcbiAgICAgIFxuICAgICAgaWYgKGlzQ2lyY3VsYXIpIHtcbiAgICAgICAgY29uc3QgcmFkaXVzID0gKGRpbWVuc2lvbnMgYXMgYW55KS5yYWRpdXMgKiBQSVhFTFNfUEVSX0ZPT1RcbiAgICAgICAgZXF1aXBtZW50TWluWCA9IGVxdWlwbWVudC54IC0gcmFkaXVzIC0gY2xlYXJhbmNlUGl4ZWxzXG4gICAgICAgIGVxdWlwbWVudE1heFggPSBlcXVpcG1lbnQueCArIHJhZGl1cyArIGNsZWFyYW5jZVBpeGVsc1xuICAgICAgICBlcXVpcG1lbnRNaW5ZID0gZXF1aXBtZW50LnkgLSByYWRpdXMgLSBjbGVhcmFuY2VQaXhlbHNcbiAgICAgICAgZXF1aXBtZW50TWF4WSA9IGVxdWlwbWVudC55ICsgcmFkaXVzICsgY2xlYXJhbmNlUGl4ZWxzXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCB3aWR0aCA9IChkaW1lbnNpb25zIGFzIGFueSkud2lkdGggKiBQSVhFTFNfUEVSX0ZPT1RcbiAgICAgICAgY29uc3QgaGVpZ2h0ID0gKGRpbWVuc2lvbnMgYXMgYW55KS5oZWlnaHQgKiBQSVhFTFNfUEVSX0ZPT1RcbiAgICAgICAgZXF1aXBtZW50TWluWCA9IGVxdWlwbWVudC54IC0gd2lkdGgvMiAtIGNsZWFyYW5jZVBpeGVsc1xuICAgICAgICBlcXVpcG1lbnRNYXhYID0gZXF1aXBtZW50LnggKyB3aWR0aC8yICsgY2xlYXJhbmNlUGl4ZWxzXG4gICAgICAgIGVxdWlwbWVudE1pblkgPSBlcXVpcG1lbnQueSAtIGhlaWdodC8yIC0gY2xlYXJhbmNlUGl4ZWxzXG4gICAgICAgIGVxdWlwbWVudE1heFkgPSBlcXVpcG1lbnQueSArIGhlaWdodC8yICsgY2xlYXJhbmNlUGl4ZWxzXG4gICAgICB9XG4gICAgICBcbiAgICAgIG1pblggPSBNYXRoLm1pbihtaW5YLCBlcXVpcG1lbnRNaW5YKVxuICAgICAgbWF4WCA9IE1hdGgubWF4KG1heFgsIGVxdWlwbWVudE1heFgpXG4gICAgICBtaW5ZID0gTWF0aC5taW4obWluWSwgZXF1aXBtZW50TWluWSlcbiAgICAgIG1heFkgPSBNYXRoLm1heChtYXhZLCBlcXVpcG1lbnRNYXhZKVxuICAgIH0pXG5cbiAgICAvLyBBZGQgcGFkZGluZyBhcm91bmQgdGhlIGJvdW5kaW5nIGJveFxuICAgIGNvbnN0IHBhZGRpbmcgPSAxMDAgLy8gMTAwIHBpeGVscyBwYWRkaW5nXG4gICAgbWluWCAtPSBwYWRkaW5nXG4gICAgbWF4WCArPSBwYWRkaW5nXG4gICAgbWluWSAtPSBwYWRkaW5nXG4gICAgbWF4WSArPSBwYWRkaW5nXG5cbiAgICAvLyBDYWxjdWxhdGUgdGhlIGNlbnRlciBvZiBhbGwgZXF1aXBtZW50XG4gICAgY29uc3QgY2VudGVyWCA9IChtaW5YICsgbWF4WCkgLyAyXG4gICAgY29uc3QgY2VudGVyWSA9IChtaW5ZICsgbWF4WSkgLyAyXG5cbiAgICAvLyBDYWxjdWxhdGUgcmVxdWlyZWQgc2NhbGUgdG8gZml0IGFsbCBlcXVpcG1lbnQgaW4gdmlld3BvcnRcbiAgICBjb25zdCBjb250ZW50V2lkdGggPSBtYXhYIC0gbWluWFxuICAgIGNvbnN0IGNvbnRlbnRIZWlnaHQgPSBtYXhZIC0gbWluWVxuICAgIGNvbnN0IHNjYWxlWCA9IHN0YWdlU2l6ZS53aWR0aCAvIGNvbnRlbnRXaWR0aFxuICAgIGNvbnN0IHNjYWxlWSA9IHN0YWdlU2l6ZS5oZWlnaHQgLyBjb250ZW50SGVpZ2h0XG4gICAgY29uc3Qgb3B0aW1hbFNjYWxlID0gTWF0aC5taW4oc2NhbGVYLCBzY2FsZVksIDIpIC8vIENhcCBhdCAyeCB6b29tXG5cbiAgICAvLyBDYWxjdWxhdGUgdGhlIHBvc2l0aW9uIHRvIGNlbnRlciB0aGUgY29udGVudFxuICAgIGNvbnN0IG5ld1ggPSAoc3RhZ2VTaXplLndpZHRoIC8gMikgLSAoY2VudGVyWCAqIG9wdGltYWxTY2FsZSlcbiAgICBjb25zdCBuZXdZID0gKHN0YWdlU2l6ZS5oZWlnaHQgLyAyKSAtIChjZW50ZXJZICogb3B0aW1hbFNjYWxlKVxuXG4gICAgLy8gQXBwbHkgdGhlIG5ldyB2aWV3IHNldHRpbmdzIHRvIGJvdGggc3RhZ2UgYW5kIHN0YXRlXG4gICAgY29uc29sZS5sb2coJ0FwcGx5aW5nIG5ldyBjYW52YXMgc3RhdGU6Jywge1xuICAgICAgc2NhbGU6IG9wdGltYWxTY2FsZSxcbiAgICAgIHg6IG5ld1gsXG4gICAgICB5OiBuZXdZLFxuICAgICAgY29udGVudEJvdW5kczogeyBtaW5YLCBtYXhYLCBtaW5ZLCBtYXhZIH0sXG4gICAgICBjZW50ZXI6IHsgY2VudGVyWCwgY2VudGVyWSB9XG4gICAgfSlcbiAgICBcbiAgICBpZiAoc3RhZ2VSZWYuY3VycmVudCkge1xuICAgICAgc3RhZ2VSZWYuY3VycmVudC5zY2FsZSh7IHg6IG9wdGltYWxTY2FsZSwgeTogb3B0aW1hbFNjYWxlIH0pXG4gICAgICBzdGFnZVJlZi5jdXJyZW50LnBvc2l0aW9uKHsgeDogbmV3WCwgeTogbmV3WSB9KVxuICAgICAgc3RhZ2VSZWYuY3VycmVudC5iYXRjaERyYXcoKVxuICAgIH1cbiAgICBcbiAgICBzZXRDYW52YXNTdGF0ZSh7XG4gICAgICBzY2FsZTogb3B0aW1hbFNjYWxlLFxuICAgICAgeDogbmV3WCxcbiAgICAgIHk6IG5ld1lcbiAgICB9KVxuICB9LCBbcGxhY2VkRXF1aXBtZW50LCBlcXVpcG1lbnREZWZpbml0aW9ucywgc3RhZ2VTaXplLCByZXNldENhbnZhc10pXG5cbiAgLy8gWm9vbSBpbiBmdW5jdGlvblxuICBjb25zdCB6b29tSW4gPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKCFzdGFnZVJlZi5jdXJyZW50KSByZXR1cm5cbiAgICBcbiAgICBjb25zdCBzdGFnZSA9IHN0YWdlUmVmLmN1cnJlbnRcbiAgICBjb25zdCBvbGRTY2FsZSA9IHN0YWdlLnNjYWxlWCgpXG4gICAgY29uc3Qgc2NhbGVCeSA9IDEuMVxuICAgIGNvbnN0IG5ld1NjYWxlID0gTWF0aC5taW4oNSwgb2xkU2NhbGUgKiBzY2FsZUJ5KSAvLyBNYXggem9vbSA1eFxuICAgIFxuICAgIC8vIFpvb20gdG93YXJkcyBjZW50ZXIgb2YgdmlzaWJsZSBhcmVhXG4gICAgY29uc3QgY2VudGVyID0ge1xuICAgICAgeDogc3RhZ2VTaXplLndpZHRoIC8gMixcbiAgICAgIHk6IHN0YWdlU2l6ZS5oZWlnaHQgLyAyXG4gICAgfVxuICAgIFxuICAgIGNvbnN0IG1vdXNlUG9pbnRUbyA9IHtcbiAgICAgIHg6IChjZW50ZXIueCAtIHN0YWdlLngoKSkgLyBvbGRTY2FsZSxcbiAgICAgIHk6IChjZW50ZXIueSAtIHN0YWdlLnkoKSkgLyBvbGRTY2FsZSxcbiAgICB9XG4gICAgXG4gICAgY29uc3QgbmV3UG9zID0ge1xuICAgICAgeDogY2VudGVyLnggLSBtb3VzZVBvaW50VG8ueCAqIG5ld1NjYWxlLFxuICAgICAgeTogY2VudGVyLnkgLSBtb3VzZVBvaW50VG8ueSAqIG5ld1NjYWxlLFxuICAgIH1cbiAgICBcbiAgICBzdGFnZS5zY2FsZSh7IHg6IG5ld1NjYWxlLCB5OiBuZXdTY2FsZSB9KVxuICAgIHN0YWdlLnBvc2l0aW9uKG5ld1BvcylcbiAgICBzdGFnZS5iYXRjaERyYXcoKVxuICAgIFxuICAgIHNldENhbnZhc1N0YXRlKHtcbiAgICAgIHNjYWxlOiBuZXdTY2FsZSxcbiAgICAgIHg6IG5ld1Bvcy54LFxuICAgICAgeTogbmV3UG9zLnlcbiAgICB9KVxuICB9LCBbc3RhZ2VTaXplXSlcblxuICAvLyBab29tIG91dCBmdW5jdGlvblxuICBjb25zdCB6b29tT3V0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmICghc3RhZ2VSZWYuY3VycmVudCkgcmV0dXJuXG4gICAgXG4gICAgY29uc3Qgc3RhZ2UgPSBzdGFnZVJlZi5jdXJyZW50XG4gICAgY29uc3Qgb2xkU2NhbGUgPSBzdGFnZS5zY2FsZVgoKVxuICAgIGNvbnN0IHNjYWxlQnkgPSAxLjFcbiAgICBjb25zdCBuZXdTY2FsZSA9IE1hdGgubWF4KDAuMDQsIG9sZFNjYWxlIC8gc2NhbGVCeSkgLy8gTWluIHpvb20gMC4wNHggKDQlKVxuICAgIFxuICAgIC8vIFpvb20gdG93YXJkcyBjZW50ZXIgb2YgdmlzaWJsZSBhcmVhXG4gICAgY29uc3QgY2VudGVyID0ge1xuICAgICAgeDogc3RhZ2VTaXplLndpZHRoIC8gMixcbiAgICAgIHk6IHN0YWdlU2l6ZS5oZWlnaHQgLyAyXG4gICAgfVxuICAgIFxuICAgIGNvbnN0IG1vdXNlUG9pbnRUbyA9IHtcbiAgICAgIHg6IChjZW50ZXIueCAtIHN0YWdlLngoKSkgLyBvbGRTY2FsZSxcbiAgICAgIHk6IChjZW50ZXIueSAtIHN0YWdlLnkoKSkgLyBvbGRTY2FsZSxcbiAgICB9XG4gICAgXG4gICAgY29uc3QgbmV3UG9zID0ge1xuICAgICAgeDogY2VudGVyLnggLSBtb3VzZVBvaW50VG8ueCAqIG5ld1NjYWxlLFxuICAgICAgeTogY2VudGVyLnkgLSBtb3VzZVBvaW50VG8ueSAqIG5ld1NjYWxlLFxuICAgIH1cbiAgICBcbiAgICBzdGFnZS5zY2FsZSh7IHg6IG5ld1NjYWxlLCB5OiBuZXdTY2FsZSB9KVxuICAgIHN0YWdlLnBvc2l0aW9uKG5ld1BvcylcbiAgICBzdGFnZS5iYXRjaERyYXcoKVxuICAgIFxuICAgIHNldENhbnZhc1N0YXRlKHtcbiAgICAgIHNjYWxlOiBuZXdTY2FsZSxcbiAgICAgIHg6IG5ld1Bvcy54LFxuICAgICAgeTogbmV3UG9zLnlcbiAgICB9KVxuICB9LCBbc3RhZ2VTaXplXSlcblxuICAvLyBDYWxjdWxhdGUgdmlzaWJsZSBib3VuZHMgZm9yIHBlcmZvcm1hbmNlIG9wdGltaXphdGlvblxuICBjb25zdCBnZXRWaXNpYmxlQm91bmRzID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGNvbnN0IGJ1ZmZlciA9IDEwMDAgLy8gcGl4ZWxzIGJ1ZmZlciBmb3Igc21vb3RoIHNjcm9sbGluZ1xuICAgIHJldHVybiB7XG4gICAgICBtaW5YOiAoLWNhbnZhc1N0YXRlLnggLyBjYW52YXNTdGF0ZS5zY2FsZSkgLSBidWZmZXIsXG4gICAgICBtYXhYOiAoKC1jYW52YXNTdGF0ZS54ICsgc3RhZ2VTaXplLndpZHRoKSAvIGNhbnZhc1N0YXRlLnNjYWxlKSArIGJ1ZmZlcixcbiAgICAgIG1pblk6ICgtY2FudmFzU3RhdGUueSAvIGNhbnZhc1N0YXRlLnNjYWxlKSAtIGJ1ZmZlcixcbiAgICAgIG1heFk6ICgoLWNhbnZhc1N0YXRlLnkgKyBzdGFnZVNpemUuaGVpZ2h0KSAvIGNhbnZhc1N0YXRlLnNjYWxlKSArIGJ1ZmZlclxuICAgIH1cbiAgfSwgW2NhbnZhc1N0YXRlLngsIGNhbnZhc1N0YXRlLnksIGNhbnZhc1N0YXRlLnNjYWxlLCBzdGFnZVNpemVdKVxuXG4gIC8vIEhhbmRsZSBtZWFzdXJlbWVudCB0b29sIGNsaWNrc1xuICBjb25zdCBoYW5kbGVNZWFzdXJlbWVudFRvb2xDbGljayA9IHVzZUNhbGxiYWNrKCh4OiBudW1iZXIsIHk6IG51bWJlcikgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdoYW5kbGVNZWFzdXJlbWVudFRvb2xDbGljayBjYWxsZWQ6JywgeyB4LCB5LCBhY3RpdmVNZWFzdXJlbWVudFRvb2wgfSlcbiAgICBpZiAoIWFjdGl2ZU1lYXN1cmVtZW50VG9vbCkgcmV0dXJuXG4gICAgXG4gICAgLy8gRm9yd2FyZCBjbGljayB0byBTaW1wbGVNZWFzdXJlbWVudFRvb2wgdmlhIGdsb2JhbCBoYW5kbGVyc1xuICAgIGNvbnN0IGhhbmRsZXJzID0gKHdpbmRvdyBhcyBhbnkpLm1lYXN1cmVtZW50VG9vbEhhbmRsZXJzXG4gICAgY29uc29sZS5sb2coJ0dsb2JhbCBoYW5kbGVyczonLCBoYW5kbGVycylcbiAgICBpZiAoaGFuZGxlcnMgJiYgaGFuZGxlcnMuaGFuZGxlQ2xpY2spIHtcbiAgICAgIGNvbnNvbGUubG9nKCdDYWxsaW5nIGhhbmRsZXJzLmhhbmRsZUNsaWNrJylcbiAgICAgIGhhbmRsZXJzLmhhbmRsZUNsaWNrKHgsIHkpXG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUubG9nKCdObyBnbG9iYWwgaGFuZGxlcnMgZm91bmQnKVxuICAgIH1cbiAgfSwgW2FjdGl2ZU1lYXN1cmVtZW50VG9vbF0pXG5cbiAgLy8gSGFuZGxlIGRvdWJsZS1jbGljayB0byBjb21wbGV0ZSBhcmVhL3BlcmltZXRlciBtZWFzdXJlbWVudHNcbiAgY29uc3QgaGFuZGxlTWVhc3VyZW1lbnRUb29sRG91YmxlQ2xpY2sgPSB1c2VDYWxsYmFjaygoeDogbnVtYmVyLCB5OiBudW1iZXIpID0+IHtcbiAgICBpZiAoIWFjdGl2ZU1lYXN1cmVtZW50VG9vbCkgcmV0dXJuXG4gICAgXG4gICAgY29uc29sZS5sb2coJ0RvdWJsZS1jbGljayBmb3IgbWVhc3VyZW1lbnQgdG9vbDonLCB7IHgsIHksIGFjdGl2ZU1lYXN1cmVtZW50VG9vbCB9KVxuICAgIFxuICAgIC8vIEZpbmQgaW5jb21wbGV0ZSBtZWFzdXJlbWVudFxuICAgIGNvbnN0IGN1cnJlbnRNZWFzdXJlbWVudCA9IHNpbXBsZU1lYXN1cmVtZW50cy5maW5kKG0gPT4gIW0uY29tcGxldGVkKVxuICAgIGlmICghY3VycmVudE1lYXN1cmVtZW50IHx8IGN1cnJlbnRNZWFzdXJlbWVudC5wb2ludHMubGVuZ3RoIDwgMikgcmV0dXJuXG4gICAgXG4gICAgbGV0IHZhbHVlID0gMFxuICAgIGxldCBsYWJlbCA9ICcnXG4gICAgXG4gICAgaWYgKGFjdGl2ZU1lYXN1cmVtZW50VG9vbCA9PT0gJ2FyZWEnKSB7XG4gICAgICAvLyBDYWxjdWxhdGUgYXJlYSB1c2luZyBzaG9lbGFjZSBmb3JtdWxhXG4gICAgICBpZiAoY3VycmVudE1lYXN1cmVtZW50LnBvaW50cy5sZW5ndGggPCAzKSByZXR1cm5cbiAgICAgIFxuICAgICAgbGV0IGFyZWEgPSAwXG4gICAgICBjb25zdCBwb2ludHMgPSBjdXJyZW50TWVhc3VyZW1lbnQucG9pbnRzXG4gICAgICBjb25zdCBuID0gcG9pbnRzLmxlbmd0aFxuICAgICAgXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG47IGkrKykge1xuICAgICAgICBjb25zdCBqID0gKGkgKyAxKSAlIG5cbiAgICAgICAgYXJlYSArPSBwb2ludHNbaV0ueCAqIHBvaW50c1tqXS55XG4gICAgICAgIGFyZWEgLT0gcG9pbnRzW2pdLnggKiBwb2ludHNbaV0ueVxuICAgICAgfVxuICAgICAgXG4gICAgICBhcmVhID0gTWF0aC5hYnMoYXJlYSkgLyAyXG4gICAgICB2YWx1ZSA9IGFyZWEgLyAoUElYRUxTX1BFUl9GT09UICogUElYRUxTX1BFUl9GT09UKSAvLyBDb252ZXJ0IHRvIHNxdWFyZSBmZWV0XG4gICAgICBsYWJlbCA9IGBBcmVhOiAke3ZhbHVlLnRvRml4ZWQoMCl9IHNxIGZ0YFxuICAgICAgXG4gICAgfSBlbHNlIGlmIChhY3RpdmVNZWFzdXJlbWVudFRvb2wgPT09ICdwZXJpbWV0ZXInKSB7XG4gICAgICAvLyBDYWxjdWxhdGUgcGVyaW1ldGVyXG4gICAgICBsZXQgcGVyaW1ldGVyID0gMFxuICAgICAgY29uc3QgcG9pbnRzID0gY3VycmVudE1lYXN1cmVtZW50LnBvaW50c1xuICAgICAgXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBvaW50cy5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgICAgY29uc3QgZHggPSBwb2ludHNbaSArIDFdLnggLSBwb2ludHNbaV0ueFxuICAgICAgICBjb25zdCBkeSA9IHBvaW50c1tpICsgMV0ueSAtIHBvaW50c1tpXS55XG4gICAgICAgIHBlcmltZXRlciArPSBNYXRoLnNxcnQoZHggKiBkeCArIGR5ICogZHkpXG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIENsb3NlIHRoZSBwZXJpbWV0ZXIgKGNvbm5lY3QgbGFzdCBwb2ludCB0byBmaXJzdClcbiAgICAgIGlmIChwb2ludHMubGVuZ3RoID4gMikge1xuICAgICAgICBjb25zdCBkeCA9IHBvaW50c1swXS54IC0gcG9pbnRzW3BvaW50cy5sZW5ndGggLSAxXS54XG4gICAgICAgIGNvbnN0IGR5ID0gcG9pbnRzWzBdLnkgLSBwb2ludHNbcG9pbnRzLmxlbmd0aCAtIDFdLnlcbiAgICAgICAgcGVyaW1ldGVyICs9IE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSlcbiAgICAgIH1cbiAgICAgIFxuICAgICAgdmFsdWUgPSBwZXJpbWV0ZXIgLyBQSVhFTFNfUEVSX0ZPT1QgLy8gQ29udmVydCB0byBmZWV0XG4gICAgICBsYWJlbCA9IGBQZXJpbWV0ZXI6ICR7dmFsdWUudG9GaXhlZCgwKX0gZnRgXG4gICAgfVxuICAgIFxuICAgIC8vIENvbXBsZXRlIHRoZSBtZWFzdXJlbWVudFxuICAgIGNvbnN0IGNvbXBsZXRlZE1lYXN1cmVtZW50OiBTaW1wbGVNZWFzdXJlbWVudCA9IHtcbiAgICAgIC4uLmN1cnJlbnRNZWFzdXJlbWVudCxcbiAgICAgIHZhbHVlLFxuICAgICAgbGFiZWwsXG4gICAgICBjb21wbGV0ZWQ6IHRydWVcbiAgICB9XG4gICAgXG4gICAgc2V0U2ltcGxlTWVhc3VyZW1lbnRzKHByZXYgPT4gXG4gICAgICBwcmV2Lm1hcChtID0+IG0uaWQgPT09IGN1cnJlbnRNZWFzdXJlbWVudC5pZCA/IGNvbXBsZXRlZE1lYXN1cmVtZW50IDogbSlcbiAgICApXG4gICAgXG4gICAgY29uc29sZS5sb2coJ01lYXN1cmVtZW50IGNvbXBsZXRlZDonLCBjb21wbGV0ZWRNZWFzdXJlbWVudClcbiAgfSwgW2FjdGl2ZU1lYXN1cmVtZW50VG9vbCwgc2ltcGxlTWVhc3VyZW1lbnRzLCBQSVhFTFNfUEVSX0ZPT1RdKVxuXG4gIC8vIEVuaGFuY2VkIG1lYXN1cmVtZW50IGhhbmRsZXJzXG4gIGNvbnN0IGhhbmRsZUVuaGFuY2VkTWVhc3VyZW1lbnRQb2ludFNldCA9IHVzZUNhbGxiYWNrKChwb2ludDogeyB4OiBudW1iZXI7IHk6IG51bWJlciB9KSA9PiB7XG4gICAgaWYgKCFjdXJyZW50TWVhc3VyZW1lbnQpIHJldHVyblxuXG4gICAgaWYgKCFjdXJyZW50TWVhc3VyZW1lbnQuZmlyc3RQb2ludCkge1xuICAgICAgLy8gU2V0IGZpcnN0IHBvaW50XG4gICAgICBzZXRDdXJyZW50TWVhc3VyZW1lbnQocHJldiA9PiBwcmV2ID8ge1xuICAgICAgICAuLi5wcmV2LFxuICAgICAgICBmaXJzdFBvaW50OiBwb2ludFxuICAgICAgfSA6IG51bGwpXG4gICAgfSBlbHNlIGlmICghY3VycmVudE1lYXN1cmVtZW50LnNlY29uZFBvaW50KSB7XG4gICAgICAvLyBTZXQgc2Vjb25kIHBvaW50IGFuZCBjb21wbGV0ZSBtZWFzdXJlbWVudFxuICAgICAgY29uc3QgdXBkYXRlZE1lYXN1cmVtZW50ID0ge1xuICAgICAgICAuLi5jdXJyZW50TWVhc3VyZW1lbnQsXG4gICAgICAgIHNlY29uZFBvaW50OiBwb2ludCxcbiAgICAgICAgaXNDb21wbGV0ZTogdHJ1ZVxuICAgICAgfVxuICAgICAgc2V0Q3VycmVudE1lYXN1cmVtZW50KHVwZGF0ZWRNZWFzdXJlbWVudClcbiAgICAgIFxuICAgICAgLy8gQ2FsY3VsYXRlIGRpc3RhbmNlIGFuZCBzaG93IGNhbGlicmF0aW9uIGRpYWxvZ1xuICAgICAgY29uc3QgZHggPSBwb2ludC54IC0gY3VycmVudE1lYXN1cmVtZW50LmZpcnN0UG9pbnQueFxuICAgICAgY29uc3QgZHkgPSBwb2ludC55IC0gY3VycmVudE1lYXN1cmVtZW50LmZpcnN0UG9pbnQueVxuICAgICAgY29uc3QgcGl4ZWxEaXN0YW5jZSA9IE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSlcbiAgICAgIGNvbnN0IGNhbGN1bGF0ZWREaXN0YW5jZSA9IHBpeGVsRGlzdGFuY2UgLyBQSVhFTFNfUEVSX0ZPT1RcbiAgICAgIFxuICAgICAgLy8gU2hvdyBjYWxpYnJhdGlvbiBkaWFsb2cgYWZ0ZXIgYSBzaG9ydCBkZWxheVxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHNldFNob3dDYWxpYnJhdGVEaWFsb2codHJ1ZSlcbiAgICAgIH0sIDUwMClcbiAgICB9XG4gIH0sIFtjdXJyZW50TWVhc3VyZW1lbnQsIFBJWEVMU19QRVJfRk9PVF0pXG5cbiAgY29uc3QgaGFuZGxlRW5oYW5jZWRNZWFzdXJlbWVudEVkaXQgPSB1c2VDYWxsYmFjaygoZmlyc3RQb2ludDogeyB4OiBudW1iZXI7IHk6IG51bWJlciB9LCBzZWNvbmRQb2ludDogeyB4OiBudW1iZXI7IHk6IG51bWJlciB9KSA9PiB7XG4gICAgaWYgKCFjdXJyZW50TWVhc3VyZW1lbnQpIHJldHVyblxuXG4gICAgc2V0Q3VycmVudE1lYXN1cmVtZW50KHByZXYgPT4gcHJldiA/IHtcbiAgICAgIC4uLnByZXYsXG4gICAgICBmaXJzdFBvaW50LFxuICAgICAgc2Vjb25kUG9pbnRcbiAgICB9IDogbnVsbClcbiAgfSwgW2N1cnJlbnRNZWFzdXJlbWVudF0pXG5cbiAgY29uc3QgaGFuZGxlQ2FsaWJyYXRlU3VibWl0ID0gdXNlQ2FsbGJhY2soKGFjdHVhbERpc3RhbmNlOiBudW1iZXIpID0+IHtcbiAgICBpZiAoIWN1cnJlbnRNZWFzdXJlbWVudCB8fCAhY3VycmVudE1lYXN1cmVtZW50LmZpcnN0UG9pbnQgfHwgIWN1cnJlbnRNZWFzdXJlbWVudC5zZWNvbmRQb2ludCkgcmV0dXJuXG5cbiAgICAvLyBDYWxjdWxhdGUgdGhlIHNjYWxlIGZhY3RvclxuICAgIGNvbnN0IGR4ID0gY3VycmVudE1lYXN1cmVtZW50LnNlY29uZFBvaW50LnggLSBjdXJyZW50TWVhc3VyZW1lbnQuZmlyc3RQb2ludC54XG4gICAgY29uc3QgZHkgPSBjdXJyZW50TWVhc3VyZW1lbnQuc2Vjb25kUG9pbnQueSAtIGN1cnJlbnRNZWFzdXJlbWVudC5maXJzdFBvaW50LnlcbiAgICBjb25zdCBwaXhlbERpc3RhbmNlID0gTWF0aC5zcXJ0KGR4ICogZHggKyBkeSAqIGR5KVxuICAgIGNvbnN0IHNjYWxlRmFjdG9yID0gYWN0dWFsRGlzdGFuY2UgLyAocGl4ZWxEaXN0YW5jZSAvIFBJWEVMU19QRVJfRk9PVClcblxuICAgIC8vIFVwZGF0ZSB0aGUgbWVhc3VyZW1lbnQgd2l0aCByZWFsLXdvcmxkIGRpc3RhbmNlXG4gICAgc2V0Q3VycmVudE1lYXN1cmVtZW50KHByZXYgPT4gcHJldiA/IHtcbiAgICAgIC4uLnByZXYsXG4gICAgICByZWFsV29ybGREaXN0YW5jZTogYWN0dWFsRGlzdGFuY2VcbiAgICB9IDogbnVsbClcblxuICAgIC8vIEFwcGx5IHNjYWxlIGNhbGlicmF0aW9uIHRvIGJhY2tncm91bmQgaW1hZ2VzIGlmIGFueVxuICAgIGlmIChiYWNrZ3JvdW5kSW1hZ2VzICYmIGJhY2tncm91bmRJbWFnZXMubGVuZ3RoID4gMCAmJiBvbkJhY2tncm91bmRJbWFnZVVwZGF0ZSkge1xuICAgICAgYmFja2dyb3VuZEltYWdlcy5mb3JFYWNoKGltYWdlID0+IHtcbiAgICAgICAgb25CYWNrZ3JvdW5kSW1hZ2VVcGRhdGUoaW1hZ2UuaWQsIHtcbiAgICAgICAgICBzY2FsZVg6IChpbWFnZS5zY2FsZVggfHwgMSkgKiBzY2FsZUZhY3RvcixcbiAgICAgICAgICBzY2FsZVk6IChpbWFnZS5zY2FsZVkgfHwgMSkgKiBzY2FsZUZhY3RvclxuICAgICAgICB9KVxuICAgICAgfSlcbiAgICB9XG5cbiAgICBzZXRTaG93Q2FsaWJyYXRlRGlhbG9nKGZhbHNlKVxuICAgIGNvbnNvbGUubG9nKCdTY2FsZSBjYWxpYnJhdGVkIHdpdGggZmFjdG9yOicsIHNjYWxlRmFjdG9yKVxuICB9LCBbY3VycmVudE1lYXN1cmVtZW50LCBQSVhFTFNfUEVSX0ZPT1QsIGJhY2tncm91bmRJbWFnZXMsIG9uQmFja2dyb3VuZEltYWdlVXBkYXRlXSlcblxuICBjb25zdCBoYW5kbGVDYWxpYnJhdGVFZGl0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNldFNob3dDYWxpYnJhdGVEaWFsb2coZmFsc2UpXG4gICAgc2V0TWVhc3VyZW1lbnRFZGl0TW9kZSh0cnVlKVxuICB9LCBbXSlcblxuICBjb25zdCBoYW5kbGVDYWxpYnJhdGVDYW5jZWwgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2V0U2hvd0NhbGlicmF0ZURpYWxvZyhmYWxzZSlcbiAgICAvLyBPcHRpb25hbGx5IHJlc2V0IHRoZSBtZWFzdXJlbWVudFxuICAgIHNldEN1cnJlbnRNZWFzdXJlbWVudChudWxsKVxuICAgIHNldE1lYXN1cmVtZW50VG9vbEFjdGl2ZShmYWxzZSlcbiAgfSwgW10pXG5cbiAgLy8gSGFuZGxlIGNhbnZhcyBjbGlja3MgZm9yIG1lYXN1cmVtZW50IHRvb2xzXG4gIGNvbnN0IGhhbmRsZUNhbnZhc0NsaWNrID0gdXNlQ2FsbGJhY2soKHg6IG51bWJlciwgeTogbnVtYmVyKSA9PiB7XG4gICAgaWYgKCFhY3RpdmVNZWFzdXJlbWVudFRvb2wpIHJldHVyblxuICAgIFxuICAgIGNvbnNvbGUubG9nKCdDYW52YXMgY2xpY2sgZm9yIG1lYXN1cmVtZW50IHRvb2wgKHJhdyk6JywgeyB4LCB5LCBhY3RpdmVNZWFzdXJlbWVudFRvb2wgfSlcbiAgICBcbiAgICAvLyBUcmFuc2Zvcm0gc2NyZWVuIGNvb3JkaW5hdGVzIHRvIGNhbnZhcyBjb29yZGluYXRlc1xuICAgIC8vIEFjY291bnQgZm9yIGNhbnZhcyB6b29tIGFuZCBwYW5cbiAgICBjb25zdCBjYW52YXNYID0gKHggLSBjYW52YXNTdGF0ZS54KSAvIGNhbnZhc1N0YXRlLnNjYWxlXG4gICAgY29uc3QgY2FudmFzWSA9ICh5IC0gY2FudmFzU3RhdGUueSkgLyBjYW52YXNTdGF0ZS5zY2FsZVxuICAgIFxuICAgIGNvbnNvbGUubG9nKCdDYW52YXMgY2xpY2sgZm9yIG1lYXN1cmVtZW50IHRvb2wgKHRyYW5zZm9ybWVkKTonLCB7IGNhbnZhc1gsIGNhbnZhc1ksIGNhbnZhc1N0YXRlIH0pXG4gICAgXG4gICAgY29uc3QgbmV3UG9pbnQgPSB7IHg6IGNhbnZhc1gsIHk6IGNhbnZhc1kgfVxuICAgIFxuICAgIGlmIChzaW1wbGVNZWFzdXJlbWVudHMuc29tZShtID0+ICFtLmNvbXBsZXRlZCkpIHtcbiAgICAgIC8vIENvbnRpbnVlIGV4aXN0aW5nIG1lYXN1cmVtZW50XG4gICAgICBjb25zdCBjdXJyZW50TWVhc3VyZW1lbnQgPSBzaW1wbGVNZWFzdXJlbWVudHMuZmluZChtID0+ICFtLmNvbXBsZXRlZClcbiAgICAgIGlmIChjdXJyZW50TWVhc3VyZW1lbnQpIHtcbiAgICAgICAgY29uc3QgdXBkYXRlZFBvaW50cyA9IFsuLi5jdXJyZW50TWVhc3VyZW1lbnQucG9pbnRzLCBuZXdQb2ludF1cbiAgICAgICAgXG4gICAgICAgIC8vIEZvciBkaXN0YW5jZSB0b29sLCBjb21wbGV0ZSBhZnRlciAyIHBvaW50c1xuICAgICAgICBpZiAoYWN0aXZlTWVhc3VyZW1lbnRUb29sID09PSAnZGlzdGFuY2UnICYmIHVwZGF0ZWRQb2ludHMubGVuZ3RoID09PSAyKSB7XG4gICAgICAgICAgY29uc3QgZGlzdGFuY2UgPSBNYXRoLnNxcnQoXG4gICAgICAgICAgICBNYXRoLnBvdyh1cGRhdGVkUG9pbnRzWzFdLnggLSB1cGRhdGVkUG9pbnRzWzBdLngsIDIpICsgXG4gICAgICAgICAgICBNYXRoLnBvdyh1cGRhdGVkUG9pbnRzWzFdLnkgLSB1cGRhdGVkUG9pbnRzWzBdLnksIDIpXG4gICAgICAgICAgKSAvIFBJWEVMU19QRVJfRk9PVFxuICAgICAgICAgIFxuICAgICAgICAgIGNvbnN0IGNvbXBsZXRlZE1lYXN1cmVtZW50OiBTaW1wbGVNZWFzdXJlbWVudCA9IHtcbiAgICAgICAgICAgIC4uLmN1cnJlbnRNZWFzdXJlbWVudCxcbiAgICAgICAgICAgIHBvaW50czogdXBkYXRlZFBvaW50cyxcbiAgICAgICAgICAgIHZhbHVlOiBkaXN0YW5jZSxcbiAgICAgICAgICAgIGxhYmVsOiBgRGlzdGFuY2U6ICR7ZGlzdGFuY2UudG9GaXhlZCgwKX0gZnRgLFxuICAgICAgICAgICAgY29tcGxldGVkOiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIHNldFNpbXBsZU1lYXN1cmVtZW50cyhwcmV2ID0+IFxuICAgICAgICAgICAgcHJldi5tYXAobSA9PiBtLmlkID09PSBjdXJyZW50TWVhc3VyZW1lbnQuaWQgPyBjb21wbGV0ZWRNZWFzdXJlbWVudCA6IG0pXG4gICAgICAgICAgKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFVwZGF0ZSBjdXJyZW50IG1lYXN1cmVtZW50IHdpdGggbmV3IHBvaW50XG4gICAgICAgICAgc2V0U2ltcGxlTWVhc3VyZW1lbnRzKHByZXYgPT4gXG4gICAgICAgICAgICBwcmV2Lm1hcChtID0+IG0uaWQgPT09IGN1cnJlbnRNZWFzdXJlbWVudC5pZCA/IHsgLi4ubSwgcG9pbnRzOiB1cGRhdGVkUG9pbnRzIH0gOiBtKVxuICAgICAgICAgIClcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTdGFydCBuZXcgbWVhc3VyZW1lbnRcbiAgICAgIGNvbnN0IG5ld01lYXN1cmVtZW50OiBTaW1wbGVNZWFzdXJlbWVudCA9IHtcbiAgICAgICAgaWQ6IGAke2FjdGl2ZU1lYXN1cmVtZW50VG9vbH0tJHtEYXRlLm5vdygpfWAsXG4gICAgICAgIHR5cGU6IGFjdGl2ZU1lYXN1cmVtZW50VG9vbCxcbiAgICAgICAgcG9pbnRzOiBbbmV3UG9pbnRdLFxuICAgICAgICB2YWx1ZTogMCxcbiAgICAgICAgbGFiZWw6ICcnLFxuICAgICAgICBjb21wbGV0ZWQ6IGZhbHNlXG4gICAgICB9XG4gICAgICBcbiAgICAgIHNldFNpbXBsZU1lYXN1cmVtZW50cyhwcmV2ID0+IFsuLi5wcmV2LCBuZXdNZWFzdXJlbWVudF0pXG4gICAgfVxuICB9LCBbYWN0aXZlTWVhc3VyZW1lbnRUb29sLCBzaW1wbGVNZWFzdXJlbWVudHMsIFBJWEVMU19QRVJfRk9PVF0pXG4gIFxuICAvLyBIYW5kbGUgc3RhZ2UgY2xpY2sgdG8gZGVzZWxlY3QgZXF1aXBtZW50IHdoZW4gY2xpY2tpbmcgb24gZW1wdHkgY2FudmFzXG4gIGNvbnN0IGhhbmRsZVN0YWdlQ2xpY2sgPSB1c2VDYWxsYmFjaygoZTogYW55KSA9PiB7XG4gICAgLy8gQ2hlY2sgaWYgd2UgY2xpY2tlZCBvbiB0aGUgc3RhZ2UgaXRzZWxmIChub3Qgb24gYW55IGVxdWlwbWVudClcbiAgICBjb25zdCBjbGlja2VkT25FbXB0eSA9IGUudGFyZ2V0ID09PSBlLnRhcmdldC5nZXRTdGFnZSgpXG4gICAgXG4gICAgaWYgKGNsaWNrZWRPbkVtcHR5KSB7XG4gICAgICBjb25zdCBzdGFnZSA9IGUudGFyZ2V0LmdldFN0YWdlKClcbiAgICAgIGNvbnN0IHBvcyA9IHN0YWdlLmdldFBvaW50ZXJQb3NpdGlvbigpXG4gICAgICBcbiAgICAgIC8vIElmIGVuaGFuY2VkIG1lYXN1cmVtZW50IHRvb2wgaXMgYWN0aXZlLCBoYW5kbGUgdGhlIGNsaWNrXG4gICAgICBpZiAobWVhc3VyZW1lbnRUb29sQWN0aXZlICYmICFhY3RpdmVNZWFzdXJlbWVudFRvb2wgJiYgcG9zKSB7XG4gICAgICAgIGNvbnN0IGNhbnZhc1ggPSAocG9zLnggLSBjYW52YXNTdGF0ZS54KSAvIGNhbnZhc1N0YXRlLnNjYWxlXG4gICAgICAgIGNvbnN0IGNhbnZhc1kgPSAocG9zLnkgLSBjYW52YXNTdGF0ZS55KSAvIGNhbnZhc1N0YXRlLnNjYWxlXG4gICAgICAgIFxuICAgICAgICAvLyBGb3J3YXJkIHRvIGVuaGFuY2VkIG1lYXN1cmVtZW50IGhhbmRsZXJzXG4gICAgICAgIGNvbnN0IGhhbmRsZXJzID0gKHdpbmRvdyBhcyBhbnkpLmVuaGFuY2VkTWVhc3VyZW1lbnRIYW5kbGVyc1xuICAgICAgICBpZiAoaGFuZGxlcnMgJiYgaGFuZGxlcnMuaGFuZGxlQ2xpY2spIHtcbiAgICAgICAgICBoYW5kbGVycy5oYW5kbGVDbGljayh7IHRhcmdldDogeyBnZXRTdGFnZTogKCkgPT4gc3RhZ2UgfSB9KVxuICAgICAgICB9XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBJZiBhIHNpbXBsZSBtZWFzdXJlbWVudCB0b29sIGlzIGFjdGl2ZSwgaGFuZGxlIHRoZSBjbGljayBmb3IgbWVhc3VyZW1lbnRcbiAgICAgIGlmIChhY3RpdmVNZWFzdXJlbWVudFRvb2wgJiYgcG9zKSB7XG4gICAgICAgIGhhbmRsZUNhbnZhc0NsaWNrKHBvcy54LCBwb3MueSlcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIE90aGVyd2lzZSwgZGVzZWxlY3QgZXF1aXBtZW50XG4gICAgICBvbkVxdWlwbWVudFNlbGVjdD8uKG51bGwpXG4gICAgICBzZXRTZWxlY3RlZEJhY2tncm91bmRJbWFnZUlkKG51bGwpXG4gICAgfVxuICB9LCBbb25FcXVpcG1lbnRTZWxlY3QsIGFjdGl2ZU1lYXN1cmVtZW50VG9vbCwgbWVhc3VyZW1lbnRUb29sQWN0aXZlLCBoYW5kbGVDYW52YXNDbGljaywgY2FudmFzU3RhdGVdKVxuICBcbiAgLy8gSGFuZGxlIHN0YWdlIGRvdWJsZSBjbGljayBmb3IgbWVhc3VyZW1lbnQgdG9vbHNcbiAgY29uc3QgaGFuZGxlU3RhZ2VEb3VibGVDbGljayA9IHVzZUNhbGxiYWNrKChlOiBhbnkpID0+IHtcbiAgICBpZiAoIWFjdGl2ZU1lYXN1cmVtZW50VG9vbCkgcmV0dXJuXG4gICAgXG4gICAgY29uc3Qgc3RhZ2UgPSBlLnRhcmdldC5nZXRTdGFnZSgpXG4gICAgY29uc3QgcG9zID0gc3RhZ2UuZ2V0UG9pbnRlclBvc2l0aW9uKClcbiAgICBcbiAgICBpZiAocG9zKSB7XG4gICAgICAvLyBUcmFuc2Zvcm0gc2NyZWVuIGNvb3JkaW5hdGVzIHRvIGNhbnZhcyBjb29yZGluYXRlc1xuICAgICAgY29uc3QgY2FudmFzWCA9IChwb3MueCAtIGNhbnZhc1N0YXRlLngpIC8gY2FudmFzU3RhdGUuc2NhbGVcbiAgICAgIGNvbnN0IGNhbnZhc1kgPSAocG9zLnkgLSBjYW52YXNTdGF0ZS55KSAvIGNhbnZhc1N0YXRlLnNjYWxlXG4gICAgICBcbiAgICAgIGNvbnNvbGUubG9nKCdEb3VibGUtY2xpY2sgZm9yIG1lYXN1cmVtZW50IHRvb2w6JywgeyB4OiBjYW52YXNYLCB5OiBjYW52YXNZLCBhY3RpdmVNZWFzdXJlbWVudFRvb2wgfSlcbiAgICAgIFxuICAgICAgLy8gQ29tcGxldGUgdGhlIGN1cnJlbnQgbWVhc3VyZW1lbnRcbiAgICAgIHNldFNpbXBsZU1lYXN1cmVtZW50cyhwcmV2ID0+IHtcbiAgICAgICAgY29uc3QgY3VycmVudE1lYXN1cmVtZW50ID0gcHJldi5maW5kKG0gPT4gIW0uY29tcGxldGVkKVxuICAgICAgICBpZiAoIWN1cnJlbnRNZWFzdXJlbWVudCkgcmV0dXJuIHByZXZcbiAgICAgICAgXG4gICAgICAgIC8vIEFkZCB0aGUgZmluYWwgcG9pbnQgZm9yIGFyZWEgYW5kIHBlcmltZXRlciBtZWFzdXJlbWVudHNcbiAgICAgICAgaWYgKGFjdGl2ZU1lYXN1cmVtZW50VG9vbCA9PT0gJ2FyZWEnIHx8IGFjdGl2ZU1lYXN1cmVtZW50VG9vbCA9PT0gJ3BlcmltZXRlcicpIHtcbiAgICAgICAgICBjb25zdCB1cGRhdGVkUG9pbnRzID0gWy4uLmN1cnJlbnRNZWFzdXJlbWVudC5wb2ludHMsIHsgeDogY2FudmFzWCwgeTogY2FudmFzWSB9XVxuICAgICAgICAgIFxuICAgICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgbWVhc3VyZW1lbnQgdmFsdWVcbiAgICAgICAgICBsZXQgdmFsdWUgPSAwXG4gICAgICAgICAgbGV0IGxhYmVsID0gJydcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoYWN0aXZlTWVhc3VyZW1lbnRUb29sID09PSAnYXJlYScgJiYgdXBkYXRlZFBvaW50cy5sZW5ndGggPj0gMykge1xuICAgICAgICAgICAgLy8gQ2FsY3VsYXRlIGFyZWEgdXNpbmcgc2hvZWxhY2UgZm9ybXVsYVxuICAgICAgICAgICAgbGV0IGFyZWEgPSAwXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHVwZGF0ZWRQb2ludHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgY29uc3QgaiA9IChpICsgMSkgJSB1cGRhdGVkUG9pbnRzLmxlbmd0aFxuICAgICAgICAgICAgICBhcmVhICs9IHVwZGF0ZWRQb2ludHNbaV0ueCAqIHVwZGF0ZWRQb2ludHNbal0ueVxuICAgICAgICAgICAgICBhcmVhIC09IHVwZGF0ZWRQb2ludHNbal0ueCAqIHVwZGF0ZWRQb2ludHNbaV0ueVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXJlYSA9IE1hdGguYWJzKGFyZWEpIC8gMlxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBDb252ZXJ0IGZyb20gcGl4ZWxzIHRvIHNxdWFyZSBmZWV0XG4gICAgICAgICAgICBjb25zdCBhcmVhSW5TcUZ0ID0gYXJlYSAvIChQSVhFTFNfUEVSX0ZPT1QgKiBQSVhFTFNfUEVSX0ZPT1QpXG4gICAgICAgICAgICB2YWx1ZSA9IE1hdGgucm91bmQoYXJlYUluU3FGdClcbiAgICAgICAgICAgIGxhYmVsID0gYEFyZWE6ICR7dmFsdWUudG9Mb2NhbGVTdHJpbmcoKX0gc3EgZnRgXG4gICAgICAgICAgfSBlbHNlIGlmIChhY3RpdmVNZWFzdXJlbWVudFRvb2wgPT09ICdwZXJpbWV0ZXInICYmIHVwZGF0ZWRQb2ludHMubGVuZ3RoID49IDIpIHtcbiAgICAgICAgICAgIC8vIENhbGN1bGF0ZSBwZXJpbWV0ZXIgKHN1bSBvZiBhbGwgc2VnbWVudHMgKyBjbG9zaW5nIHNlZ21lbnQpXG4gICAgICAgICAgICBsZXQgcGVyaW1ldGVyID0gMFxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB1cGRhdGVkUG9pbnRzLmxlbmd0aCAtIDE7IGkrKykge1xuICAgICAgICAgICAgICBjb25zdCBkeCA9IHVwZGF0ZWRQb2ludHNbaSArIDFdLnggLSB1cGRhdGVkUG9pbnRzW2ldLnhcbiAgICAgICAgICAgICAgY29uc3QgZHkgPSB1cGRhdGVkUG9pbnRzW2kgKyAxXS55IC0gdXBkYXRlZFBvaW50c1tpXS55XG4gICAgICAgICAgICAgIHBlcmltZXRlciArPSBNYXRoLnNxcnQoZHggKiBkeCArIGR5ICogZHkpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBBZGQgY2xvc2luZyBzZWdtZW50XG4gICAgICAgICAgICBjb25zdCBkeCA9IHVwZGF0ZWRQb2ludHNbMF0ueCAtIHVwZGF0ZWRQb2ludHNbdXBkYXRlZFBvaW50cy5sZW5ndGggLSAxXS54XG4gICAgICAgICAgICBjb25zdCBkeSA9IHVwZGF0ZWRQb2ludHNbMF0ueSAtIHVwZGF0ZWRQb2ludHNbdXBkYXRlZFBvaW50cy5sZW5ndGggLSAxXS55XG4gICAgICAgICAgICBwZXJpbWV0ZXIgKz0gTWF0aC5zcXJ0KGR4ICogZHggKyBkeSAqIGR5KVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBDb252ZXJ0IGZyb20gcGl4ZWxzIHRvIGZlZXRcbiAgICAgICAgICAgIGNvbnN0IHBlcmltZXRlckluRnQgPSBwZXJpbWV0ZXIgLyBQSVhFTFNfUEVSX0ZPT1RcbiAgICAgICAgICAgIHZhbHVlID0gTWF0aC5yb3VuZChwZXJpbWV0ZXJJbkZ0KVxuICAgICAgICAgICAgbGFiZWwgPSBgUGVyaW1ldGVyOiAke3ZhbHVlLnRvTG9jYWxlU3RyaW5nKCl9IGZ0YFxuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICBjb25zb2xlLmxvZygnTWVhc3VyZW1lbnQgY29tcGxldGVkOicsIHsgaWQ6IGN1cnJlbnRNZWFzdXJlbWVudC5pZCwgdmFsdWUsIGxhYmVsLCBjb21wbGV0ZWQ6IHRydWUgfSlcbiAgICAgICAgICBcbiAgICAgICAgICByZXR1cm4gcHJldi5tYXAobSA9PiBcbiAgICAgICAgICAgIG0uaWQgPT09IGN1cnJlbnRNZWFzdXJlbWVudC5pZCBcbiAgICAgICAgICAgICAgPyB7IC4uLm0sIHBvaW50czogdXBkYXRlZFBvaW50cywgdmFsdWUsIGxhYmVsLCBjb21wbGV0ZWQ6IHRydWUgfVxuICAgICAgICAgICAgICA6IG1cbiAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHJldHVybiBwcmV2XG4gICAgICB9KVxuICAgICAgXG4gICAgICAvLyBEZWFjdGl2YXRlIHRoZSBtZWFzdXJlbWVudCB0b29sXG4gICAgICBzZXRBY3RpdmVNZWFzdXJlbWVudFRvb2wobnVsbClcbiAgICB9XG4gIH0sIFthY3RpdmVNZWFzdXJlbWVudFRvb2wsIGNhbnZhc1N0YXRlLCBQSVhFTFNfUEVSX0ZPT1RdKVxuXG4gIC8vIEJhY2tncm91bmQgaW1hZ2UgbWFuYWdlbWVudCBmdW5jdGlvbnNcbiAgY29uc3QgaGFuZGxlQmFja2dyb3VuZEltYWdlQWRkID0gdXNlQ2FsbGJhY2soKGltYWdlOiBPbWl0PEJhY2tncm91bmRJbWFnZSwgJ2lkJz4pID0+IHtcbiAgICBjb25zdCBpbWFnZVdpdGhJZCA9IHtcbiAgICAgIC4uLmltYWdlLFxuICAgICAgaWQ6IGBiZy0ke0RhdGUubm93KCl9LSR7TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDkpfWBcbiAgICB9XG4gICAgb25CYWNrZ3JvdW5kSW1hZ2VBZGQ/LihpbWFnZVdpdGhJZClcbiAgfSwgW29uQmFja2dyb3VuZEltYWdlQWRkXSlcblxuICBjb25zdCBoYW5kbGVCYWNrZ3JvdW5kSW1hZ2VTZWxlY3QgPSAoaW1hZ2VJZDogc3RyaW5nIHwgbnVsbCkgPT4ge1xuICAgIHNldFNlbGVjdGVkQmFja2dyb3VuZEltYWdlSWQoaW1hZ2VJZClcbiAgfVxuXG4gIGNvbnN0IGNhbGlicmF0ZUltYWdlU2NhbGUgPSAoYWN0dWFsRGlzdGFuY2U6IG51bWJlciwgY2FsY3VsYXRlZERpc3RhbmNlOiBudW1iZXIpID0+IHtcbiAgICAvLyBDYWxjdWxhdGUgdGhlIHNjYWxlIGNvcnJlY3Rpb24gZmFjdG9yXG4gICAgY29uc3Qgc2NhbGVDb3JyZWN0aW9uID0gYWN0dWFsRGlzdGFuY2UgLyBjYWxjdWxhdGVkRGlzdGFuY2VcbiAgICBcbiAgICAvLyBBcHBseSB0aGUgY29ycmVjdGlvbiB0byBhbGwgYmFja2dyb3VuZCBpbWFnZXNcbiAgICBiYWNrZ3JvdW5kSW1hZ2VzLmZvckVhY2goaW1hZ2UgPT4ge1xuICAgICAgaWYgKG9uQmFja2dyb3VuZEltYWdlVXBkYXRlKSB7XG4gICAgICAgIG9uQmFja2dyb3VuZEltYWdlVXBkYXRlKGltYWdlLmlkLCB7XG4gICAgICAgICAgc2NhbGVYOiBpbWFnZS5zY2FsZVggKiBzY2FsZUNvcnJlY3Rpb24sXG4gICAgICAgICAgc2NhbGVZOiBpbWFnZS5zY2FsZVkgKiBzY2FsZUNvcnJlY3Rpb25cbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9KVxuICAgIFxuICAgIGNvbnNvbGUubG9nKGBTY2FsZSBjYWxpYnJhdGVkOiAke3NjYWxlQ29ycmVjdGlvbi50b0ZpeGVkKDMpfXggY29ycmVjdGlvbiBhcHBsaWVkIHRvICR7YmFja2dyb3VuZEltYWdlcy5sZW5ndGh9IGJhY2tncm91bmQgaW1hZ2VzYClcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZVNob3dEaXN0YW5jZUlucHV0ID0gKFxuICAgIGNhbGN1bGF0ZWREaXN0YW5jZTogbnVtYmVyLFxuICAgIG9uU3VibWl0OiAoYWN0dWFsRGlzdGFuY2U6IG51bWJlcikgPT4gdm9pZCxcbiAgICBvbkNhbmNlbDogKCkgPT4gdm9pZFxuICApID0+IHtcbiAgICBzZXREaXN0YW5jZUlucHV0RGF0YSh7XG4gICAgICBjYWxjdWxhdGVkRGlzdGFuY2UsXG4gICAgICBvblN1Ym1pdDogKGFjdHVhbERpc3RhbmNlOiBudW1iZXIpID0+IHtcbiAgICAgICAgLy8gQ2FsaWJyYXRlIHRoZSBpbWFnZSBzY2FsZSBhdXRvbWF0aWNhbGx5XG4gICAgICAgIGNhbGlicmF0ZUltYWdlU2NhbGUoYWN0dWFsRGlzdGFuY2UsIGNhbGN1bGF0ZWREaXN0YW5jZSlcbiAgICAgICAgXG4gICAgICAgIG9uU3VibWl0KGFjdHVhbERpc3RhbmNlKVxuICAgICAgICBzZXRTaG93RGlzdGFuY2VJbnB1dChmYWxzZSlcbiAgICAgICAgc2V0RGlzdGFuY2VJbnB1dERhdGEobnVsbClcbiAgICAgIH0sXG4gICAgICBvbkNhbmNlbDogKCkgPT4ge1xuICAgICAgICBvbkNhbmNlbCgpXG4gICAgICAgIHNldFNob3dEaXN0YW5jZUlucHV0KGZhbHNlKVxuICAgICAgICBzZXREaXN0YW5jZUlucHV0RGF0YShudWxsKVxuICAgICAgfVxuICAgIH0pXG4gICAgc2V0U2hvd0Rpc3RhbmNlSW5wdXQodHJ1ZSlcbiAgfVxuXG4gIC8vIEVuc3VyZSBjbGllbnQtc2lkZSBvbmx5IHJlbmRlcmluZyB0byBwcmV2ZW50IGh5ZHJhdGlvbiBtaXNtYXRjaGVzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0SXNDbGllbnQodHJ1ZSlcbiAgfSwgW10pXG5cbiAgLy8gRG9uJ3QgcmVuZGVyIGNhbnZhcyBkdXJpbmcgU1NSIHRvIHByZXZlbnQgaHlkcmF0aW9uIG1pc21hdGNoZXNcbiAgaWYgKCFpc0NsaWVudCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17YHJlbGF0aXZlIHctZnVsbCBoLWZ1bGwgJHtjbGFzc05hbWV9IGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGJnLWdyYXktNTBgfT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNTAwXCI+TG9hZGluZyBjYW52YXMuLi48L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2ByZWxhdGl2ZSB3LWZ1bGwgaC1mdWxsICR7Y2xhc3NOYW1lfSBmbGV4IGZsZXgtY29sYH0+XG4gICAgICB7LyogQ2FudmFzIENvbnRyb2xzICovfVxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJhYnNvbHV0ZSB0b3AtNCByaWdodC00IHotMTAgZmxleCBmbGV4LWNvbCBnYXAtMlwiPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgb25DbGljaz17cmVzZXRDYW52YXN9XG4gICAgICAgICAgY2xhc3NOYW1lPVwicHgtMyBweS0xIGJnLXdoaXRlIGJvcmRlciBib3JkZXItZ3JheS0zMDAgcm91bmRlZCBzaGFkb3cgaG92ZXI6YmctZ3JheS01MCB0ZXh0LXNtIHRleHQtZ3JheS05MDBcIlxuICAgICAgICAgIHRpdGxlPVwiUmVzZXQgVmlld1wiXG4gICAgICAgID5cbiAgICAgICAgICBSZXNldFxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIG9uQ2xpY2s9e2ZpdFRvQ29udGVudH1cbiAgICAgICAgICBjbGFzc05hbWU9XCJweC0zIHB5LTEgYmctd2hpdGUgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCByb3VuZGVkIHNoYWRvdyBob3ZlcjpiZy1ncmF5LTUwIHRleHQtc20gdGV4dC1ncmF5LTkwMFwiXG4gICAgICAgICAgdGl0bGU9XCJGaXQgdG8gQ29udGVudFwiXG4gICAgICAgID5cbiAgICAgICAgICBGaXRcbiAgICAgICAgPC9idXR0b24+XG4gICAgICAgIFxuICAgICAgICB7LyogWm9vbSBDb250cm9scyAqL31cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggc3BhY2UteC0xXCI+XG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3pvb21Jbn1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZmxleC0xIHB4LTYgcHktMSBiZy13aGl0ZSBib3JkZXIgYm9yZGVyLWdyYXktMzAwIHJvdW5kZWQgc2hhZG93IGhvdmVyOmJnLWdyYXktNTAgdGV4dC1zbSB0ZXh0LWdyYXktOTAwIHRleHQtY2VudGVyXCJcbiAgICAgICAgICAgICAgdGl0bGU9XCJab29tIEluXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgK1xuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3pvb21PdXR9XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZsZXgtMSBweC02IHB5LTEgYmctd2hpdGUgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCByb3VuZGVkIHNoYWRvdyBob3ZlcjpiZy1ncmF5LTUwIHRleHQtc20gdGV4dC1ncmF5LTkwMCB0ZXh0LWNlbnRlclwiXG4gICAgICAgICAgICAgIHRpdGxlPVwiWm9vbSBPdXRcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICDiiJJcbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIFxuICAgICAgICAgIHsvKiBab29tIFBlcmNlbnRhZ2UgRGlzcGxheSAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ncmF5LTkwMCBmb250LW1lZGl1bSBiZy13aGl0ZSBweC0zIHB5LTEgcm91bmRlZCBib3JkZXIgYm9yZGVyLWdyYXktMzAwIHNoYWRvdyB0ZXh0LWNlbnRlciBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlclwiPlxuICAgICAgICAgICAgWm9vbSAoe01hdGgucm91bmQoY2FudmFzU3RhdGUuc2NhbGUgKiAxMDApfSUpXG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgXG4gICAgICAgICAgey8qIE1heCBPdXQgQnV0dG9uICovfVxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgaWYgKCFzdGFnZVJlZi5jdXJyZW50KSByZXR1cm5cbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIGNvbnN0IHN0YWdlID0gc3RhZ2VSZWYuY3VycmVudFxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgLy8gSWYgdGhlcmUgYXJlIGJhY2tncm91bmQgaW1hZ2VzLCBmaXQgdGhlIGxhcmdlc3Qgb25lOyBvdGhlcndpc2UgZml0IGNhbnZhc1xuICAgICAgICAgICAgICBpZiAoYmFja2dyb3VuZEltYWdlcyAmJiBiYWNrZ3JvdW5kSW1hZ2VzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAvLyBGaW5kIHRoZSBsYXJnZXN0IGJhY2tncm91bmQgaW1hZ2UgZGltZW5zaW9uc1xuICAgICAgICAgICAgICAgIGxldCBtYXhXaWR0aCA9IDBcbiAgICAgICAgICAgICAgICBsZXQgbWF4SGVpZ2h0ID0gMFxuICAgICAgICAgICAgICAgIGxldCB0YXJnZXRJbWFnZSA9IG51bGxcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kSW1hZ2VzLmZvckVhY2goaW1nID0+IHtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IGltZ1dpZHRoID0gKGltZy53aWR0aCB8fCAwKSAqIChpbWcuc2NhbGVYIHx8IDEpXG4gICAgICAgICAgICAgICAgICBjb25zdCBpbWdIZWlnaHQgPSAoaW1nLmhlaWdodCB8fCAwKSAqIChpbWcuc2NhbGVZIHx8IDEpXG4gICAgICAgICAgICAgICAgICBjb25zdCBpbWdBcmVhID0gaW1nV2lkdGggKiBpbWdIZWlnaHRcbiAgICAgICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRNYXhBcmVhID0gbWF4V2lkdGggKiBtYXhIZWlnaHRcbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgaWYgKGltZ0FyZWEgPiBjdXJyZW50TWF4QXJlYSkge1xuICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aCA9IGltZ1dpZHRoXG4gICAgICAgICAgICAgICAgICAgIG1heEhlaWdodCA9IGltZ0hlaWdodFxuICAgICAgICAgICAgICAgICAgICB0YXJnZXRJbWFnZSA9IGltZ1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaWYgKG1heFdpZHRoID4gMCAmJiBtYXhIZWlnaHQgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAvLyBDYWxjdWxhdGUgc2NhbGUgdG8gZml0IHRoZSBsYXJnZXN0IGJhY2tncm91bmQgaW1hZ2VcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHNjYWxlWCA9IHN0YWdlU2l6ZS53aWR0aCAvIG1heFdpZHRoXG4gICAgICAgICAgICAgICAgICBjb25zdCBzY2FsZVkgPSBzdGFnZVNpemUuaGVpZ2h0IC8gbWF4SGVpZ2h0XG4gICAgICAgICAgICAgICAgICBjb25zdCBmaXRTY2FsZSA9IE1hdGgubWluKHNjYWxlWCwgc2NhbGVZKSAqIDAuOSAvLyA5MCUgcGFkZGluZ1xuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAvLyBDZW50ZXIgdGhlIGltYWdlIGluIHRoZSB2aWV3cG9ydFxuICAgICAgICAgICAgICAgICAgY29uc3QgY2VudGVyWCA9IChzdGFnZVNpemUud2lkdGggLSBtYXhXaWR0aCAqIGZpdFNjYWxlKSAvIDJcbiAgICAgICAgICAgICAgICAgIGNvbnN0IGNlbnRlclkgPSAoc3RhZ2VTaXplLmhlaWdodCAtIG1heEhlaWdodCAqIGZpdFNjYWxlKSAvIDJcbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgLy8gSWYgaW1hZ2UgaGFzIHBvc2l0aW9uLCBhY2NvdW50IGZvciBpdFxuICAgICAgICAgICAgICAgICAgY29uc3QgYWRqdXN0ZWRYID0gY2VudGVyWCAtICh0YXJnZXRJbWFnZT8ueCB8fCAwKSAqIGZpdFNjYWxlXG4gICAgICAgICAgICAgICAgICBjb25zdCBhZGp1c3RlZFkgPSBjZW50ZXJZIC0gKHRhcmdldEltYWdlPy55IHx8IDApICogZml0U2NhbGVcbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgc3RhZ2Uuc2NhbGUoeyB4OiBmaXRTY2FsZSwgeTogZml0U2NhbGUgfSlcbiAgICAgICAgICAgICAgICAgIHN0YWdlLnBvc2l0aW9uKHsgeDogYWRqdXN0ZWRYLCB5OiBhZGp1c3RlZFkgfSlcbiAgICAgICAgICAgICAgICAgIHN0YWdlLmJhdGNoRHJhdygpXG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIHNldENhbnZhc1N0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgc2NhbGU6IGZpdFNjYWxlLFxuICAgICAgICAgICAgICAgICAgICB4OiBhZGp1c3RlZFgsXG4gICAgICAgICAgICAgICAgICAgIHk6IGFkanVzdGVkWVxuICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coYE1heCBPdXQ6IEZpdCBzYXRlbGxpdGUgaW1hZ2UgKCR7TWF0aC5yb3VuZChtYXhXaWR0aCl9eCR7TWF0aC5yb3VuZChtYXhIZWlnaHQpfXB4KSBpbiB2aWV3cG9ydCAoJHtzdGFnZVNpemUud2lkdGh9eCR7c3RhZ2VTaXplLmhlaWdodH1weCkgYXQgJHtNYXRoLnJvdW5kKGZpdFNjYWxlICogMTAwKX0lIHpvb21gKVxuICAgICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAvLyBGYWxsYmFjazogZml0IGVudGlyZSBjYW52YXMgaWYgbm8gYmFja2dyb3VuZCBpbWFnZXNcbiAgICAgICAgICAgICAgY29uc3Qgc2NhbGVYID0gc3RhZ2VTaXplLndpZHRoIC8gQ0FOVkFTX1NJWkVfUElYRUxTXG4gICAgICAgICAgICAgIGNvbnN0IHNjYWxlWSA9IHN0YWdlU2l6ZS5oZWlnaHQgLyBDQU5WQVNfU0laRV9QSVhFTFNcbiAgICAgICAgICAgICAgY29uc3QgZml0U2NhbGUgPSBNYXRoLm1pbihzY2FsZVgsIHNjYWxlWSkgKiAwLjkgLy8gOTAlIHRvIGFkZCBzb21lIHBhZGRpbmdcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIC8vIENlbnRlciB0aGUgY2FudmFzIGluIHRoZSB2aWV3cG9ydFxuICAgICAgICAgICAgICBjb25zdCBjZW50ZXJYID0gKHN0YWdlU2l6ZS53aWR0aCAtIENBTlZBU19TSVpFX1BJWEVMUyAqIGZpdFNjYWxlKSAvIDJcbiAgICAgICAgICAgICAgY29uc3QgY2VudGVyWSA9IChzdGFnZVNpemUuaGVpZ2h0IC0gQ0FOVkFTX1NJWkVfUElYRUxTICogZml0U2NhbGUpIC8gMlxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgc3RhZ2Uuc2NhbGUoeyB4OiBmaXRTY2FsZSwgeTogZml0U2NhbGUgfSlcbiAgICAgICAgICAgICAgc3RhZ2UucG9zaXRpb24oeyB4OiBjZW50ZXJYLCB5OiBjZW50ZXJZIH0pXG4gICAgICAgICAgICAgIHN0YWdlLmJhdGNoRHJhdygpXG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBzZXRDYW52YXNTdGF0ZSh7XG4gICAgICAgICAgICAgICAgc2NhbGU6IGZpdFNjYWxlLFxuICAgICAgICAgICAgICAgIHg6IGNlbnRlclgsXG4gICAgICAgICAgICAgICAgeTogY2VudGVyWVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coYE1heCBPdXQ6IEZpdCBlbnRpcmUgY2FudmFzICgke0NBTlZBU19TSVpFX1BJWEVMU31weCkgaW4gdmlld3BvcnQgKCR7c3RhZ2VTaXplLndpZHRofXgke3N0YWdlU2l6ZS5oZWlnaHR9cHgpIGF0ICR7TWF0aC5yb3VuZChmaXRTY2FsZSAqIDEwMCl9JSB6b29tYClcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJweC0zIHB5LTEgYmctd2hpdGUgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCByb3VuZGVkIHNoYWRvdyBob3ZlcjpiZy1ncmF5LTUwIHRleHQtc20gdGV4dC1ncmF5LTkwMCB0ZXh0LWNlbnRlclwiXG4gICAgICAgICAgICB0aXRsZT1cIkZpdCBFbnRpcmUgU2F0ZWxsaXRlIEltYWdlIGluIFZpZXdcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIE1heCBPdXRcbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRHcmlkVmlzaWJsZSghZ3JpZFZpc2libGUpfVxuICAgICAgICAgIGNsYXNzTmFtZT17YHB4LTMgcHktMSBib3JkZXIgcm91bmRlZCBzaGFkb3cgdGV4dC1zbSAke1xuICAgICAgICAgICAgZ3JpZFZpc2libGUgXG4gICAgICAgICAgICAgID8gJ2JnLWJsdWUtNTAwIHRleHQtd2hpdGUgYm9yZGVyLWJsdWUtNTAwJyBcbiAgICAgICAgICAgICAgOiAnYmctd2hpdGUgdGV4dC1ncmF5LTcwMCBib3JkZXItZ3JheS0zMDAgaG92ZXI6YmctZ3JheS01MCdcbiAgICAgICAgICB9YH1cbiAgICAgICAgICB0aXRsZT1cIlRvZ2dsZSBHcmlkXCJcbiAgICAgICAgPlxuICAgICAgICAgIEdyaWRcbiAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRCYWNrZ3JvdW5kTWFuYWdlck9wZW4odHJ1ZSl9XG4gICAgICAgICAgY2xhc3NOYW1lPVwicHgtMyBweS0xIGJnLXdoaXRlIGJvcmRlciBib3JkZXItZ3JheS0zMDAgcm91bmRlZCBzaGFkb3cgaG92ZXI6YmctZ3JheS01MCB0ZXh0LXNtIHRleHQtZ3JheS05MDBcIlxuICAgICAgICAgIHRpdGxlPVwiTWFuYWdlIEJhY2tncm91bmQgSW1hZ2VzXCJcbiAgICAgICAgPlxuICAgICAgICAgIEltYWdlc1xuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldFNjYWxlQmFyVmlzaWJsZSghc2NhbGVCYXJWaXNpYmxlKX1cbiAgICAgICAgICBjbGFzc05hbWU9e2BweC0zIHB5LTEgYm9yZGVyIHJvdW5kZWQgc2hhZG93IHRleHQtc20gJHtcbiAgICAgICAgICAgIHNjYWxlQmFyVmlzaWJsZSBcbiAgICAgICAgICAgICAgPyAnYmctZ3JlZW4tNTAwIHRleHQtd2hpdGUgYm9yZGVyLWdyZWVuLTUwMCcgXG4gICAgICAgICAgICAgIDogJ2JnLXdoaXRlIHRleHQtZ3JheS03MDAgYm9yZGVyLWdyYXktMzAwIGhvdmVyOmJnLWdyYXktNTAnXG4gICAgICAgICAgfWB9XG4gICAgICAgICAgdGl0bGU9XCJUb2dnbGUgU2NhbGUgQmFyXCJcbiAgICAgICAgPlxuICAgICAgICAgIFNjYWxlXG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgICB7LyogRW5oYW5jZWQgTWVhc3VyZW1lbnQgQ29udHJvbHMgKi99XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBzcGFjZS14LTFcIj5cbiAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgIGlmIChtZWFzdXJlbWVudFRvb2xBY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAvLyBSZXNldCBtZWFzdXJlbWVudCBpZiBhbHJlYWR5IGFjdGl2ZVxuICAgICAgICAgICAgICAgIHNldEN1cnJlbnRNZWFzdXJlbWVudChudWxsKVxuICAgICAgICAgICAgICAgIHNldE1lYXN1cmVtZW50VG9vbEFjdGl2ZShmYWxzZSlcbiAgICAgICAgICAgICAgICBzZXRNZWFzdXJlbWVudEVkaXRNb2RlKGZhbHNlKVxuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFN0YXJ0IG5ldyBtZWFzdXJlbWVudFxuICAgICAgICAgICAgICAgIHNldEN1cnJlbnRNZWFzdXJlbWVudCh7XG4gICAgICAgICAgICAgICAgICBpZDogRGF0ZS5ub3coKS50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgZmlyc3RQb2ludDogbnVsbCxcbiAgICAgICAgICAgICAgICAgIHNlY29uZFBvaW50OiBudWxsLFxuICAgICAgICAgICAgICAgICAgaXNDb21wbGV0ZTogZmFsc2VcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIHNldE1lYXN1cmVtZW50VG9vbEFjdGl2ZSh0cnVlKVxuICAgICAgICAgICAgICAgIHNldE1lYXN1cmVtZW50RWRpdE1vZGUoZmFsc2UpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICBjbGFzc05hbWU9e2BweC0zIHB5LTEgYm9yZGVyIHJvdW5kZWQgc2hhZG93IHRleHQtc20gdHJhbnNpdGlvbi1jb2xvcnMgJHtcbiAgICAgICAgICAgICAgbWVhc3VyZW1lbnRUb29sQWN0aXZlICYmICFtZWFzdXJlbWVudEVkaXRNb2RlXG4gICAgICAgICAgICAgICAgPyAnYmctb3JhbmdlLTUwMCB0ZXh0LXdoaXRlIGJvcmRlci1vcmFuZ2UtNTAwJ1xuICAgICAgICAgICAgICAgIDogJ2JnLXdoaXRlIHRleHQtZ3JheS05MDAgYm9yZGVyLWdyYXktMzAwIGhvdmVyOmJnLWdyYXktNTAnXG4gICAgICAgICAgICB9YH1cbiAgICAgICAgICAgIHRpdGxlPVwiU3RhcnQgTmV3IE1lYXN1cmVtZW50XCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICDwn5OPIE1lYXN1cmVcbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICBcbiAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgIGlmIChjdXJyZW50TWVhc3VyZW1lbnQ/LmlzQ29tcGxldGUpIHtcbiAgICAgICAgICAgICAgICBzZXRNZWFzdXJlbWVudEVkaXRNb2RlKCFtZWFzdXJlbWVudEVkaXRNb2RlKVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgZGlzYWJsZWQ9eyFjdXJyZW50TWVhc3VyZW1lbnQ/LmlzQ29tcGxldGV9XG4gICAgICAgICAgICBjbGFzc05hbWU9e2BweC0zIHB5LTEgYm9yZGVyIHJvdW5kZWQgc2hhZG93IHRleHQtc20gdHJhbnNpdGlvbi1jb2xvcnMgJHtcbiAgICAgICAgICAgICAgbWVhc3VyZW1lbnRFZGl0TW9kZVxuICAgICAgICAgICAgICAgID8gJ2JnLWJsdWUtNTAwIHRleHQtd2hpdGUgYm9yZGVyLWJsdWUtNTAwJ1xuICAgICAgICAgICAgICAgIDogY3VycmVudE1lYXN1cmVtZW50Py5pc0NvbXBsZXRlXG4gICAgICAgICAgICAgICAgPyAnYmctd2hpdGUgdGV4dC1ncmF5LTkwMCBib3JkZXItZ3JheS0zMDAgaG92ZXI6YmctZ3JheS01MCdcbiAgICAgICAgICAgICAgICA6ICdiZy1ncmF5LTIwMCB0ZXh0LWdyYXktNDAwIGJvcmRlci1ncmF5LTIwMCBjdXJzb3Itbm90LWFsbG93ZWQnXG4gICAgICAgICAgICB9YH1cbiAgICAgICAgICAgIHRpdGxlPVwiRWRpdCBNZWFzdXJlbWVudCBMaW5lXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICDinI/vuI8gRWRpdFxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIFxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgaWYgKGN1cnJlbnRNZWFzdXJlbWVudD8uaXNDb21wbGV0ZSkge1xuICAgICAgICAgICAgICAgIHNldFNob3dDYWxpYnJhdGVEaWFsb2codHJ1ZSlcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIGRpc2FibGVkPXshY3VycmVudE1lYXN1cmVtZW50Py5pc0NvbXBsZXRlfVxuICAgICAgICAgICAgY2xhc3NOYW1lPXtgcHgtMyBweS0xIGJvcmRlciByb3VuZGVkIHNoYWRvdyB0ZXh0LXNtIHRyYW5zaXRpb24tY29sb3JzICR7XG4gICAgICAgICAgICAgIGN1cnJlbnRNZWFzdXJlbWVudD8uaXNDb21wbGV0ZVxuICAgICAgICAgICAgICAgID8gJ2JnLXdoaXRlIHRleHQtZ3JheS05MDAgYm9yZGVyLWdyYXktMzAwIGhvdmVyOmJnLWdyYXktNTAnXG4gICAgICAgICAgICAgICAgOiAnYmctZ3JheS0yMDAgdGV4dC1ncmF5LTQwMCBib3JkZXItZ3JheS0yMDAgY3Vyc29yLW5vdC1hbGxvd2VkJ1xuICAgICAgICAgICAgfWB9XG4gICAgICAgICAgICB0aXRsZT1cIkNhbGlicmF0ZSBTY2FsZVwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAg8J+OryBDYWxpYnJhdGVcbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIFxuICAgICAgICB7LyogQWR2YW5jZWQgTWVhc3VyZW1lbnQgVG9vbHMgKi99XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBzcGFjZS14LTFcIj5cbiAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRBY3RpdmVNZWFzdXJlbWVudFRvb2woYWN0aXZlTWVhc3VyZW1lbnRUb29sID09PSAnYXJlYScgPyBudWxsIDogJ2FyZWEnKX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17YHB4LTMgcHktMiByb3VuZGVkIHRleHQtc20gZm9udC1tZWRpdW0gdHJhbnNpdGlvbi1jb2xvcnMgJHtcbiAgICAgICAgICAgICAgYWN0aXZlTWVhc3VyZW1lbnRUb29sID09PSAnYXJlYSdcbiAgICAgICAgICAgICAgICA/ICdiZy1ncmVlbi01MDAgdGV4dC13aGl0ZSdcbiAgICAgICAgICAgICAgICA6ICdiZy13aGl0ZSB0ZXh0LWdyYXktNzAwIGJvcmRlciBib3JkZXItZ3JheS0zMDAgaG92ZXI6YmctZ3JheS01MCdcbiAgICAgICAgICAgIH1gfVxuICAgICAgICAgICAgdGl0bGU9XCJBcmVhIE1lYXN1cmVtZW50IFRvb2xcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIPCfk5AgQXJlYVxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIFxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldEFjdGl2ZU1lYXN1cmVtZW50VG9vbChhY3RpdmVNZWFzdXJlbWVudFRvb2wgPT09ICdwZXJpbWV0ZXInID8gbnVsbCA6ICdwZXJpbWV0ZXInKX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17YHB4LTMgcHktMiByb3VuZGVkIHRleHQtc20gZm9udC1tZWRpdW0gdHJhbnNpdGlvbi1jb2xvcnMgJHtcbiAgICAgICAgICAgICAgYWN0aXZlTWVhc3VyZW1lbnRUb29sID09PSAncGVyaW1ldGVyJ1xuICAgICAgICAgICAgICAgID8gJ2JnLWJsdWUtNTAwIHRleHQtd2hpdGUnXG4gICAgICAgICAgICAgICAgOiAnYmctd2hpdGUgdGV4dC1ncmF5LTcwMCBib3JkZXIgYm9yZGVyLWdyYXktMzAwIGhvdmVyOmJnLWdyYXktNTAnXG4gICAgICAgICAgICB9YH1cbiAgICAgICAgICAgIHRpdGxlPVwiUGVyaW1ldGVyIE1lYXN1cmVtZW50IFRvb2xcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIPCfk48gUGVyaW1ldGVyXG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0QWN0aXZlTWVhc3VyZW1lbnRUb29sKGFjdGl2ZU1lYXN1cmVtZW50VG9vbCA9PT0gJ2Rpc3RhbmNlJyA/IG51bGwgOiAnZGlzdGFuY2UnKX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17YHB4LTMgcHktMiByb3VuZGVkIHRleHQtc20gZm9udC1tZWRpdW0gdHJhbnNpdGlvbi1jb2xvcnMgJHtcbiAgICAgICAgICAgICAgYWN0aXZlTWVhc3VyZW1lbnRUb29sID09PSAnZGlzdGFuY2UnXG4gICAgICAgICAgICAgICAgPyAnYmctYW1iZXItNTAwIHRleHQtd2hpdGUnXG4gICAgICAgICAgICAgICAgOiAnYmctd2hpdGUgdGV4dC1ncmF5LTcwMCBib3JkZXIgYm9yZGVyLWdyYXktMzAwIGhvdmVyOmJnLWdyYXktNTAnXG4gICAgICAgICAgICB9YH1cbiAgICAgICAgICAgIHRpdGxlPVwiRGlzdGFuY2UgTWVhc3VyZW1lbnQgVG9vbFwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAg8J+TjyBEaXN0YW5jZVxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIFxuXG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIHsvKiBDYW52YXMgSW5mbyByZW1vdmVkIC0gbW92ZWQgdG8gUHJvcGVydGllcyBwYW5lbCAqL31cblxuICAgICAgey8qIEtvbnZhIFN0YWdlICovfVxuICAgICAgPFN0YWdlXG4gICAgICAgIHJlZj17c3RhZ2VSZWZ9XG4gICAgICAgIHdpZHRoPXtzdGFnZVNpemUud2lkdGh9XG4gICAgICAgIGhlaWdodD17c3RhZ2VTaXplLmhlaWdodH1cbiAgICAgICAgZHJhZ2dhYmxlPXshbWVhc3VyZW1lbnRUb29sQWN0aXZlICYmICFhY3RpdmVNZWFzdXJlbWVudFRvb2x9XG4gICAgICAgIG9uV2hlZWw9e2hhbmRsZVdoZWVsfVxuICAgICAgICBvbkRyYWdFbmQ9e2hhbmRsZURyYWdFbmR9XG4gICAgICAgIG9uQ2xpY2s9e2hhbmRsZVN0YWdlQ2xpY2t9XG4gICAgICAgIG9uRGJsQ2xpY2s9e2hhbmRsZVN0YWdlRG91YmxlQ2xpY2t9XG4gICAgICAgIGNsYXNzTmFtZT1cImJvcmRlciBib3JkZXItZ3JheS0zMDAgYmctZ3JheS01MCBmbGV4LTFcIlxuICAgICAgICBvbkNvbnRlbnRNb3VzZURvd249eygpID0+IHtcbiAgICAgICAgICAvLyBFbnN1cmUgY2FudmFzIGVsZW1lbnQgaXMgY2FwdHVyZWQgYWZ0ZXIgc3RhZ2UgaXMgZnVsbHkgbW91bnRlZFxuICAgICAgICAgIGlmIChzdGFnZVJlZi5jdXJyZW50ICYmIG9uQ2FudmFzUmVhZHkpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IHN0YWdlUmVmLmN1cnJlbnQuY29udGFpbmVyKClcbiAgICAgICAgICAgIGlmIChjb250YWluZXIpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1N0YWdlIG1vdW50ZWQsIGNhcHR1cmluZyBjYW52YXMgZWxlbWVudDonLCBjb250YWluZXIpXG4gICAgICAgICAgICAgIG9uQ2FudmFzUmVhZHkoY29udGFpbmVyKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAgPExheWVyPlxuICAgICAgICAgIHsvKiBCYWNrZ3JvdW5kIEltYWdlcyBMYXllciAqL31cbiAgICAgICAgICA8QmFja2dyb3VuZExheWVyXG4gICAgICAgICAgICBpbWFnZXM9e2JhY2tncm91bmRJbWFnZXN9XG4gICAgICAgICAgICBvbkltYWdlVXBkYXRlPXtvbkJhY2tncm91bmRJbWFnZVVwZGF0ZX1cbiAgICAgICAgICAgIG9uSW1hZ2VEZWxldGU9e29uQmFja2dyb3VuZEltYWdlRGVsZXRlfVxuICAgICAgICAgICAgb25JbWFnZVNlbGVjdD17aGFuZGxlQmFja2dyb3VuZEltYWdlU2VsZWN0fVxuICAgICAgICAgICAgc2VsZWN0ZWRJbWFnZUlkPXtzZWxlY3RlZEJhY2tncm91bmRJbWFnZUlkfVxuICAgICAgICAgICAgc2NhbGU9e2NhbnZhc1N0YXRlLnNjYWxlfVxuICAgICAgICAgICAgZWRpdGFibGU9e3RydWV9XG4gICAgICAgICAgLz5cbiAgICAgICAgICBcbiAgICAgICAgICB7LyogR3JpZCBMYXllciAqL31cbiAgICAgICAgICA8R3JpZExheWVyXG4gICAgICAgICAgICB3aWR0aD17Q0FOVkFTX1NJWkVfUElYRUxTfVxuICAgICAgICAgICAgaGVpZ2h0PXtDQU5WQVNfU0laRV9QSVhFTFN9XG4gICAgICAgICAgICBzY2FsZT17Y2FudmFzU3RhdGUuc2NhbGV9XG4gICAgICAgICAgICB4PXtjYW52YXNTdGF0ZS54fVxuICAgICAgICAgICAgeT17Y2FudmFzU3RhdGUueX1cbiAgICAgICAgICAgIHZpc2libGU9e2dyaWRWaXNpYmxlfVxuICAgICAgICAgICAgZ3JpZFNpemU9e1BJWEVMU19QRVJfRk9PVH0gLy8gMTAgcGl4ZWxzID0gMSBmb290IGZvciAyNTBrIHNxIGZ0IGNhbnZhc1xuICAgICAgICAgIC8+XG4gICAgICAgICAgXG4gICAgICAgICAgey8qIEVxdWlwbWVudCBMYXllciAqL31cbiAgICAgICAgICA8RXF1aXBtZW50TGF5ZXJcbiAgICAgICAgICAgIGVxdWlwbWVudD17cGxhY2VkRXF1aXBtZW50fVxuICAgICAgICAgICAgZXF1aXBtZW50RGVmaW5pdGlvbnM9e2VxdWlwbWVudERlZmluaXRpb25zfVxuICAgICAgICAgICAgc2NhbGU9e2NhbnZhc1N0YXRlLnNjYWxlfVxuICAgICAgICAgICAgb25FcXVpcG1lbnRTZWxlY3Q9e29uRXF1aXBtZW50U2VsZWN0fVxuICAgICAgICAgICAgb25FcXVpcG1lbnRNb3ZlPXtvbkVxdWlwbWVudE1vdmV9XG4gICAgICAgICAgICBvbkVxdWlwbWVudFJvdGF0ZT17b25FcXVpcG1lbnRSb3RhdGV9XG4gICAgICAgICAgICBvbkVxdWlwbWVudERlbGV0ZT17b25FcXVpcG1lbnREZWxldGV9XG4gICAgICAgICAgICBzZWxlY3RlZEVxdWlwbWVudElkPXtzZWxlY3RlZEVxdWlwbWVudElkfVxuICAgICAgICAgICAgc25hcFRvR3JpZD17dHJ1ZX1cbiAgICAgICAgICAgIGdyaWRTaXplPXtQSVhFTFNfUEVSX0ZPT1R9XG4gICAgICAgICAgLz5cbiAgICAgICAgICBcbiAgICAgICAgICB7LyogRW5oYW5jZWQgTWVhc3VyZW1lbnQgVG9vbCAqL31cbiAgICAgICAgICA8RW5oYW5jZWRNZWFzdXJlbWVudFRvb2xcbiAgICAgICAgICAgIGlzQWN0aXZlPXttZWFzdXJlbWVudFRvb2xBY3RpdmUgJiYgIWFjdGl2ZU1lYXN1cmVtZW50VG9vbH1cbiAgICAgICAgICAgIGVkaXRNb2RlPXttZWFzdXJlbWVudEVkaXRNb2RlfVxuICAgICAgICAgICAgc2NhbGU9e2NhbnZhc1N0YXRlLnNjYWxlfVxuICAgICAgICAgICAgcGl4ZWxzUGVyRm9vdD17UElYRUxTX1BFUl9GT09UfVxuICAgICAgICAgICAgY3VycmVudE1lYXN1cmVtZW50PXtjdXJyZW50TWVhc3VyZW1lbnR9XG4gICAgICAgICAgICBvblBvaW50U2V0PXtoYW5kbGVFbmhhbmNlZE1lYXN1cmVtZW50UG9pbnRTZXR9XG4gICAgICAgICAgICBvbk1lYXN1cmVtZW50Q29tcGxldGU9eyhkaXN0YW5jZSkgPT4ge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZygnRW5oYW5jZWQgbWVhc3VyZW1lbnQgY29tcGxldGVkOicsIGRpc3RhbmNlKTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICBvbk1lYXN1cmVtZW50RWRpdD17aGFuZGxlRW5oYW5jZWRNZWFzdXJlbWVudEVkaXR9XG4gICAgICAgICAgLz5cbiAgICAgICAgICBcbiAgICAgICAgICB7LyogTGVnYWN5IE1lYXN1cmVtZW50IFRvb2wgKi99XG4gICAgICAgICAgPE1lYXN1cmVtZW50VG9vbFxuICAgICAgICAgICAgaXNBY3RpdmU9e2ZhbHNlfSAvLyBEaXNhYmxlZCBpbiBmYXZvciBvZiBlbmhhbmNlZCB0b29sXG4gICAgICAgICAgICBzY2FsZT17Y2FudmFzU3RhdGUuc2NhbGV9XG4gICAgICAgICAgICBwaXhlbHNQZXJGb290PXtQSVhFTFNfUEVSX0ZPT1R9XG4gICAgICAgICAgICBvbk1lYXN1cmVtZW50Q29tcGxldGU9eyhtZWFzdXJlbWVudCkgPT4ge1xuICAgICAgICAgICAgICBzZXRNZWFzdXJlbWVudHMocHJldiA9PiBbLi4ucHJldiwgbWVhc3VyZW1lbnRdKTtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ05ldyBtZWFzdXJlbWVudDonLCBtZWFzdXJlbWVudCk7XG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgb25TaG93RGlzdGFuY2VJbnB1dD17aGFuZGxlU2hvd0Rpc3RhbmNlSW5wdXR9XG4gICAgICAgICAgLz5cbiAgICAgICAgICBcbiAgICAgICAgICB7LyogU2ltcGxlIE1lYXN1cmVtZW50IFRvb2xzICovfVxuICAgICAgICAgIDxTaW1wbGVNZWFzdXJlbWVudFRvb2xcbiAgICAgICAgICAgIGFjdGl2ZVRvb2w9e2FjdGl2ZU1lYXN1cmVtZW50VG9vbH1cbiAgICAgICAgICAgIHNjYWxlPXtjYW52YXNTdGF0ZS5zY2FsZX1cbiAgICAgICAgICAgIHBpeGVsc1BlckZvb3Q9e1BJWEVMU19QRVJfRk9PVH1cbiAgICAgICAgICAgIG1lYXN1cmVtZW50cz17c2ltcGxlTWVhc3VyZW1lbnRzfVxuICAgICAgICAgICAgb25NZWFzdXJlbWVudENvbXBsZXRlPXsobWVhc3VyZW1lbnQpID0+IHtcbiAgICAgICAgICAgICAgc2V0U2ltcGxlTWVhc3VyZW1lbnRzKHByZXYgPT4gWy4uLnByZXYsIG1lYXN1cmVtZW50XSlcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICBvbk1lYXN1cmVtZW50RGVsZXRlPXsoaWQpID0+IHtcbiAgICAgICAgICAgICAgc2V0U2ltcGxlTWVhc3VyZW1lbnRzKHByZXYgPT4gcHJldi5maWx0ZXIobSA9PiBtLmlkICE9PSBpZCkpXG4gICAgICAgICAgICB9fVxuICAgICAgICAgIC8+XG4gICAgICAgICAgXG4gICAgICAgICAgey8qIFNjYWxlIEJhciBPdmVybGF5ICovfVxuICAgICAgICAgIHtzY2FsZUJhclZpc2libGUgJiYgKFxuICAgICAgICAgICAgPFNjYWxlQmFyXG4gICAgICAgICAgICAgIHNjYWxlPXtjYW52YXNTdGF0ZS5zY2FsZX1cbiAgICAgICAgICAgICAgY2FudmFzV2lkdGg9e3N0YWdlU2l6ZS53aWR0aH1cbiAgICAgICAgICAgICAgY2FudmFzSGVpZ2h0PXtzdGFnZVNpemUuaGVpZ2h0fVxuICAgICAgICAgICAgICBwaXhlbHNQZXJGb290PXtQSVhFTFNfUEVSX0ZPT1R9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvTGF5ZXI+XG4gICAgICA8L1N0YWdlPlxuICAgICAgXG4gICAgICB7LyogQmFja2dyb3VuZCBJbWFnZSBNYW5hZ2VyIE1vZGFsICovfVxuICAgICAgPEJhY2tncm91bmRJbWFnZU1hbmFnZXJcbiAgICAgICAgaW1hZ2VzPXtiYWNrZ3JvdW5kSW1hZ2VzfVxuICAgICAgICBvbkltYWdlQWRkPXtoYW5kbGVCYWNrZ3JvdW5kSW1hZ2VBZGR9XG4gICAgICAgIG9uSW1hZ2VVcGRhdGU9e29uQmFja2dyb3VuZEltYWdlVXBkYXRlIHx8ICgoKSA9PiB7fSl9XG4gICAgICAgIG9uSW1hZ2VEZWxldGU9e29uQmFja2dyb3VuZEltYWdlRGVsZXRlIHx8ICgoKSA9PiB7fSl9XG4gICAgICAgIG9uSW1hZ2VTZWxlY3Q9e2hhbmRsZUJhY2tncm91bmRJbWFnZVNlbGVjdH1cbiAgICAgICAgc2VsZWN0ZWRJbWFnZUlkPXtzZWxlY3RlZEJhY2tncm91bmRJbWFnZUlkfVxuICAgICAgICBpc09wZW49e2JhY2tncm91bmRNYW5hZ2VyT3Blbn1cbiAgICAgICAgb25DbG9zZT17KCkgPT4gc2V0QmFja2dyb3VuZE1hbmFnZXJPcGVuKGZhbHNlKX1cbiAgICAgIC8+XG4gICAgICBcbiAgICAgIHsvKiBEaXN0YW5jZSBJbnB1dCBNb2RhbCAqL31cbiAgICAgIDxEaXN0YW5jZUlucHV0TW9kYWxcbiAgICAgICAgaXNPcGVuPXtzaG93RGlzdGFuY2VJbnB1dH1cbiAgICAgICAgY2FsY3VsYXRlZERpc3RhbmNlPXtkaXN0YW5jZUlucHV0RGF0YT8uY2FsY3VsYXRlZERpc3RhbmNlIHx8IDB9XG4gICAgICAgIG9uU3VibWl0PXtkaXN0YW5jZUlucHV0RGF0YT8ub25TdWJtaXQgfHwgKCgpID0+IHt9KX1cbiAgICAgICAgb25DYW5jZWw9e2Rpc3RhbmNlSW5wdXREYXRhPy5vbkNhbmNlbCB8fCAoKCkgPT4ge30pfVxuICAgICAgLz5cbiAgICAgIFxuICAgICAgey8qIEVuaGFuY2VkIENhbGlicmF0ZSBEaWFsb2cgKi99XG4gICAgICA8RW5oYW5jZWRDYWxpYnJhdGVEaWFsb2dcbiAgICAgICAgaXNPcGVuPXtzaG93Q2FsaWJyYXRlRGlhbG9nfVxuICAgICAgICBjYWxjdWxhdGVkRGlzdGFuY2U9e2N1cnJlbnRNZWFzdXJlbWVudCAmJiBjdXJyZW50TWVhc3VyZW1lbnQuZmlyc3RQb2ludCAmJiBjdXJyZW50TWVhc3VyZW1lbnQuc2Vjb25kUG9pbnQgXG4gICAgICAgICAgPyBNYXRoLnNxcnQoXG4gICAgICAgICAgICAgIE1hdGgucG93KGN1cnJlbnRNZWFzdXJlbWVudC5zZWNvbmRQb2ludC54IC0gY3VycmVudE1lYXN1cmVtZW50LmZpcnN0UG9pbnQueCwgMikgK1xuICAgICAgICAgICAgICBNYXRoLnBvdyhjdXJyZW50TWVhc3VyZW1lbnQuc2Vjb25kUG9pbnQueSAtIGN1cnJlbnRNZWFzdXJlbWVudC5maXJzdFBvaW50LnksIDIpXG4gICAgICAgICAgICApIC8gUElYRUxTX1BFUl9GT09UXG4gICAgICAgICAgOiAwXG4gICAgICAgIH1cbiAgICAgICAgb25TdWJtaXQ9e2hhbmRsZUNhbGlicmF0ZVN1Ym1pdH1cbiAgICAgICAgb25FZGl0PXtoYW5kbGVDYWxpYnJhdGVFZGl0fVxuICAgICAgICBvbkNhbmNlbD17aGFuZGxlQ2FsaWJyYXRlQ2FuY2VsfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBDYW52YXNFZGl0b3JcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVJlZiIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwidXNlQ2FsbGJhY2siLCJTdGFnZSIsIkxheWVyIiwiR3JpZExheWVyIiwiRXF1aXBtZW50TGF5ZXIiLCJCYWNrZ3JvdW5kTGF5ZXIiLCJCYWNrZ3JvdW5kSW1hZ2VNYW5hZ2VyIiwiU2NhbGVCYXIiLCJNZWFzdXJlbWVudFRvb2wiLCJEaXN0YW5jZUlucHV0TW9kYWwiLCJTaW1wbGVNZWFzdXJlbWVudFRvb2wiLCJFbmhhbmNlZE1lYXN1cmVtZW50VG9vbCIsIkVuaGFuY2VkQ2FsaWJyYXRlRGlhbG9nIiwiQ2FudmFzRWRpdG9yIiwid2lkdGgiLCJoZWlnaHQiLCJjbGFzc05hbWUiLCJvbkVxdWlwbWVudEFkZCIsInBsYWNlZEVxdWlwbWVudCIsImVxdWlwbWVudERlZmluaXRpb25zIiwib25FcXVpcG1lbnRTZWxlY3QiLCJvbkVxdWlwbWVudE1vdmUiLCJvbkVxdWlwbWVudFJvdGF0ZSIsIm9uRXF1aXBtZW50RGVsZXRlIiwic2VsZWN0ZWRFcXVpcG1lbnRJZCIsImJhY2tncm91bmRJbWFnZXMiLCJvbkJhY2tncm91bmRJbWFnZUFkZCIsIm9uQmFja2dyb3VuZEltYWdlVXBkYXRlIiwib25CYWNrZ3JvdW5kSW1hZ2VEZWxldGUiLCJvbkNhbnZhc1JlYWR5Iiwic3RhZ2VSZWYiLCJpc0NsaWVudCIsInNldElzQ2xpZW50IiwiQ0FOVkFTX0FSRUFfU1FfRlQiLCJDQU5WQVNfU0lERV9GVCIsIk1hdGgiLCJzcXJ0IiwiUElYRUxTX1BFUl9GT09UIiwiQ0FOVkFTX1NJWkVfUElYRUxTIiwiY2FudmFzU3RhdGUiLCJzZXRDYW52YXNTdGF0ZSIsInNjYWxlIiwieCIsInkiLCJzdGFnZVNpemUiLCJzZXRTdGFnZVNpemUiLCJncmlkVmlzaWJsZSIsInNldEdyaWRWaXNpYmxlIiwiYmFja2dyb3VuZE1hbmFnZXJPcGVuIiwic2V0QmFja2dyb3VuZE1hbmFnZXJPcGVuIiwic2VsZWN0ZWRCYWNrZ3JvdW5kSW1hZ2VJZCIsInNldFNlbGVjdGVkQmFja2dyb3VuZEltYWdlSWQiLCJzY2FsZUJhclZpc2libGUiLCJzZXRTY2FsZUJhclZpc2libGUiLCJtZWFzdXJlbWVudFRvb2xBY3RpdmUiLCJzZXRNZWFzdXJlbWVudFRvb2xBY3RpdmUiLCJtZWFzdXJlbWVudHMiLCJzZXRNZWFzdXJlbWVudHMiLCJhY3RpdmVNZWFzdXJlbWVudFRvb2wiLCJzZXRBY3RpdmVNZWFzdXJlbWVudFRvb2wiLCJzaW1wbGVNZWFzdXJlbWVudHMiLCJzZXRTaW1wbGVNZWFzdXJlbWVudHMiLCJzaG93RGlzdGFuY2VJbnB1dCIsInNldFNob3dEaXN0YW5jZUlucHV0IiwiZGlzdGFuY2VJbnB1dERhdGEiLCJzZXREaXN0YW5jZUlucHV0RGF0YSIsIm1lYXN1cmVtZW50RWRpdE1vZGUiLCJzZXRNZWFzdXJlbWVudEVkaXRNb2RlIiwiY3VycmVudE1lYXN1cmVtZW50Iiwic2V0Q3VycmVudE1lYXN1cmVtZW50Iiwic2hvd0NhbGlicmF0ZURpYWxvZyIsInNldFNob3dDYWxpYnJhdGVEaWFsb2ciLCJ0aW1lb3V0Iiwic2V0VGltZW91dCIsImN1cnJlbnQiLCJjb250YWluZXIiLCJjb25zb2xlIiwibG9nIiwiY2xlYXJUaW1lb3V0IiwiaGFuZGxlUmVzaXplIiwicGFyZW50IiwicGFyZW50RWxlbWVudCIsImNvbnRhaW5lcldpZHRoIiwiY2xpZW50V2lkdGgiLCJvZmZzZXRXaWR0aCIsImNvbnRhaW5lckhlaWdodCIsImNsaWVudEhlaWdodCIsIm9mZnNldEhlaWdodCIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiaGFuZGxlV2hlZWwiLCJlIiwiZXZ0IiwicHJldmVudERlZmF1bHQiLCJzdGFnZSIsInRhcmdldCIsImdldFN0YWdlIiwib2xkU2NhbGUiLCJzY2FsZVgiLCJwb2ludGVyIiwiZ2V0UG9pbnRlclBvc2l0aW9uIiwic2NhbGVCeSIsIm5ld1NjYWxlIiwiZGVsdGFZIiwibWluU2NhbGUiLCJtYXhTY2FsZSIsImNsYW1wZWRTY2FsZSIsIm1heCIsIm1pbiIsIm1vdXNlUG9pbnRUbyIsIm5ld1BvcyIsInBvc2l0aW9uIiwiYmF0Y2hEcmF3IiwiaGFuZGxlRHJhZ0VuZCIsInByZXYiLCJyZXNldENhbnZhcyIsImRlZmF1bHRTY2FsZSIsImNlbnRlclgiLCJjZW50ZXJZIiwiZml0VG9Db250ZW50IiwibGVuZ3RoIiwibWluWCIsIkluZmluaXR5IiwibWF4WCIsIm1pblkiLCJtYXhZIiwiZm9yRWFjaCIsImVxdWlwbWVudCIsImVxdWlwbWVudERlZiIsImZpbmQiLCJkZWYiLCJpZCIsImVxdWlwbWVudElkIiwiZGltZW5zaW9ucyIsImlzQ2lyY3VsYXIiLCJzaGFwZSIsImNsZWFyYW5jZSIsInJpZGVDbGVhcmluZyIsImNsZWFyYW5jZVBpeGVscyIsImVxdWlwbWVudE1pblgiLCJlcXVpcG1lbnRNYXhYIiwiZXF1aXBtZW50TWluWSIsImVxdWlwbWVudE1heFkiLCJyYWRpdXMiLCJwYWRkaW5nIiwiY29udGVudFdpZHRoIiwiY29udGVudEhlaWdodCIsInNjYWxlWSIsIm9wdGltYWxTY2FsZSIsIm5ld1giLCJuZXdZIiwiY29udGVudEJvdW5kcyIsImNlbnRlciIsInpvb21JbiIsInpvb21PdXQiLCJnZXRWaXNpYmxlQm91bmRzIiwiYnVmZmVyIiwiaGFuZGxlTWVhc3VyZW1lbnRUb29sQ2xpY2siLCJoYW5kbGVycyIsIm1lYXN1cmVtZW50VG9vbEhhbmRsZXJzIiwiaGFuZGxlQ2xpY2siLCJoYW5kbGVNZWFzdXJlbWVudFRvb2xEb3VibGVDbGljayIsIm0iLCJjb21wbGV0ZWQiLCJwb2ludHMiLCJ2YWx1ZSIsImxhYmVsIiwiYXJlYSIsIm4iLCJpIiwiaiIsImFicyIsInRvRml4ZWQiLCJwZXJpbWV0ZXIiLCJkeCIsImR5IiwiY29tcGxldGVkTWVhc3VyZW1lbnQiLCJtYXAiLCJoYW5kbGVFbmhhbmNlZE1lYXN1cmVtZW50UG9pbnRTZXQiLCJwb2ludCIsImZpcnN0UG9pbnQiLCJzZWNvbmRQb2ludCIsInVwZGF0ZWRNZWFzdXJlbWVudCIsImlzQ29tcGxldGUiLCJwaXhlbERpc3RhbmNlIiwiY2FsY3VsYXRlZERpc3RhbmNlIiwiaGFuZGxlRW5oYW5jZWRNZWFzdXJlbWVudEVkaXQiLCJoYW5kbGVDYWxpYnJhdGVTdWJtaXQiLCJhY3R1YWxEaXN0YW5jZSIsInNjYWxlRmFjdG9yIiwicmVhbFdvcmxkRGlzdGFuY2UiLCJpbWFnZSIsImhhbmRsZUNhbGlicmF0ZUVkaXQiLCJoYW5kbGVDYWxpYnJhdGVDYW5jZWwiLCJoYW5kbGVDYW52YXNDbGljayIsImNhbnZhc1giLCJjYW52YXNZIiwibmV3UG9pbnQiLCJzb21lIiwidXBkYXRlZFBvaW50cyIsImRpc3RhbmNlIiwicG93IiwibmV3TWVhc3VyZW1lbnQiLCJEYXRlIiwibm93IiwidHlwZSIsImhhbmRsZVN0YWdlQ2xpY2siLCJjbGlja2VkT25FbXB0eSIsInBvcyIsImVuaGFuY2VkTWVhc3VyZW1lbnRIYW5kbGVycyIsImhhbmRsZVN0YWdlRG91YmxlQ2xpY2siLCJhcmVhSW5TcUZ0Iiwicm91bmQiLCJ0b0xvY2FsZVN0cmluZyIsInBlcmltZXRlckluRnQiLCJoYW5kbGVCYWNrZ3JvdW5kSW1hZ2VBZGQiLCJpbWFnZVdpdGhJZCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwiaGFuZGxlQmFja2dyb3VuZEltYWdlU2VsZWN0IiwiaW1hZ2VJZCIsImNhbGlicmF0ZUltYWdlU2NhbGUiLCJzY2FsZUNvcnJlY3Rpb24iLCJoYW5kbGVTaG93RGlzdGFuY2VJbnB1dCIsIm9uU3VibWl0Iiwib25DYW5jZWwiLCJkaXYiLCJidXR0b24iLCJvbkNsaWNrIiwidGl0bGUiLCJtYXhXaWR0aCIsIm1heEhlaWdodCIsInRhcmdldEltYWdlIiwiaW1nIiwiaW1nV2lkdGgiLCJpbWdIZWlnaHQiLCJpbWdBcmVhIiwiY3VycmVudE1heEFyZWEiLCJmaXRTY2FsZSIsImFkanVzdGVkWCIsImFkanVzdGVkWSIsImRpc2FibGVkIiwicmVmIiwiZHJhZ2dhYmxlIiwib25XaGVlbCIsIm9uRHJhZ0VuZCIsIm9uRGJsQ2xpY2siLCJvbkNvbnRlbnRNb3VzZURvd24iLCJpbWFnZXMiLCJvbkltYWdlVXBkYXRlIiwib25JbWFnZURlbGV0ZSIsIm9uSW1hZ2VTZWxlY3QiLCJzZWxlY3RlZEltYWdlSWQiLCJlZGl0YWJsZSIsInZpc2libGUiLCJncmlkU2l6ZSIsInNuYXBUb0dyaWQiLCJpc0FjdGl2ZSIsImVkaXRNb2RlIiwicGl4ZWxzUGVyRm9vdCIsIm9uUG9pbnRTZXQiLCJvbk1lYXN1cmVtZW50Q29tcGxldGUiLCJvbk1lYXN1cmVtZW50RWRpdCIsIm1lYXN1cmVtZW50Iiwib25TaG93RGlzdGFuY2VJbnB1dCIsImFjdGl2ZVRvb2wiLCJvbk1lYXN1cmVtZW50RGVsZXRlIiwiZmlsdGVyIiwiY2FudmFzV2lkdGgiLCJjYW52YXNIZWlnaHQiLCJvbkltYWdlQWRkIiwiaXNPcGVuIiwib25DbG9zZSIsIm9uRWRpdCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/canvas/CanvasEditor.tsx\n"));

/***/ })

});